(()=>{var e={134:(e,t,a)=>{"use strict";a.r(t),a.d(t,{AnonymousCredential:()=>pr,AnonymousCredentialPolicy:()=>dr,AppendBlobClient:()=>ec,BaseRequestPolicy:()=>pa,BlobBatch:()=>mc,BlobBatchClient:()=>dc,BlobClient:()=>Yd,BlobLeaseClient:()=>Ad,BlobServiceClient:()=>hc,BlockBlobClient:()=>tc,BlockBlobTier:()=>Rd,ContainerClient:()=>cc,Credential:()=>cr,CredentialPolicy:()=>lr,KnownEncryptionAlgorithmType:()=>sc,PageBlobClient:()=>ac,Pipeline:()=>Sr,PremiumPageBlobTier:()=>qd,RestError:()=>He,StorageBrowserPolicy:()=>br,StorageBrowserPolicyFactory:()=>Nr,StorageOAuthScopes:()=>xa,StorageRetryPolicy:()=>sr,StorageRetryPolicyFactory:()=>or,StorageRetryPolicyType:()=>rr,isPipelineLike:()=>fr,logger:()=>ca,newPipeline:()=>vr});var r={};a.r(r),a.d(r,{AccessPolicy:()=>Jr,AppendBlobAppendBlockExceptionHeaders:()=>Ts,AppendBlobAppendBlockFromUrlExceptionHeaders:()=>As,AppendBlobAppendBlockFromUrlHeaders:()=>Is,AppendBlobAppendBlockHeaders:()=>Ms,AppendBlobCreateExceptionHeaders:()=>Es,AppendBlobCreateHeaders:()=>Os,AppendBlobSealExceptionHeaders:()=>Ds,AppendBlobSealHeaders:()=>Hs,ArrowConfiguration:()=>xi,ArrowField:()=>bi,BlobAbortCopyFromURLExceptionHeaders:()=>ts,BlobAbortCopyFromURLHeaders:()=>es,BlobAcquireLeaseExceptionHeaders:()=>Ln,BlobAcquireLeaseHeaders:()=>kn,BlobBreakLeaseExceptionHeaders:()=>Gn,BlobBreakLeaseHeaders:()=>Kn,BlobChangeLeaseExceptionHeaders:()=>Vn,BlobChangeLeaseHeaders:()=>Fn,BlobCopyFromURLExceptionHeaders:()=>Yn,BlobCopyFromURLHeaders:()=>Zn,BlobCreateSnapshotExceptionHeaders:()=>Wn,BlobCreateSnapshotHeaders:()=>Xn,BlobDeleteExceptionHeaders:()=>Cn,BlobDeleteHeaders:()=>vn,BlobDeleteImmutabilityPolicyExceptionHeaders:()=>Tn,BlobDeleteImmutabilityPolicyHeaders:()=>Mn,BlobDownloadExceptionHeaders:()=>Nn,BlobDownloadHeaders:()=>bn,BlobFlatListSegment:()=>Yr,BlobGetAccountInfoExceptionHeaders:()=>ns,BlobGetAccountInfoHeaders:()=>is,BlobGetPropertiesExceptionHeaders:()=>Sn,BlobGetPropertiesHeaders:()=>fn,BlobGetTagsExceptionHeaders:()=>ls,BlobGetTagsHeaders:()=>ms,BlobHierarchyListSegment:()=>ii,BlobItemInternal:()=>ei,BlobName:()=>ti,BlobPrefix:()=>ni,BlobPropertiesInternal:()=>ai,BlobQueryExceptionHeaders:()=>os,BlobQueryHeaders:()=>ss,BlobReleaseLeaseExceptionHeaders:()=>Un,BlobReleaseLeaseHeaders:()=>jn,BlobRenewLeaseExceptionHeaders:()=>$n,BlobRenewLeaseHeaders:()=>_n,BlobServiceProperties:()=>Mr,BlobServiceStatistics:()=>Lr,BlobSetExpiryExceptionHeaders:()=>Rn,BlobSetExpiryHeaders:()=>wn,BlobSetHttpHeadersExceptionHeaders:()=>Bn,BlobSetHttpHeadersHeaders:()=>qn,BlobSetImmutabilityPolicyExceptionHeaders:()=>En,BlobSetImmutabilityPolicyHeaders:()=>On,BlobSetLegalHoldExceptionHeaders:()=>An,BlobSetLegalHoldHeaders:()=>In,BlobSetMetadataExceptionHeaders:()=>Dn,BlobSetMetadataHeaders:()=>Hn,BlobSetTagsExceptionHeaders:()=>cs,BlobSetTagsHeaders:()=>ds,BlobSetTierExceptionHeaders:()=>rs,BlobSetTierHeaders:()=>as,BlobStartCopyFromURLExceptionHeaders:()=>Jn,BlobStartCopyFromURLHeaders:()=>Qn,BlobTag:()=>Wr,BlobTags:()=>Xr,BlobUndeleteExceptionHeaders:()=>zn,BlobUndeleteHeaders:()=>Pn,Block:()=>mi,BlockBlobCommitBlockListExceptionHeaders:()=>Gs,BlockBlobCommitBlockListHeaders:()=>Ks,BlockBlobGetBlockListExceptionHeaders:()=>Ws,BlockBlobGetBlockListHeaders:()=>Xs,BlockBlobPutBlobFromUrlExceptionHeaders:()=>Us,BlockBlobPutBlobFromUrlHeaders:()=>js,BlockBlobStageBlockExceptionHeaders:()=>$s,BlockBlobStageBlockFromURLExceptionHeaders:()=>Vs,BlockBlobStageBlockFromURLHeaders:()=>Fs,BlockBlobStageBlockHeaders:()=>_s,BlockBlobUploadExceptionHeaders:()=>Ls,BlockBlobUploadHeaders:()=>ks,BlockList:()=>oi,BlockLookupList:()=>si,ClearRange:()=>ci,ContainerAcquireLeaseExceptionHeaders:()=>an,ContainerAcquireLeaseHeaders:()=>tn,ContainerBreakLeaseExceptionHeaders:()=>ln,ContainerBreakLeaseHeaders:()=>mn,ContainerChangeLeaseExceptionHeaders:()=>cn,ContainerChangeLeaseHeaders:()=>dn,ContainerCreateExceptionHeaders:()=>Hi,ContainerCreateHeaders:()=>Ai,ContainerDeleteExceptionHeaders:()=>ji,ContainerDeleteHeaders:()=>Li,ContainerFilterBlobsExceptionHeaders:()=>en,ContainerFilterBlobsHeaders:()=>Yi,ContainerGetAccessPolicyExceptionHeaders:()=>Fi,ContainerGetAccessPolicyHeaders:()=>$i,ContainerGetAccountInfoExceptionHeaders:()=>xn,ContainerGetAccountInfoHeaders:()=>hn,ContainerGetPropertiesExceptionHeaders:()=>ki,ContainerGetPropertiesHeaders:()=>Di,ContainerItem:()=>_r,ContainerListBlobFlatSegmentExceptionHeaders:()=>un,ContainerListBlobFlatSegmentHeaders:()=>pn,ContainerListBlobHierarchySegmentExceptionHeaders:()=>gn,ContainerListBlobHierarchySegmentHeaders:()=>yn,ContainerProperties:()=>$r,ContainerReleaseLeaseExceptionHeaders:()=>nn,ContainerReleaseLeaseHeaders:()=>rn,ContainerRenameExceptionHeaders:()=>Qi,ContainerRenameHeaders:()=>Wi,ContainerRenewLeaseExceptionHeaders:()=>on,ContainerRenewLeaseHeaders:()=>sn,ContainerRestoreExceptionHeaders:()=>Xi,ContainerRestoreHeaders:()=>Gi,ContainerSetAccessPolicyExceptionHeaders:()=>Ki,ContainerSetAccessPolicyHeaders:()=>Vi,ContainerSetMetadataExceptionHeaders:()=>_i,ContainerSetMetadataHeaders:()=>Ui,ContainerSubmitBatchExceptionHeaders:()=>Zi,ContainerSubmitBatchHeaders:()=>Ji,CorsRule:()=>Hr,DelimitedTextConfiguration:()=>gi,FilterBlobItem:()=>Gr,FilterBlobSegment:()=>Kr,GeoReplication:()=>jr,JsonTextConfiguration:()=>hi,KeyInfo:()=>Fr,ListBlobsFlatSegmentResponse:()=>Zr,ListBlobsHierarchySegmentResponse:()=>ri,ListContainersSegmentResponse:()=>Ur,Logging:()=>Tr,Metrics:()=>Ar,PageBlobClearPagesExceptionHeaders:()=>xs,PageBlobClearPagesHeaders:()=>hs,PageBlobCopyIncrementalExceptionHeaders:()=>Bs,PageBlobCopyIncrementalHeaders:()=>qs,PageBlobCreateExceptionHeaders:()=>us,PageBlobCreateHeaders:()=>ps,PageBlobGetPageRangesDiffExceptionHeaders:()=>Cs,PageBlobGetPageRangesDiffHeaders:()=>vs,PageBlobGetPageRangesExceptionHeaders:()=>Ss,PageBlobGetPageRangesHeaders:()=>fs,PageBlobResizeExceptionHeaders:()=>zs,PageBlobResizeHeaders:()=>Ps,PageBlobUpdateSequenceNumberExceptionHeaders:()=>Rs,PageBlobUpdateSequenceNumberHeaders:()=>ws,PageBlobUploadPagesExceptionHeaders:()=>gs,PageBlobUploadPagesFromURLExceptionHeaders:()=>Ns,PageBlobUploadPagesFromURLHeaders:()=>bs,PageBlobUploadPagesHeaders:()=>ys,PageList:()=>li,PageRange:()=>di,QueryFormat:()=>yi,QueryRequest:()=>pi,QuerySerialization:()=>ui,RetentionPolicy:()=>Ir,ServiceFilterBlobsExceptionHeaders:()=>Ii,ServiceFilterBlobsHeaders:()=>Ti,ServiceGetAccountInfoExceptionHeaders:()=>Oi,ServiceGetAccountInfoHeaders:()=>Bi,ServiceGetPropertiesExceptionHeaders:()=>vi,ServiceGetPropertiesHeaders:()=>Si,ServiceGetStatisticsExceptionHeaders:()=>Pi,ServiceGetStatisticsHeaders:()=>Ci,ServiceGetUserDelegationKeyExceptionHeaders:()=>qi,ServiceGetUserDelegationKeyHeaders:()=>Ri,ServiceListContainersSegmentExceptionHeaders:()=>wi,ServiceListContainersSegmentHeaders:()=>zi,ServiceSetPropertiesExceptionHeaders:()=>fi,ServiceSetPropertiesHeaders:()=>Ni,ServiceSubmitBatchExceptionHeaders:()=>Mi,ServiceSubmitBatchHeaders:()=>Ei,SignedIdentifier:()=>Qr,StaticWebsite:()=>Dr,StorageError:()=>kr,UserDelegationKey:()=>Vr});const i=new Set(["Deserialize","Serialize","Retry","Sign"]);class n{constructor(e){var t;this._policies=[],this._policies=null!==(t=null==e?void 0:e.slice(0))&&void 0!==t?t:[],this._orderedPolicies=void 0}addPolicy(e,t={}){if(t.phase&&t.afterPhase)throw new Error("Policies inside a phase cannot specify afterPhase.");if(t.phase&&!i.has(t.phase))throw new Error(`Invalid phase name: ${t.phase}`);if(t.afterPhase&&!i.has(t.afterPhase))throw new Error(`Invalid afterPhase name: ${t.afterPhase}`);this._policies.push({policy:e,options:t}),this._orderedPolicies=void 0}removePolicy(e){const t=[];return this._policies=this._policies.filter((a=>!(e.name&&a.policy.name===e.name||e.phase&&a.options.phase===e.phase)||(t.push(a.policy),!1))),this._orderedPolicies=void 0,t}sendRequest(e,t){return this.getOrderedPolicies().reduceRight(((e,t)=>a=>t.sendRequest(a,e)),(t=>e.sendRequest(t)))(t)}getOrderedPolicies(){return this._orderedPolicies||(this._orderedPolicies=this.orderPolicies()),this._orderedPolicies}clone(){return new n(this._policies)}static create(){return new n}orderPolicies(){const e=[],t=new Map;function a(e){return{name:e,policies:new Set,hasRun:!1,hasAfterPolicies:!1}}const r=a("Serialize"),i=a("None"),n=a("Deserialize"),s=a("Retry"),o=a("Sign"),m=[r,i,n,s,o];function l(e){return"Retry"===e?s:"Serialize"===e?r:"Deserialize"===e?n:"Sign"===e?o:i}for(const e of this._policies){const a=e.policy,r=e.options,i=a.name;if(t.has(i))throw new Error("Duplicate policy names not allowed in pipeline");const n={policy:a,dependsOn:new Set,dependants:new Set};r.afterPhase&&(n.afterPhase=l(r.afterPhase),n.afterPhase.hasAfterPolicies=!0),t.set(i,n),l(r.phase).policies.add(n)}for(const e of this._policies){const{policy:a,options:r}=e,i=a.name,n=t.get(i);if(!n)throw new Error(`Missing node for policy ${i}`);if(r.afterPolicies)for(const e of r.afterPolicies){const a=t.get(e);a&&(n.dependsOn.add(a),a.dependants.add(n))}if(r.beforePolicies)for(const e of r.beforePolicies){const a=t.get(e);a&&(a.dependsOn.add(n),n.dependants.add(a))}}function d(a){a.hasRun=!0;for(const r of a.policies)if((!r.afterPhase||r.afterPhase.hasRun&&!r.afterPhase.policies.size)&&0===r.dependsOn.size){e.push(r.policy);for(const e of r.dependants)e.dependsOn.delete(r);t.delete(r.policy.name),a.policies.delete(r)}}function c(){for(const e of m){if(d(e),e.policies.size>0&&e!==i)return void(i.hasRun||d(i));e.hasAfterPolicies&&d(i)}}let p=0;for(;t.size>0;){p++;const t=e.length;if(c(),e.length<=t&&p>1)throw new Error("Cannot satisfy policy dependencies due to requirements cycle.")}return e}}function s(){return n.create()}const o="undefined"!=typeof process&&process.env&&process.env.DEBUG||void 0;let m,l=[],d=[];const c=[];o&&u(o);const p=Object.assign((e=>g(e)),{enable:u,enabled:y,disable:function(){const e=m||"";return u(""),e},log:function(...e){if(e.length>0){const t=String(e[0]);t.includes(":error")?console.error(...e):t.includes(":warning")?console.warn(...e):t.includes(":info")?console.info(...e):(t.includes(":verbose"),console.debug(...e))}}});function u(e){m=e,l=[],d=[];const t=/\*/g,a=e.split(",").map((e=>e.trim().replace(t,".*?")));for(const e of a)e.startsWith("-")?d.push(new RegExp(`^${e.substr(1)}$`)):l.push(new RegExp(`^${e}$`));for(const e of c)e.enabled=y(e.namespace)}function y(e){if(e.endsWith("*"))return!0;for(const t of d)if(t.test(e))return!1;for(const t of l)if(t.test(e))return!0;return!1}function g(e){const t=Object.assign((function(...a){t.enabled&&(a.length>0&&(a[0]=`${e} ${a[0]}`),t.log(...a))}),{enabled:y(e),destroy:h,log:p.log,namespace:e,extend:x});return c.push(t),t}function h(){const e=c.indexOf(this);return e>=0&&(c.splice(e,1),!0)}function x(e){const t=g(`${this.namespace}:${e}`);return t.log=this.log,t}const b=p,N=new Set,f="undefined"!=typeof process&&process.env&&process.env.AZURE_LOG_LEVEL||void 0;let S;const v=b("azure");v.log=(...e)=>{b.log(...e)};const C=["verbose","info","warning","error"];f&&(B(f)?function(e){if(e&&!B(e))throw new Error(`Unknown log level '${e}'. Acceptable values: ${C.join(",")}`);S=e;const t=[];for(const e of N)q(e)&&t.push(e.namespace);b.enable(t.join(","))}(f):console.error(`AZURE_LOG_LEVEL set to unknown log level '${f}'; logging is not enabled. Acceptable values: ${C.join(", ")}.`));const P={verbose:400,info:300,warning:200,error:100};function z(e){const t=v.extend(e);return w(v,t),{error:R(t,"error"),warning:R(t,"warning"),info:R(t,"info"),verbose:R(t,"verbose")}}function w(e,t){t.log=(...t)=>{e.log(...t)}}function R(e,t){const a=Object.assign(e.extend(t),{level:t});if(w(e,a),q(a)){const e=b.disable();b.enable(e+","+a.namespace)}return N.add(a),a}function q(e){return Boolean(S&&P[e.level]<=P[S])}function B(e){return C.includes(e)}const O=z("core-rest-pipeline");class E extends Error{constructor(e){super(e),this.name="AbortError"}}function M(e,t){let a;const{abortSignal:r,abortErrorMsg:i}=null!=t?t:{};return function(t,r){const{cleanupBeforeAbort:i,abortSignal:n,abortErrorMsg:s}=null!=r?r:{};return new Promise(((t,r)=>{function o(){r(new E(null!=s?s:"The operation was aborted."))}function m(){null==n||n.removeEventListener("abort",l)}function l(){null==i||i(),m(),o()}if(null==n?void 0:n.aborted)return o();try{(t=>{a=setTimeout(t,e)})((e=>{m(),t(e)}))}catch(e){r(e)}null==n||n.addEventListener("abort",l)}))}(0,{cleanupBeforeAbort:()=>clearTimeout(a),abortSignal:r,abortErrorMsg:null!=i?i:"The delay was aborted."})}function T(e){return!("object"!=typeof e||null===e||Array.isArray(e)||e instanceof RegExp||e instanceof Date)}function I(e){if(T(e)){const t="string"==typeof e.name,a="string"==typeof e.message;return t&&a}return!1}function A(e){if(I(e))return e.message;{let t;try{t="object"==typeof e&&e?JSON.stringify(e):String(e)}catch(e){t="[unable to stringify input]"}return`Unknown error ${t}`}}function H(e,t){switch(t){case"utf-8":return function(e){return(new TextEncoder).encode(e)}(e);case"base64":return D(e);case"base64url":return function(e){return D(e.replace(/-/g,"+").replace(/_/g,"/"))}(e);case"hex":return function(e){const t=new Uint8Array(e.length/2);for(let a=0;a<e.length/2;++a){const r=e[2*a],i=e[2*a+1];if(!k.has(r)||!k.has(i))return t.slice(0,a);t[a]=parseInt(`${r}${i}`,16)}return t}(e)}}function D(e){return new Uint8Array([...atob(e)].map((e=>e.charCodeAt(0))))}const k=new Set("0123456789abcdefABCDEF");var L;const j="function"==typeof(null===(L=null===globalThis||void 0===globalThis?void 0:globalThis.crypto)||void 0===L?void 0:L.randomUUID)?globalThis.crypto.randomUUID.bind(globalThis.crypto):function(){let e="";for(let t=0;t<32;t++){const a=Math.floor(16*Math.random());e+=12===t?"4":16===t?3&a|8:a.toString(16),7!==t&&11!==t&&15!==t&&19!==t||(e+="-")}return e};function U(){return j()}var _,$,F,V;"undefined"!=typeof window&&window.document,"object"==typeof self&&"function"==typeof(null===self||void 0===self?void 0:self.importScripts)&&("DedicatedWorkerGlobalScope"===(null===(_=self.constructor)||void 0===_?void 0:_.name)||"ServiceWorkerGlobalScope"===(null===($=self.constructor)||void 0===$?void 0:$.name)||null===(F=self.constructor)||void 0===F||F.name),"undefined"!=typeof Deno&&void 0!==Deno.version&&Deno.version.deno,"undefined"!=typeof Bun&&Bun.version;const K=void 0!==globalThis.process&&Boolean(globalThis.process.version)&&Boolean(null===(V=globalThis.process.versions)||void 0===V?void 0:V.node),G=K,X=("undefined"!=typeof navigator&&(null===navigator||void 0===navigator||navigator.product),"REDACTED"),W=["x-ms-client-request-id","x-ms-return-client-request-id","x-ms-useragent","x-ms-correlation-request-id","x-ms-request-id","client-request-id","ms-cv","return-client-request-id","traceparent","Access-Control-Allow-Credentials","Access-Control-Allow-Headers","Access-Control-Allow-Methods","Access-Control-Allow-Origin","Access-Control-Expose-Headers","Access-Control-Max-Age","Access-Control-Request-Headers","Access-Control-Request-Method","Origin","Accept","Accept-Encoding","Cache-Control","Connection","Content-Length","Content-Type","Date","ETag","Expires","If-Match","If-Modified-Since","If-None-Match","If-Unmodified-Since","Last-Modified","Pragma","Request-Id","Retry-After","Server","Transfer-Encoding","User-Agent","WWW-Authenticate"],Q=["api-version"];class J{constructor({additionalAllowedHeaderNames:e=[],additionalAllowedQueryParameters:t=[]}={}){e=W.concat(e),t=Q.concat(t),this.allowedHeaderNames=new Set(e.map((e=>e.toLowerCase()))),this.allowedQueryParameters=new Set(t.map((e=>e.toLowerCase())))}sanitize(e){const t=new Set;return JSON.stringify(e,((e,a)=>{if(a instanceof Error)return Object.assign(Object.assign({},a),{name:a.name,message:a.message});if("headers"===e)return this.sanitizeHeaders(a);if("url"===e)return this.sanitizeUrl(a);if("query"===e)return this.sanitizeQuery(a);if("body"!==e&&"response"!==e&&"operationSpec"!==e){if(Array.isArray(a)||T(a)){if(t.has(a))return"[Circular]";t.add(a)}return a}}),2)}sanitizeUrl(e){if("string"!=typeof e||null===e||""===e)return e;const t=new URL(e);if(!t.search)return e;for(const[e]of t.searchParams)this.allowedQueryParameters.has(e.toLowerCase())||t.searchParams.set(e,X);return t.toString()}sanitizeHeaders(e){const t={};for(const a of Object.keys(e))this.allowedHeaderNames.has(a.toLowerCase())?t[a]=e[a]:t[a]=X;return t}sanitizeQuery(e){if("object"!=typeof e||null===e)return e;const t={};for(const a of Object.keys(e))this.allowedQueryParameters.has(a.toLowerCase())?t[a]=e[a]:t[a]=X;return t}}const Z="redirectPolicy",Y=["GET","HEAD"];function ee(e={}){const{maxRetries:t=20}=e;return{name:Z,async sendRequest(e,a){const r=await a(e);return te(a,r,t)}}}async function te(e,t,a,r=0){const{request:i,status:n,headers:s}=t,o=s.get("location");if(o&&(300===n||301===n&&Y.includes(i.method)||302===n&&Y.includes(i.method)||303===n&&"POST"===i.method||307===n)&&r<a){const t=new URL(o,i.url);i.url=t.toString(),303===n&&(i.method="GET",i.headers.delete("Content-Length"),delete i.body),i.headers.delete("Authorization");const s=await e(i);return te(e,s,a,r+1)}return t}const ae="1.18.1";async function re(e){const t=new Map;t.set("core-rest-pipeline",ae),await async function(e){const t=globalThis.navigator;let a="unknown";if(null==t?void 0:t.userAgentData){const r=await t.userAgentData.getHighEntropyValues(["architecture","platformVersion"]);a=`${r.architecture}-${r.platform}-${r.platformVersion}`;const i=function(e){const t=["Google Chrome","Microsoft Edge","Opera","Brave","Chromium"];for(const a of t){const t=e.find((e=>e.brand===a));if(t)return t}}(t.userAgentData.brands);i&&e.set(i.brand,i.version)}else if(null==t?void 0:t.platform){a=t.platform;const r=function(e){const t=[{name:"Firefox",regex:/Firefox\/([\d.]+)/},{name:"Safari",regex:/Version\/([\d.]+).*Safari/}];for(const a of t){const t=e.match(a.regex);if(t)return{brand:a.name,version:t[1]}}}(t.userAgent);r&&e.set(r.brand,r.version)}else"string"==typeof globalThis.EdgeRuntime&&e.set("EdgeRuntime",globalThis.EdgeRuntime);e.set("OS",a)}(t);const a=function(e){const t=[];for(const[a,r]of e){const e=r?`${a}/${r}`:a;t.push(e)}return t.join(" ")}(t);return e?`${e} ${a}`:a}const ie="x-ms-useragent",ne=Symbol("rawContent");function se(e){return"function"==typeof e[ne]?e[ne]():e.stream()}function oe(e){return Boolean(e&&"function"==typeof e.pipe)}function me(e){return Boolean(e&&"function"==typeof e.getReader&&"function"==typeof e.tee)}async function le(e){if(e instanceof Blob||e instanceof Uint8Array)return e;if(me(e))return new Response(e).blob();const t=se(e);if(oe(t))throw new Error("Encountered unexpected type. In the browser, `concat` supports Web ReadableStream, Blob, Uint8Array, and files created using `createFile` only.");return le(t)}function de(e){let t="";for(const[a,r]of e)t+=`${a}: ${r}\r\n`;return t}function ce(e){return e instanceof Uint8Array?e.byteLength:"function"==typeof e.stream?-1===e.size?void 0:e.size:void 0}const pe="multipartPolicy",ue=new Set("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'()+,-./:=?");function ye(){return{name:pe,async sendRequest(e,t){var a;if(!e.multipartBody)return t(e);if(e.body)throw new Error("multipartBody and regular body cannot be set at the same time");let r=e.multipartBody.boundary;const i=null!==(a=e.headers.get("Content-Type"))&&void 0!==a?a:"multipart/mixed",n=i.match(/^(multipart\/[^ ;]+)(?:; *boundary=(.+))?$/);if(!n)throw new Error(`Got multipart request body, but content-type header was not multipart: ${i}`);const[,s,o]=n;if(o&&r&&o!==r)throw new Error(`Multipart boundary was specified as ${o} in the header, but got ${r} in the request body`);return null!=r||(r=o),r?function(e){if(e.length>70)throw new Error(`Multipart boundary "${e}" exceeds maximum length of 70 characters`);if(Array.from(e).some((e=>!ue.has(e))))throw new Error(`Multipart boundary "${e}" contains invalid characters`)}(r):r=`----AzSDKFormBoundary${U()}`,e.headers.set("Content-Type",`${s}; boundary=${r}`),await async function(e,t,a){const r=[H(`--${a}`,"utf-8"),...t.flatMap((e=>[H("\r\n","utf-8"),H(de(e.headers),"utf-8"),H("\r\n","utf-8"),e.body,H(`\r\n--${a}`,"utf-8")])),H("--\r\n\r\n","utf-8")],i=function(e){let t=0;for(const a of e){const e=ce(a);if(void 0===e)return;t+=e}return t}(r);i&&e.headers.set("Content-Length",i),e.body=await async function(e){const t=[];for(const a of e)t.push(await le("function"==typeof a?a():a));return new Blob(t)}(r)}(e,e.multipartBody.parts,r),e.multipartBody=void 0,t(e)}}}function ge(e,t,a){return new Promise(((r,i)=>{let n,s;const o=()=>i(new E((null==a?void 0:a.abortErrorMsg)?null==a?void 0:a.abortErrorMsg:"The operation was aborted.")),m=()=>{(null==a?void 0:a.abortSignal)&&s&&a.abortSignal.removeEventListener("abort",s)};if(s=()=>(n&&clearTimeout(n),m(),o()),(null==a?void 0:a.abortSignal)&&a.abortSignal.aborted)return o();n=setTimeout((()=>{m(),r(t)}),e),(null==a?void 0:a.abortSignal)&&a.abortSignal.addEventListener("abort",s)}))}function he(e,t){const a=e.headers.get(t);if(!a)return;const r=Number(a);return Number.isNaN(r)?void 0:r}const xe="Retry-After",be=["retry-after-ms","x-ms-retry-after-ms",xe];function Ne(e){if(e&&[429,503].includes(e.status))try{for(const t of be){const a=he(e,t);if(0===a||a)return a*(t===xe?1e3:1)}const t=e.headers.get(xe);if(!t)return;const a=Date.parse(t)-Date.now();return Number.isFinite(a)?Math.max(0,a):void 0}catch(e){return}}function fe(e={}){var t,a;const r=null!==(t=e.retryDelayInMs)&&void 0!==t?t:1e3,i=null!==(a=e.maxRetryDelayInMs)&&void 0!==a?a:64e3;return{name:"exponentialRetryStrategy",retry({retryCount:t,response:a,responseError:n}){const s=!!(c=n)&&("ETIMEDOUT"===c.code||"ESOCKETTIMEDOUT"===c.code||"ECONNREFUSED"===c.code||"ECONNRESET"===c.code||"ENOENT"===c.code||"ENOTFOUND"===c.code),o=s&&e.ignoreSystemErrors,m=function(e){return Boolean(e&&void 0!==e.status&&(e.status>=500||408===e.status)&&501!==e.status&&505!==e.status)}(a),l=m&&e.ignoreHttpStatusCodes,d=a&&(function(e){return Number.isFinite(Ne(e))}(a)||!m);var c;return d||l||o?{skipStrategy:!0}:!n||s||m?function(e,t){const a=t.retryDelayInMs*Math.pow(2,e),r=Math.min(t.maxRetryDelayInMs,a);var i,n;return{retryAfterInMs:r/2+(i=0,n=r/2,i=Math.ceil(i),n=Math.floor(n),Math.floor(Math.random()*(n-i+1))+i)}}(t,{retryDelayInMs:r,maxRetryDelayInMs:i}):{errorToThrow:n}}}}const Se=z("core-rest-pipeline retryPolicy");function ve(e,t={maxRetries:3}){const a=t.logger||Se;return{name:"retryPolicy",async sendRequest(r,i){var n,s;let o,m,l=-1;e:for(;;){l+=1,o=void 0,m=void 0;try{a.info(`Retry ${l}: Attempting to send request`,r.requestId),o=await i(r),a.info(`Retry ${l}: Received a response from request`,r.requestId)}catch(e){if(a.error(`Retry ${l}: Received an error from request`,r.requestId),m=e,!e||"RestError"!==m.name)throw e;o=m.response}if(null===(n=r.abortSignal)||void 0===n?void 0:n.aborted)throw a.error(`Retry ${l}: Request aborted.`),new E;if(l>=(null!==(s=t.maxRetries)&&void 0!==s?s:3)){if(a.info(`Retry ${l}: Maximum retries reached. Returning the last received response, or throwing the last received error.`),m)throw m;if(o)return o;throw new Error("Maximum retries reached with no response or error to throw")}a.info(`Retry ${l}: Processing ${e.length} retry strategies.`);t:for(const t of e){const e=t.logger||Se;e.info(`Retry ${l}: Processing retry strategy ${t.name}.`);const a=t.retry({retryCount:l,response:o,responseError:m});if(a.skipStrategy){e.info(`Retry ${l}: Skipped.`);continue t}const{errorToThrow:i,retryAfterInMs:n,redirectTo:s}=a;if(i)throw e.error(`Retry ${l}: Retry strategy ${t.name} throws error:`,i),i;if(n||0===n){e.info(`Retry ${l}: Retry strategy ${t.name} retries after ${n}`),await ge(n,void 0,{abortSignal:r.abortSignal});continue e}if(s){e.info(`Retry ${l}: Retry strategy ${t.name} redirects to ${s}`),r.url=s;continue e}}if(m)throw a.info("None of the retry strategies could work with the received error. Throwing it."),m;if(o)return a.info("None of the retry strategies could work with the received response. Returning it."),o}}}}function Ce(e){return e.toLowerCase()}class Pe{constructor(e){if(this._headersMap=new Map,e)for(const t of Object.keys(e))this.set(t,e[t])}set(e,t){this._headersMap.set(Ce(e),{name:e,value:String(t).trim()})}get(e){var t;return null===(t=this._headersMap.get(Ce(e)))||void 0===t?void 0:t.value}has(e){return this._headersMap.has(Ce(e))}delete(e){this._headersMap.delete(Ce(e))}toJSON(e={}){const t={};if(e.preserveCase)for(const e of this._headersMap.values())t[e.name]=e.value;else for(const[e,a]of this._headersMap)t[e]=a.value;return t}toString(){return JSON.stringify(this.toJSON({preserveCase:!0}))}[Symbol.iterator](){return function*(e){for(const t of e.values())yield[t.name,t.value]}(this._headersMap)}}function ze(e){return new Pe(e)}const we="proxyPolicy is not supported in browser environment";function Re(){throw new Error(we)}const qe={span:Symbol.for("@azure/core-tracing span"),namespace:Symbol.for("@azure/core-tracing namespace")};function Be(e={}){let t=new Oe(e.parentContext);return e.span&&(t=t.setValue(qe.span,e.span)),e.namespace&&(t=t.setValue(qe.namespace,e.namespace)),t}class Oe{constructor(e){this._contextMap=e instanceof Oe?new Map(e._contextMap):new Map}setValue(e,t){const a=new Oe(this);return a._contextMap.set(e,t),a}getValue(e){return this._contextMap.get(e)}deleteValue(e){const t=new Oe(this);return t._contextMap.delete(e),t}}const Ee={instrumenterImplementation:void 0};function Me(){return Ee.instrumenterImplementation||(Ee.instrumenterImplementation={createRequestHeaders:()=>({}),parseTraceparentHeader:()=>{},startSpan:(e,t)=>({span:{end:()=>{},isRecording:()=>!1,recordException:()=>{},setAttribute:()=>{},setStatus:()=>{},addEvent:()=>{}},tracingContext:Be({parentContext:t.tracingContext})}),withContext:(e,t,...a)=>t(...a)}),Ee.instrumenterImplementation}function Te(e){const{namespace:t,packageName:a,packageVersion:r}=e;function i(e,i,n){var s;const o=Me().startSpan(e,Object.assign(Object.assign({},n),{packageName:a,packageVersion:r,tracingContext:null===(s=null==i?void 0:i.tracingOptions)||void 0===s?void 0:s.tracingContext}));let m=o.tracingContext;const l=o.span;return m.getValue(qe.namespace)||(m=m.setValue(qe.namespace,t)),l.setAttribute("az.namespace",m.getValue(qe.namespace)),{span:l,updatedOptions:Object.assign({},i,{tracingOptions:Object.assign(Object.assign({},null==i?void 0:i.tracingOptions),{tracingContext:m})})}}function n(e,t,...a){return Me().withContext(e,t,...a)}return{startSpan:i,withSpan:async function(e,t,a,r){const{span:s,updatedOptions:o}=i(e,t,r);try{const e=await n(o.tracingOptions.tracingContext,(()=>Promise.resolve(a(o,s))));return s.setStatus({status:"success"}),e}catch(e){throw s.setStatus({status:"error",error:e}),e}finally{s.end()}},withContext:n,parseTraceparentHeader:function(e){return Me().parseTraceparentHeader(e)},createRequestHeaders:function(e){return Me().createRequestHeaders(e)}}}const Ie={},Ae=new J;class He extends Error{constructor(e,t={}){super(e),this.name="RestError",this.code=t.code,this.statusCode=t.statusCode,Object.defineProperty(this,"request",{value:t.request,enumerable:!1}),Object.defineProperty(this,"response",{value:t.response,enumerable:!1}),Object.setPrototypeOf(this,He.prototype)}[Ie](){return`RestError: ${this.message} \n ${Ae.sanitize(Object.assign(Object.assign({},this),{request:this.request,response:this.response}))}`}}function De(e){return e instanceof He||I(e)&&"RestError"===e.name}function ke(e){var t;const a=s();var r;return K&&(e.tlsOptions&&a.addPolicy((r=e.tlsOptions,{name:"tlsPolicy",sendRequest:async(e,t)=>(e.tlsSettings||(e.tlsSettings=r),t(e))})),a.addPolicy(function(){throw new Error(we)}(e.proxyOptions)),a.addPolicy(function(){throw new Error("decompressResponsePolicy is not supported in browser environment")}())),a.addPolicy({name:"formDataPolicy",async sendRequest(e,t){if(K&&"undefined"!=typeof FormData&&e.body instanceof FormData&&(e.formData=function(e){var t;const a={};for(const[r,i]of e.entries())null!==(t=a[r])&&void 0!==t||(a[r]=[]),a[r].push(i);return a}(e.body),e.body=void 0),e.formData){const t=e.headers.get("Content-Type");t&&-1!==t.indexOf("application/x-www-form-urlencoded")?e.body=function(e){const t=new URLSearchParams;for(const[a,r]of Object.entries(e))if(Array.isArray(r))for(const e of r)t.append(a,e.toString());else t.append(a,r.toString());return t.toString()}(e.formData):await async function(e,t){const a=t.headers.get("Content-Type");if(a&&!a.startsWith("multipart/form-data"))return;t.headers.set("Content-Type",null!=a?a:"multipart/form-data");const r=[];for(const[t,a]of Object.entries(e))for(const e of Array.isArray(a)?a:[a])if("string"==typeof e)r.push({headers:ze({"Content-Disposition":`form-data; name="${t}"`}),body:H(e,"utf-8")});else{if(null==e||"object"!=typeof e)throw new Error(`Unexpected value for key ${t}: ${e}. Value should be serialized to string first.`);{const a=e.name||"blob",i=ze();i.set("Content-Disposition",`form-data; name="${t}"; filename="${a}"`),i.set("Content-Type",e.type||"application/octet-stream"),r.push({headers:i,body:e})}}t.multipartBody={parts:r}}(e.formData,e),e.formData=void 0}return t(e)}},{beforePolicies:[pe]}),a.addPolicy(function(e={}){const t=re(e.userAgentPrefix);return{name:"userAgentPolicy",sendRequest:async(e,a)=>(e.headers.has(ie)||e.headers.set(ie,await t),a(e))}}(e.userAgentOptions)),a.addPolicy(function(e="x-ms-client-request-id"){return{name:"setClientRequestIdPolicy",sendRequest:async(t,a)=>(t.headers.has(e)||t.headers.set(e,t.requestId),a(t))}}(null===(t=e.telemetryOptions)||void 0===t?void 0:t.clientRequestIdHeaderName)),a.addPolicy(ye(),{afterPhase:"Deserialize"}),a.addPolicy(function(e={}){var t;return{name:"defaultRetryPolicy",sendRequest:ve([{name:"throttlingRetryStrategy",retry({response:e}){const t=Ne(e);return Number.isFinite(t)?{retryAfterInMs:t}:{skipStrategy:!0}}},fe(e)],{maxRetries:null!==(t=e.maxRetries)&&void 0!==t?t:3}).sendRequest}}(e.retryOptions),{phase:"Retry"}),a.addPolicy(function(e={}){const t=re(e.userAgentPrefix),a=new J({additionalAllowedQueryParameters:e.additionalAllowedQueryParameters}),r=function(){try{return Te({namespace:"",packageName:"@azure/core-rest-pipeline",packageVersion:ae})}catch(e){return void O.warning(`Error when creating the TracingClient: ${A(e)}`)}}();return{name:"tracingPolicy",async sendRequest(e,i){var n;if(!r)return i(e);const s=await t,o={"http.url":a.sanitizeUrl(e.url),"http.method":e.method,"http.user_agent":s,requestId:e.requestId};s&&(o["http.user_agent"]=s);const{span:m,tracingContext:l}=null!==(n=function(e,t,a){try{const{span:r,updatedOptions:i}=e.startSpan(`HTTP ${t.method}`,{tracingOptions:t.tracingOptions},{spanKind:"client",spanAttributes:a});if(!r.isRecording())return void r.end();const n=e.createRequestHeaders(i.tracingOptions.tracingContext);for(const[e,a]of Object.entries(n))t.headers.set(e,a);return{span:r,tracingContext:i.tracingOptions.tracingContext}}catch(e){return void O.warning(`Skipping creating a tracing span due to an error: ${A(e)}`)}}(r,e,o))&&void 0!==n?n:{};if(!m||!l)return i(e);try{const t=await r.withContext(l,i,e);return function(e,t){try{e.setAttribute("http.status_code",t.status);const a=t.headers.get("x-ms-request-id");a&&e.setAttribute("serviceRequestId",a),e.setStatus({status:"success"}),e.end()}catch(e){O.warning(`Skipping tracing span processing due to an error: ${A(e)}`)}}(m,t),t}catch(e){throw function(e,t){try{e.setStatus({status:"error",error:I(t)?t:void 0}),De(t)&&t.statusCode&&e.setAttribute("http.status_code",t.statusCode),e.end()}catch(e){O.warning(`Skipping tracing span processing due to an error: ${A(e)}`)}}(m,e),e}}}}(Object.assign(Object.assign({},e.userAgentOptions),e.loggingOptions)),{afterPhase:"Retry"}),K&&a.addPolicy(ee(e.redirectOptions),{afterPhase:"Retry"}),a.addPolicy(function(e={}){var t;const a=null!==(t=e.logger)&&void 0!==t?t:O.info,r=new J({additionalAllowedHeaderNames:e.additionalAllowedHeaderNames,additionalAllowedQueryParameters:e.additionalAllowedQueryParameters});return{name:"logPolicy",async sendRequest(e,t){if(!a.enabled)return t(e);a(`Request: ${r.sanitize(e)}`);const i=await t(e);return a(`Response status code: ${i.status}`),a(`Headers: ${r.sanitize(i.headers)}`),i}}}(e.loggingOptions),{afterPhase:"Sign"}),a}He.REQUEST_SEND_ERROR="REQUEST_SEND_ERROR",He.PARSE_ERROR="PARSE_ERROR";class Le{async sendRequest(e){if("https:"!==new URL(e.url).protocol&&!e.allowInsecureConnection)throw new Error(`Cannot connect to ${e.url} while allowInsecureConnection is false.`);if(e.proxySettings)throw new Error("HTTP proxy is not supported in browser environment");try{return await async function(e){const{abortController:t,abortControllerCleanup:a}=function(e){const t=new AbortController;let a,r;if(e.abortSignal){if(e.abortSignal.aborted)throw new E("The operation was aborted.");r=e=>{"abort"===e.type&&t.abort()},e.abortSignal.addEventListener("abort",r),a=()=>{var t;r&&(null===(t=e.abortSignal)||void 0===t||t.removeEventListener("abort",r))}}return e.timeout>0&&setTimeout((()=>{t.abort()}),e.timeout),{abortController:t,abortControllerCleanup:a}}(e);try{const r=function(e){const t=new Headers;for(const[a,r]of e)t.append(a,r);return t}(e.headers),{streaming:i,body:n}=function(e){const t="function"==typeof e.body?e.body():e.body;if(oe(t))throw new Error("Node streams are not supported in browser environment.");return me(t)?{streaming:!0,body:je(t,{onProgress:e.onUploadProgress})}:{streaming:!1,body:t}}(e),s=Object.assign(Object.assign({body:n,method:e.method,headers:r,signal:t.signal},"credentials"in Request.prototype?{credentials:e.withCredentials?"include":"same-origin"}:{}),"cache"in Request.prototype?{cache:"no-store"}:{});i&&(s.duplex="half");const o=await fetch(e.url,s);return function(e){return("function"==typeof Blob||"object"==typeof Blob)&&e instanceof Blob}(e.body)&&e.onUploadProgress&&e.onUploadProgress({loadedBytes:e.body.size}),async function(e,t,a){var r,i;const n=function(e){const t=ze();for(const[a,r]of e.headers)t.set(a,r);return t}(e),s={request:t,headers:n,status:e.status},o=me(e.body)?je(e.body,{onProgress:t.onDownloadProgress,onEnd:a}):e.body;if((null===(r=t.streamResponseStatusCodes)||void 0===r?void 0:r.has(Number.POSITIVE_INFINITY))||(null===(i=t.streamResponseStatusCodes)||void 0===i?void 0:i.has(s.status)))if(t.enableBrowserStreams)s.browserStreamBody=null!=o?o:void 0;else{const e=new Response(o);s.blobBody=e.blob(),null==a||a()}else{const e=new Response(o);s.bodyAsText=await e.text(),null==a||a()}return s}(o,e,a)}catch(e){throw null==a||a(),e}}(e)}catch(t){throw function(e,t){var a;return e&&"AbortError"===(null==e?void 0:e.name)?e:new He(`Error sending request: ${e.message}`,{code:null!==(a=null==e?void 0:e.code)&&void 0!==a?a:He.REQUEST_SEND_ERROR,request:t})}(t,e)}}}function je(e,t={}){let a=0;const{onProgress:r,onEnd:i}=t;if(function(e){return void 0!==e.pipeThrough&&void 0!==self.TransformStream}(e))return e.pipeThrough(new TransformStream({transform(e,t){null!==e?(t.enqueue(e),a+=e.length,r&&r({loadedBytes:a})):t.terminate()},flush(){null==i||i()}}));{const t=e.getReader();return new ReadableStream({async pull(e){var n;const{done:s,value:o}=await t.read();if(s||!o)return null==i||i(),e.close(),void t.releaseLock();a+=null!==(n=null==o?void 0:o.length)&&void 0!==n?n:0,e.enqueue(o),r&&r({loadedBytes:a})},cancel:e=>(null==i||i(),t.cancel(e))})}}function Ue(){return new Le}class _e{constructor(e){var t,a,r,i,n,s,o;this.url=e.url,this.body=e.body,this.headers=null!==(t=e.headers)&&void 0!==t?t:ze(),this.method=null!==(a=e.method)&&void 0!==a?a:"GET",this.timeout=null!==(r=e.timeout)&&void 0!==r?r:0,this.multipartBody=e.multipartBody,this.formData=e.formData,this.disableKeepAlive=null!==(i=e.disableKeepAlive)&&void 0!==i&&i,this.proxySettings=e.proxySettings,this.streamResponseStatusCodes=e.streamResponseStatusCodes,this.withCredentials=null!==(n=e.withCredentials)&&void 0!==n&&n,this.abortSignal=e.abortSignal,this.tracingOptions=e.tracingOptions,this.onUploadProgress=e.onUploadProgress,this.onDownloadProgress=e.onDownloadProgress,this.requestId=e.requestId||U(),this.allowInsecureConnection=null!==(s=e.allowInsecureConnection)&&void 0!==s&&s,this.enableBrowserStreams=null!==(o=e.enableBrowserStreams)&&void 0!==o&&o}}function $e(e){return new _e(e)}const Fe={forcedRefreshWindowInMs:1e3,retryIntervalInMs:3e3,refreshWindowInMs:12e4};async function Ve(e,t){try{return[await t(e),void 0]}catch(e){if(De(e)&&e.response)return[e.response,e];throw e}}async function Ke(e){const{scopes:t,getAccessToken:a,request:r}=e,i={abortSignal:r.abortSignal,tracingOptions:r.tracingOptions,enableCae:!0},n=await a(t,i);n&&e.request.headers.set("Authorization",`Bearer ${n.token}`)}function Ge(e){return 401===e.status&&e.headers.has("WWW-Authenticate")}async function Xe(e,t){var a;const{scopes:r}=e,i=await e.getAccessToken(r,{enableCae:!0,claims:t});return!!i&&(e.request.headers.set("Authorization",`${null!==(a=i.tokenType)&&void 0!==a?a:"Bearer"} ${i.token}`),!0)}function We(e){var t,a,r;const{credential:i,scopes:n,challengeCallbacks:s}=e,o=e.logger||O,m={authorizeRequest:null!==(a=null===(t=null==s?void 0:s.authorizeRequest)||void 0===t?void 0:t.bind(s))&&void 0!==a?a:Ke,authorizeRequestOnChallenge:null===(r=null==s?void 0:s.authorizeRequestOnChallenge)||void 0===r?void 0:r.bind(s)},l=i?function(e,t){let a,r=null,i=null;const n=Object.assign(Object.assign({},Fe),t),s={get isRefreshing(){return null!==r},get shouldRefresh(){var e;return!s.isRefreshing&&(!!((null==i?void 0:i.refreshAfterTimestamp)&&i.refreshAfterTimestamp<Date.now())||(null!==(e=null==i?void 0:i.expiresOnTimestamp)&&void 0!==e?e:0)-n.refreshWindowInMs<Date.now())},get mustRefresh(){return null===i||i.expiresOnTimestamp-n.forcedRefreshWindowInMs<Date.now()}};function o(t,o){var m;return s.isRefreshing||(r=async function(e,t,a){async function r(){if(!(Date.now()<a)){const t=await e();if(null===t)throw new Error("Failed to refresh access token.");return t}try{return await e()}catch(e){return null}}let i=await r();for(;null===i;)await ge(t),i=await r();return i}((()=>e.getToken(t,o)),n.retryIntervalInMs,null!==(m=null==i?void 0:i.expiresOnTimestamp)&&void 0!==m?m:Date.now()).then((e=>(r=null,i=e,a=o.tenantId,i))).catch((e=>{throw r=null,i=null,a=void 0,e}))),r}return async(e,t)=>{const r=Boolean(t.claims),n=a!==t.tenantId;return r&&(i=null),n||r||s.mustRefresh?o(e,t):(s.shouldRefresh&&o(e,t),i)}}(i):()=>Promise.resolve(null);return{name:"bearerTokenAuthenticationPolicy",async sendRequest(e,t){if(!e.url.toLowerCase().startsWith("https://"))throw new Error("Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.");let a,r,i;if(await m.authorizeRequest({scopes:Array.isArray(n)?n:[n],request:e,getAccessToken:l,logger:o}),[a,r]=await Ve(e,t),Ge(a)){let s=Qe(a.headers.get("WWW-Authenticate"));if(s){let m;try{m=atob(s)}catch(e){return o.warning(`The WWW-Authenticate header contains "claims" that cannot be parsed. Unable to perform the Continuous Access Evaluation authentication flow. Unparsable claims: ${s}`),a}i=await Xe({scopes:Array.isArray(n)?n:[n],response:a,request:e,getAccessToken:l,logger:o},m),i&&([a,r]=await Ve(e,t))}else if(m.authorizeRequestOnChallenge&&(i=await m.authorizeRequestOnChallenge({scopes:Array.isArray(n)?n:[n],request:e,response:a,getAccessToken:l,logger:o}),i&&([a,r]=await Ve(e,t)),Ge(a)&&(s=Qe(a.headers.get("WWW-Authenticate")),s))){let m;try{m=atob(s)}catch(e){return o.warning(`The WWW-Authenticate header contains "claims" that cannot be parsed. Unable to perform the Continuous Access Evaluation authentication flow. Unparsable claims: ${s}`),a}i=await Xe({scopes:Array.isArray(n)?n:[n],response:a,request:e,getAccessToken:l,logger:o},m),i&&([a,r]=await Ve(e,t))}}if(r)throw r;return a}}}function Qe(e){var t;if(!e)return;const a=function(e){const t=/(\w+)\s+((?:\w+=(?:"[^"]*"|[^,]*),?\s*)+)/g,a=/(\w+)="([^"]*)"/g,r=[];let i;for(;null!==(i=t.exec(e));){const e=i[1],t=i[2],n={};let s;for(;null!==(s=a.exec(t));)n[s[1]]=s[2];r.push({scheme:e,params:n})}return r}(e);return null===(t=a.find((e=>"Bearer"===e.scheme&&e.params.claims&&"insufficient_claims"===e.params.error)))||void 0===t?void 0:t.params.claims}function Je(e){return this instanceof Je?(this.v=e,this):new Je(e)}function Ze(e,t,a){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,i=a.apply(e,t||[]),n=[];return r=Object.create(("function"==typeof AsyncIterator?AsyncIterator:Object).prototype),s("next"),s("throw"),s("return",(function(e){return function(t){return Promise.resolve(t).then(e,l)}})),r[Symbol.asyncIterator]=function(){return this},r;function s(e,t){i[e]&&(r[e]=function(t){return new Promise((function(a,r){n.push([e,t,a,r])>1||o(e,t)}))},t&&(r[e]=t(r[e])))}function o(e,t){try{(a=i[e](t)).value instanceof Je?Promise.resolve(a.value.v).then(m,l):d(n[0][2],a)}catch(e){d(n[0][3],e)}var a}function m(e){o("next",e)}function l(e){o("throw",e)}function d(e,t){e(t),n.shift(),n.length&&o(n[0][0],n[0][1])}}function Ye(e){var t,a;return t={},r("next"),r("throw",(function(e){throw e})),r("return"),t[Symbol.iterator]=function(){return this},t;function r(r,i){t[r]=e[r]?function(t){return(a=!a)?{value:Je(e[r](t)),done:!1}:i?i(t):t}:i}}function et(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,a=e[Symbol.asyncIterator];return a?a.call(e):(e=function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],r=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}(e),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(a){t[a]=e[a]&&function(t){return new Promise((function(r,i){!function(e,t,a,r){Promise.resolve(r).then((function(t){e({value:t,done:a})}),t)}(r,i,(t=e[a](t)).done,t.value)}))}}}function tt(e){const t=e;return t&&"function"==typeof t.getToken&&(void 0===t.signRequest||t.getToken.length>0)}Object.create,Object.create,"function"==typeof SuppressedError&&SuppressedError;const at="DisableKeepAlivePolicy";function rt(e){let t="";for(let a=0;a<e.length;a++)t+=String.fromCharCode(e[a]);return btoa(t)}function it(e){const t=atob(e),a=new Uint8Array(t.length);for(let e=0;e<t.length;e++)a[e]=t.charCodeAt(e);return a}const nt="$",st="_",ot=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/,mt=/^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;function lt(e,t){var a,r;const i=e.parsedHeaders;if("HEAD"===e.request.method)return Object.assign(Object.assign({},i),{body:e.parsedBody});const n=t&&t.bodyMapper,s=Boolean(null==n?void 0:n.nullable),o=null==n?void 0:n.type.name;if("Stream"===o)return Object.assign(Object.assign({},i),{blobBody:e.blobBody,readableStreamBody:e.readableStreamBody});const m="Composite"===o&&n.type.modelProperties||{},l=Object.keys(m).some((e=>""===m[e].serializedName));if("Sequence"===o||l){const t=null!==(a=e.parsedBody)&&void 0!==a?a:[];for(const a of Object.keys(m))m[a].serializedName&&(t[a]=null===(r=e.parsedBody)||void 0===r?void 0:r[a]);if(i)for(const e of Object.keys(i))t[e]=i[e];return!s||e.parsedBody||i||0!==Object.getOwnPropertyNames(m).length?t:null}return function(e){const t=Object.assign(Object.assign({},e.headers),e.body);return e.hasNullableType&&0===Object.getOwnPropertyNames(t).length?e.shouldWrapBody?{body:null}:null:e.shouldWrapBody?Object.assign(Object.assign({},e.headers),{body:e.body}):t}({body:e.parsedBody,headers:i,hasNullableType:s,shouldWrapBody:(d=e.parsedBody,c=o,"Composite"!==c&&"Dictionary"!==c&&("string"==typeof d||"number"==typeof d||"boolean"==typeof d||null!==(null==c?void 0:c.match(/^(Date|DateTime|DateTimeRfc1123|UnixTime|ByteArray|Base64Url)$/i))||null==d))});var d,c}class dt{constructor(e={},t=!1){this.modelMappers=e,this.isXML=t}validateConstraints(e,t,a){const r=(e,r)=>{throw new Error(`"${a}" with value "${t}" should satisfy the constraint "${e}": ${r}.`)};if(e.constraints&&null!=t){const{ExclusiveMaximum:a,ExclusiveMinimum:i,InclusiveMaximum:n,InclusiveMinimum:s,MaxItems:o,MaxLength:m,MinItems:l,MinLength:d,MultipleOf:c,Pattern:p,UniqueItems:u}=e.constraints;if(void 0!==a&&t>=a&&r("ExclusiveMaximum",a),void 0!==i&&t<=i&&r("ExclusiveMinimum",i),void 0!==n&&t>n&&r("InclusiveMaximum",n),void 0!==s&&t<s&&r("InclusiveMinimum",s),void 0!==o&&t.length>o&&r("MaxItems",o),void 0!==m&&t.length>m&&r("MaxLength",m),void 0!==l&&t.length<l&&r("MinItems",l),void 0!==d&&t.length<d&&r("MinLength",d),void 0!==c&&t%c!=0&&r("MultipleOf",c),p){const e="string"==typeof p?new RegExp(p):p;"string"==typeof t&&null!==t.match(e)||r("Pattern",p)}u&&t.some(((e,t,a)=>a.indexOf(e)!==t))&&r("UniqueItems",u)}}serialize(e,t,a,r={xml:{}}){var i,n,s;const o={xml:{rootName:null!==(i=r.xml.rootName)&&void 0!==i?i:"",includeRoot:null!==(n=r.xml.includeRoot)&&void 0!==n&&n,xmlCharKey:null!==(s=r.xml.xmlCharKey)&&void 0!==s?s:st}};let m={};const l=e.type.name;a||(a=e.serializedName),null!==l.match(/^Sequence$/i)&&(m=[]),e.isConstant&&(t=e.defaultValue);const{required:d,nullable:c}=e;if(d&&c&&void 0===t)throw new Error(`${a} cannot be undefined.`);if(d&&!c&&null==t)throw new Error(`${a} cannot be null or undefined.`);if(!d&&!1===c&&null===t)throw new Error(`${a} cannot be null.`);return null==t||null!==l.match(/^any$/i)?m=t:null!==l.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/i)?m=function(e,t,a){if(null!=a)if(null!==e.match(/^Number$/i)){if("number"!=typeof a)throw new Error(`${t} with value ${a} must be of type number.`)}else if(null!==e.match(/^String$/i)){if("string"!=typeof a.valueOf())throw new Error(`${t} with value "${a}" must be of type string.`)}else if(null!==e.match(/^Uuid$/i)){if("string"!=typeof a.valueOf()||(r=a,!mt.test(r)))throw new Error(`${t} with value "${a}" must be of type string and a valid uuid.`)}else if(null!==e.match(/^Boolean$/i)){if("boolean"!=typeof a)throw new Error(`${t} with value ${a} must be of type boolean.`)}else if(null!==e.match(/^Stream$/i)){const e=typeof a;if(!("string"===e||"function"==typeof a.pipe||"function"==typeof a.tee||a instanceof ArrayBuffer||ArrayBuffer.isView(a)||("function"==typeof Blob||"object"==typeof Blob)&&a instanceof Blob||"function"===e))throw new Error(`${t} must be a string, Blob, ArrayBuffer, ArrayBufferView, ReadableStream, or () => ReadableStream.`)}var r;return a}(l,a,t):null!==l.match(/^Enum$/i)?m=function(e,t,a){if(!t)throw new Error(`Please provide a set of allowedValues to validate ${e} as an Enum Type.`);if(!t.some((e=>"string"==typeof e.valueOf()?e.toLowerCase()===a.toLowerCase():e===a)))throw new Error(`${a} is not a valid value for ${e}. The valid values are: ${JSON.stringify(t)}.`);return a}(a,e.type.allowedValues,t):null!==l.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/i)?m=function(e,t,a){if(null!=t)if(null!==e.match(/^Date$/i)){if(!(t instanceof Date||"string"==typeof t.valueOf()&&!isNaN(Date.parse(t))))throw new Error(`${a} must be an instanceof Date or a string in ISO8601 format.`);t=t instanceof Date?t.toISOString().substring(0,10):new Date(t).toISOString().substring(0,10)}else if(null!==e.match(/^DateTime$/i)){if(!(t instanceof Date||"string"==typeof t.valueOf()&&!isNaN(Date.parse(t))))throw new Error(`${a} must be an instanceof Date or a string in ISO8601 format.`);t=t instanceof Date?t.toISOString():new Date(t).toISOString()}else if(null!==e.match(/^DateTimeRfc1123$/i)){if(!(t instanceof Date||"string"==typeof t.valueOf()&&!isNaN(Date.parse(t))))throw new Error(`${a} must be an instanceof Date or a string in RFC-1123 format.`);t=t instanceof Date?t.toUTCString():new Date(t).toUTCString()}else if(null!==e.match(/^UnixTime$/i)){if(!(t instanceof Date||"string"==typeof t.valueOf()&&!isNaN(Date.parse(t))))throw new Error(`${a} must be an instanceof Date or a string in RFC-1123/ISO8601 format for it to be serialized in UnixTime/Epoch format.`);t=function(e){if(e)return"string"==typeof e.valueOf()&&(e=new Date(e)),Math.floor(e.getTime()/1e3)}(t)}else if(null!==e.match(/^TimeSpan$/i)&&!function(e){return ot.test(e)}(t))throw new Error(`${a} must be a string in ISO 8601 format. Instead was "${t}".`);return t}(l,t,a):null!==l.match(/^ByteArray$/i)?m=function(e,t){if(null!=t){if(!(t instanceof Uint8Array))throw new Error(`${e} must be of type Uint8Array.`);t=rt(t)}return t}(a,t):null!==l.match(/^Base64Url$/i)?m=function(e,t){if(null!=t){if(!(t instanceof Uint8Array))throw new Error(`${e} must be of type Uint8Array.`);t=function(e){if(e){if(!(e instanceof Uint8Array))throw new Error("Please provide an input of type Uint8Array for converting to Base64Url.");return function(e){let t=e.length;for(;t-1>=0&&"="===e[t-1];)--t;return e.substr(0,t)}(rt(e)).replace(/\+/g,"-").replace(/\//g,"_")}}(t)}return t}(a,t):null!==l.match(/^Sequence$/i)?m=function(e,t,a,r,i,n){var s;if(!Array.isArray(a))throw new Error(`${r} must be of type Array.`);let o=t.type.element;if(!o||"object"!=typeof o)throw new Error(`element" metadata for an Array must be defined in the mapper and it must of type "object" in ${r}.`);"Composite"===o.type.name&&o.type.className&&(o=null!==(s=e.modelMappers[o.type.className])&&void 0!==s?s:o);const m=[];for(let t=0;t<a.length;t++){const s=e.serialize(o,a[t],r,n);if(i&&o.xmlNamespace){const e=o.xmlNamespacePrefix?`xmlns:${o.xmlNamespacePrefix}`:"xmlns";"Composite"===o.type.name?(m[t]=Object.assign({},s),m[t][nt]={[e]:o.xmlNamespace}):(m[t]={},m[t][n.xml.xmlCharKey]=s,m[t][nt]={[e]:o.xmlNamespace})}else m[t]=s}return m}(this,e,t,a,Boolean(this.isXML),o):null!==l.match(/^Dictionary$/i)?m=function(e,t,a,r,i,n){if("object"!=typeof a)throw new Error(`${r} must be of type object.`);const s=t.type.value;if(!s||"object"!=typeof s)throw new Error(`"value" metadata for a Dictionary must be defined in the mapper and it must of type "object" in ${r}.`);const o={};for(const t of Object.keys(a)){const m=e.serialize(s,a[t],r,n);o[t]=gt(s,m,i,n)}if(i&&t.xmlNamespace){const e=t.xmlNamespacePrefix?`xmlns:${t.xmlNamespacePrefix}`:"xmlns",a=o;return a[nt]={[e]:t.xmlNamespace},a}return o}(this,e,t,a,Boolean(this.isXML),o):null!==l.match(/^Composite$/i)&&(m=function(e,t,a,r,i,n){if(bt(e,t)&&(t=xt(e,t,a,"clientName")),null!=a){const s={},o=yt(e,t,r);for(const m of Object.keys(o)){const l=o[m];if(l.readOnly)continue;let d,c=s;if(e.isXML)d=l.xmlIsWrapped?l.xmlName:l.xmlElementName||l.xmlName;else{const e=pt(l.serializedName);d=e.pop();for(const t of e){null==c[t]&&(void 0!==a[m]&&null!==a[m]||void 0!==l.defaultValue)&&(c[t]={}),c=c[t]}}if(null!=c){if(i&&t.xmlNamespace){const e=t.xmlNamespacePrefix?`xmlns:${t.xmlNamespacePrefix}`:"xmlns";c[nt]=Object.assign(Object.assign({},c[nt]),{[e]:t.xmlNamespace})}const s=""!==l.serializedName?r+"."+l.serializedName:r;let o=a[m];const p=bt(e,t);p&&p.clientName===m&&null==o&&(o=t.serializedName);const u=e.serialize(l,o,s,n);if(void 0!==u&&null!=d){const e=gt(l,u,i,n);i&&l.xmlIsAttribute?(c[nt]=c[nt]||{},c[nt][d]=u):i&&l.xmlIsWrapped?c[d]={[l.xmlElementName]:e}:c[d]=e}}}const m=function(e,t,a){const r=t.type.additionalProperties;if(!r&&t.type.className){const r=ut(e,t,a);return null==r?void 0:r.type.additionalProperties}return r}(e,t,r);if(m){const t=Object.keys(o);for(const i in a)t.every((e=>e!==i))&&(s[i]=e.serialize(m,a[i],r+'["'+i+'"]',n))}return s}return a}(this,e,t,a,Boolean(this.isXML),o)),m}deserialize(e,t,a,r={xml:{}}){var i,n,s,o;const m={xml:{rootName:null!==(i=r.xml.rootName)&&void 0!==i?i:"",includeRoot:null!==(n=r.xml.includeRoot)&&void 0!==n&&n,xmlCharKey:null!==(s=r.xml.xmlCharKey)&&void 0!==s?s:st},ignoreUnknownProperties:null!==(o=r.ignoreUnknownProperties)&&void 0!==o&&o};if(null==t)return this.isXML&&"Sequence"===e.type.name&&!e.xmlIsWrapped&&(t=[]),void 0!==e.defaultValue&&(t=e.defaultValue),t;let l;const d=e.type.name;if(a||(a=e.serializedName),null!==d.match(/^Composite$/i))l=function(e,t,a,r,i){var n,s;const o=null!==(n=i.xml.xmlCharKey)&&void 0!==n?n:st;bt(e,t)&&(t=xt(e,t,a,"serializedName"));const m=yt(e,t,r);let l={};const d=[];for(const n of Object.keys(m)){const c=m[n],p=pt(m[n].serializedName);d.push(p[0]);const{serializedName:u,xmlName:y,xmlElementName:g}=c;let h=r;""!==u&&void 0!==u&&(h=r+"."+u);const x=c.headerCollectionPrefix;if(x){const t={};for(const r of Object.keys(a))r.startsWith(x)&&(t[r.substring(x.length)]=e.deserialize(c.type.value,a[r],h,i)),d.push(r);l[n]=t}else if(e.isXML)if(c.xmlIsAttribute&&a[nt])l[n]=e.deserialize(c,a[nt][y],h,i);else if(c.xmlIsMsText)void 0!==a[o]?l[n]=a[o]:"string"==typeof a&&(l[n]=a);else{const t=g||y||u;if(c.xmlIsWrapped){const t=a[y],r=null!==(s=null==t?void 0:t[g])&&void 0!==s?s:[];l[n]=e.deserialize(c,r,h,i),d.push(y)}else{const r=a[t];l[n]=e.deserialize(c,r,h,i),d.push(t)}}else{let r,s=a,o=0;for(const e of p){if(!s)break;o++,s=s[e]}null===s&&o<p.length&&(s=void 0),r=s;const d=t.type.polymorphicDiscriminator;let u;if(d&&n===d.clientName&&null==r&&(r=t.serializedName),Array.isArray(a[n])&&""===m[n].serializedName){r=a[n];const t=e.deserialize(c,r,h,i);for(const[e,a]of Object.entries(l))Object.prototype.hasOwnProperty.call(t,e)||(t[e]=a);l=t}else void 0===r&&void 0===c.defaultValue||(u=e.deserialize(c,r,h,i),l[n]=u)}}const c=t.type.additionalProperties;if(c){const t=e=>{for(const t in m)if(pt(m[t].serializedName)[0]===e)return!1;return!0};for(const n in a)t(n)&&(l[n]=e.deserialize(c,a[n],r+'["'+n+'"]',i))}else if(a&&!i.ignoreUnknownProperties)for(const e of Object.keys(a))void 0!==l[e]||d.includes(e)||ht(e,i)||(l[e]=a[e]);return l}(this,e,t,a,m);else{if(this.isXML){const e=m.xml.xmlCharKey;void 0!==t[nt]&&void 0!==t[e]&&(t=t[e])}null!==d.match(/^Number$/i)?(l=parseFloat(t),isNaN(l)&&(l=t)):null!==d.match(/^Boolean$/i)?l="true"===t||"false"!==t&&t:null!==d.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/i)?l=t:null!==d.match(/^(Date|DateTime|DateTimeRfc1123)$/i)?l=new Date(t):null!==d.match(/^UnixTime$/i)?l=function(e){if(e)return new Date(1e3*e)}(t):null!==d.match(/^ByteArray$/i)?l=it(t):null!==d.match(/^Base64Url$/i)?l=function(e){if(e){if(e&&"string"!=typeof e.valueOf())throw new Error("Please provide an input of type string for converting to Uint8Array");return it(e=e.replace(/-/g,"+").replace(/_/g,"/"))}}(t):null!==d.match(/^Sequence$/i)?l=function(e,t,a,r,i){var n;let s=t.type.element;if(!s||"object"!=typeof s)throw new Error(`element" metadata for an Array must be defined in the mapper and it must of type "object" in ${r}`);if(a){Array.isArray(a)||(a=[a]),"Composite"===s.type.name&&s.type.className&&(s=null!==(n=e.modelMappers[s.type.className])&&void 0!==n?n:s);const t=[];for(let n=0;n<a.length;n++)t[n]=e.deserialize(s,a[n],`${r}[${n}]`,i);return t}return a}(this,e,t,a,m):null!==d.match(/^Dictionary$/i)&&(l=function(e,t,a,r,i){const n=t.type.value;if(!n||"object"!=typeof n)throw new Error(`"value" metadata for a Dictionary must be defined in the mapper and it must of type "object" in ${r}`);if(a){const t={};for(const s of Object.keys(a))t[s]=e.deserialize(n,a[s],r,i);return t}return a}(this,e,t,a,m))}return e.isConstant&&(l=e.defaultValue),l}}function ct(e={},t=!1){return new dt(e,t)}function pt(e){const t=[];let a="";if(e){const r=e.split(".");for(const e of r)"\\"===e.charAt(e.length-1)?a+=e.substr(0,e.length-1)+".":(a+=e,t.push(a),a="")}return t}function ut(e,t,a){const r=t.type.className;if(!r)throw new Error(`Class name for model "${a}" is not provided in the mapper "${JSON.stringify(t,void 0,2)}".`);return e.modelMappers[r]}function yt(e,t,a){let r=t.type.modelProperties;if(!r){const i=ut(e,t,a);if(!i)throw new Error(`mapper() cannot be null or undefined for model "${t.type.className}".`);if(r=null==i?void 0:i.type.modelProperties,!r)throw new Error(`modelProperties cannot be null or undefined in the mapper "${JSON.stringify(i)}" of type "${t.type.className}" for object "${a}".`)}return r}function gt(e,t,a,r){if(!a||!e.xmlNamespace)return t;const i=e.xmlNamespacePrefix?`xmlns:${e.xmlNamespacePrefix}`:"xmlns",n={[i]:e.xmlNamespace};if(["Composite"].includes(e.type.name)){if(t[nt])return t;{const e=Object.assign({},t);return e[nt]=n,e}}const s={};return s[r.xml.xmlCharKey]=t,s[nt]=n,s}function ht(e,t){return[nt,t.xml.xmlCharKey].includes(e)}function xt(e,t,a,r){var i;const n=bt(e,t);if(n){let s=n[r];if(s){"serializedName"===r&&(s=s.replace(/\\/gi,""));const n=a[s],o=null!==(i=t.type.uberParent)&&void 0!==i?i:t.type.className;if("string"==typeof n&&o){const a=function(e,t,a){const r=[a];for(;r.length;){const a=r.shift(),i=t===a?t:a+"."+t;if(Object.prototype.hasOwnProperty.call(e,i))return e[i];for(const[t,i]of Object.entries(e))t.startsWith(a+".")&&i.type.uberParent===a&&i.type.className&&r.push(i.type.className)}}(e.modelMappers.discriminators,n,o);a&&(t=a)}}}return t}function bt(e,t){return t.type.polymorphicDiscriminator||Nt(e,t.type.uberParent)||Nt(e,t.type.className)}function Nt(e,t){return t&&e.modelMappers[t]&&e.modelMappers[t].type.polymorphicDiscriminator}const ft="Sequence",St="Stream",vt={operationRequestMap:new WeakMap};function Ct(e,t,a){let r=t.parameterPath;const i=t.mapper;let n;if("string"==typeof r&&(r=[r]),Array.isArray(r)){if(r.length>0)if(i.isConstant)n=i.defaultValue;else{let t=Pt(e,r);!t.propertyFound&&a&&(t=Pt(a,r));let s=!1;t.propertyFound||(s=i.required||"options"===r[0]&&2===r.length),n=s?i.defaultValue:t.propertyValue}}else{i.required&&(n={});for(const t in r){const s=i.type.modelProperties[t],o=Ct(e,{parameterPath:r[t],mapper:s},a);void 0!==o&&(n||(n={}),n[t]=o)}}return n}function Pt(e,t){const a={propertyFound:!1};let r=0;for(;r<t.length;++r){const a=t[r];if(!e||!(a in e))break;e=e[a]}return r===t.length&&(a.propertyValue=e,a.propertyFound=!0),a}const zt=Symbol.for("@azure/core-client original request");function wt(e){if(function(e){return zt in e}(e))return wt(e[zt]);let t=vt.operationRequestMap.get(e);return t||(t={},vt.operationRequestMap.set(e,t)),t}const Rt=["application/json","text/json"],qt=["application/xml","application/atom+xml"];function Bt(e){const{parameterPath:t,mapper:a}=e;let r;return r="string"==typeof t?t:Array.isArray(t)?t.join("."):a.serializedName,r}function Ot(e={}){const t=e.stringifyXML;return{name:"serializationPolicy",async sendRequest(e,a){const r=wt(e),i=null==r?void 0:r.operationSpec,n=null==r?void 0:r.operationArguments;return i&&n&&(function(e,t,a){var r,i;if(a.headerParameters)for(const r of a.headerParameters){let i=Ct(t,r);if(null!=i||r.mapper.required){i=a.serializer.serialize(r.mapper,i,Bt(r));const t=r.mapper.headerCollectionPrefix;if(t)for(const a of Object.keys(i))e.headers.set(t+a,i[a]);else e.headers.set(r.mapper.serializedName||Bt(r),i)}}const n=null===(i=null===(r=t.options)||void 0===r?void 0:r.requestOptions)||void 0===i?void 0:i.customHeaders;if(n)for(const t of Object.keys(n))e.headers.set(t,n[t])}(e,n,i),function(e,t,a,r=function(){throw new Error("XML serialization unsupported!")}){var i,n,s,o,m;const l=null===(i=t.options)||void 0===i?void 0:i.serializerOptions,d={xml:{rootName:null!==(n=null==l?void 0:l.xml.rootName)&&void 0!==n?n:"",includeRoot:null!==(s=null==l?void 0:l.xml.includeRoot)&&void 0!==s&&s,xmlCharKey:null!==(o=null==l?void 0:l.xml.xmlCharKey)&&void 0!==o?o:st}},c=d.xml.xmlCharKey;if(a.requestBody&&a.requestBody.mapper){e.body=Ct(t,a.requestBody);const i=a.requestBody.mapper,{required:n,serializedName:s,xmlName:o,xmlElementName:l,xmlNamespace:p,xmlNamespacePrefix:u,nullable:y}=i,g=i.type.name;try{if(void 0!==e.body&&null!==e.body||y&&null===e.body||n){const t=Bt(a.requestBody);e.body=a.serializer.serialize(i,e.body,t,d);const n=g===St;if(a.isXML){const t=u?`xmlns:${u}`:"xmlns",a=function(e,t,a,r,i){if(e&&!["Composite","Sequence","Dictionary"].includes(a)){const a={};return a[i.xml.xmlCharKey]=r,a[nt]={[t]:e},a}return r}(p,t,g,e.body,d);g===ft?e.body=r(function(e,t,a,r){if(Array.isArray(e)||(e=[e]),!a||!r)return{[t]:e};const i={[t]:e};return i[nt]={[a]:r},i}(a,l||o||s,t,p),{rootName:o||s,xmlCharKey:c}):n||(e.body=r(a,{rootName:o||s,xmlCharKey:c}))}else{if("String"===g&&((null===(m=a.contentType)||void 0===m?void 0:m.match("text/plain"))||"text"===a.mediaType))return;n||(e.body=JSON.stringify(e.body))}}}catch(e){throw new Error(`Error "${e.message}" occurred in serializing the payload - ${JSON.stringify(s,void 0,"  ")}.`)}}else if(a.formDataParameters&&a.formDataParameters.length>0){e.formData={};for(const r of a.formDataParameters){const i=Ct(t,r);if(null!=i){const t=r.mapper.serializedName||Bt(r);e.formData[t]=a.serializer.serialize(r.mapper,i,Bt(r),d)}}}}(e,n,i,t)),a(e)}}}function Et(e={}){const t=ke(null!=e?e:{});return e.credentialOptions&&t.addPolicy(We({credential:e.credentialOptions.credential,scopes:e.credentialOptions.credentialScopes})),t.addPolicy(Ot(e.serializationOptions),{phase:"Serialize"}),t.addPolicy(function(e={}){var t,a,r,i,n,s,o;const m=null!==(a=null===(t=e.expectedContentTypes)||void 0===t?void 0:t.json)&&void 0!==a?a:Rt,l=null!==(i=null===(r=e.expectedContentTypes)||void 0===r?void 0:r.xml)&&void 0!==i?i:qt,d=e.parseXML,c=e.serializerOptions,p={xml:{rootName:null!==(n=null==c?void 0:c.xml.rootName)&&void 0!==n?n:"",includeRoot:null!==(s=null==c?void 0:c.xml.includeRoot)&&void 0!==s&&s,xmlCharKey:null!==(o=null==c?void 0:c.xml.xmlCharKey)&&void 0!==o?o:st}};return{name:"deserializationPolicy",async sendRequest(e,t){const a=await t(e);return async function(e,t,a,r,i){const n=await async function(e,t,a,r,i){var n;if(!(null===(n=a.request.streamResponseStatusCodes)||void 0===n?void 0:n.has(a.status))&&a.bodyAsText){const n=a.bodyAsText,s=a.headers.get("Content-Type")||"",o=s?s.split(";").map((e=>e.toLowerCase())):[];try{if(0===o.length||o.some((t=>-1!==e.indexOf(t))))return a.parsedBody=JSON.parse(n),a;if(o.some((e=>-1!==t.indexOf(e)))){if(!i)throw new Error("Parsing XML not supported.");const e=await i(n,r.xml);return a.parsedBody=e,a}}catch(e){const t=`Error "${e}" occurred while parsing the response body - ${a.bodyAsText}.`,r=e.code||He.PARSE_ERROR;throw new He(t,{code:r,statusCode:a.status,request:a.request,response:a})}}return a}(e,t,a,r,i);if(!function(e){const t=wt(e.request),a=null==t?void 0:t.shouldDeserialize;let r;return r=void 0===a||("boolean"==typeof a?a:a(e)),r}(n))return n;const s=wt(n.request),o=null==s?void 0:s.operationSpec;if(!o||!o.responses)return n;const m=function(e){let t;const a=wt(e.request),r=null==a?void 0:a.operationSpec;return r&&(t=(null==a?void 0:a.operationResponseGetter)?null==a?void 0:a.operationResponseGetter(r,e):r.responses[e.status]),t}(n),{error:l,shouldReturnResponse:d}=function(e,t,a,r){var i;const n=200<=e.status&&e.status<300,s=function(e){const t=Object.keys(e.responses);return 0===t.length||1===t.length&&"default"===t[0]}(t)?n:!!a;if(s){if(!a)return{error:null,shouldReturnResponse:!1};if(!a.isError)return{error:null,shouldReturnResponse:!1}}const o=null!=a?a:t.responses.default,m=(null===(i=e.request.streamResponseStatusCodes)||void 0===i?void 0:i.has(e.status))?`Unexpected status code: ${e.status}`:e.bodyAsText,l=new He(m,{statusCode:e.status,request:e.request,response:e});if(!o)throw l;const d=o.bodyMapper,c=o.headersMapper;try{if(e.parsedBody){const a=e.parsedBody;let i;if(d){let e=a;if(t.isXML&&d.type.name===ft){e=[];const t=d.xmlElementName;"object"==typeof a&&t&&(e=a[t])}i=t.serializer.deserialize(d,e,"error.response.parsedBody",r)}const n=a.error||i||a;l.code=n.code,n.message&&(l.message=n.message),d&&(l.response.parsedBody=i)}e.headers&&c&&(l.response.parsedHeaders=t.serializer.deserialize(c,e.headers.toJSON(),"operationRes.parsedHeaders"))}catch(t){l.message=`Error "${t.message}" occurred in deserializing the responseBody - "${e.bodyAsText}" for the default response.`}return{error:l,shouldReturnResponse:!1}}(n,o,m,r);if(l)throw l;if(d)return n;if(m){if(m.bodyMapper){let e=n.parsedBody;o.isXML&&m.bodyMapper.type.name===ft&&(e="object"==typeof e?e[m.bodyMapper.xmlElementName]:[]);try{n.parsedBody=o.serializer.deserialize(m.bodyMapper,e,"operationRes.parsedBody",r)}catch(e){throw new He(`Error ${e} occurred in deserializing the responseBody - ${n.bodyAsText}`,{statusCode:n.status,request:n.request,response:n})}}else"HEAD"===o.httpMethod&&(n.parsedBody=a.status>=200&&a.status<300);m.headersMapper&&(n.parsedHeaders=o.serializer.deserialize(m.headersMapper,n.headers.toJSON(),"operationRes.parsedHeaders",{xml:{},ignoreUnknownProperties:!0}))}return n}(m,l,a,p,d)}}}(e.deserializationOptions),{phase:"Deserialize"}),t}let Mt;const Tt={CSV:",",SSV:" ",Multi:"Multi",TSV:"\t",Pipes:"|"};function It(e,t,a,r){const i=function(e,t,a){var r;const i=new Map;if(null===(r=e.urlParameters)||void 0===r?void 0:r.length)for(const r of e.urlParameters){let n=Ct(t,r,a);const s=Bt(r);n=e.serializer.serialize(r.mapper,n,s),r.skipEncoding||(n=encodeURIComponent(n)),i.set(`{${r.mapper.serializedName||s}}`,n)}return i}(t,a,r);let n=!1,s=At(e,i);if(t.path){let e=At(t.path,i);"/{nextLink}"===t.path&&e.startsWith("/")&&(e=e.substring(1)),function(e){return e.includes("://")}(e)?(s=e,n=!0):s=function(e,t){if(!t)return e;const a=new URL(e);let r=a.pathname;r.endsWith("/")||(r=`${r}/`),t.startsWith("/")&&(t=t.substring(1));const i=t.indexOf("?");if(-1!==i){const e=t.substring(0,i),n=t.substring(i+1);r+=e,n&&(a.search=a.search?`${a.search}&${n}`:n)}else r+=t;return a.pathname=r,a.toString()}(s,e)}const{queryParams:o,sequenceParams:m}=function(e,t,a){var r;const i=new Map,n=new Set;if(null===(r=e.queryParameters)||void 0===r?void 0:r.length)for(const r of e.queryParameters){"Sequence"===r.mapper.type.name&&r.mapper.serializedName&&n.add(r.mapper.serializedName);let s=Ct(t,r,a);if(null!=s||r.mapper.required){s=e.serializer.serialize(r.mapper,s,Bt(r));const t=r.collectionFormat?Tt[r.collectionFormat]:"";if(Array.isArray(s)&&(s=s.map((e=>null==e?"":e))),"Multi"===r.collectionFormat&&0===s.length)continue;!Array.isArray(s)||"SSV"!==r.collectionFormat&&"TSV"!==r.collectionFormat||(s=s.join(t)),r.skipEncoding||(s=Array.isArray(s)?s.map((e=>encodeURIComponent(e))):encodeURIComponent(s)),!Array.isArray(s)||"CSV"!==r.collectionFormat&&"Pipes"!==r.collectionFormat||(s=s.join(t)),i.set(r.mapper.serializedName||Bt(r),s)}}return{queryParams:i,sequenceParams:n}}(t,a,r);return s=function(e,t,a,r=!1){if(0===t.size)return e;const i=new URL(e),n=function(e){const t=new Map;if(!e||"?"!==e[0])return t;const a=(e=e.slice(1)).split("&");for(const e of a){const[a,r]=e.split("=",2),i=t.get(a);i?Array.isArray(i)?i.push(r):t.set(a,[i,r]):t.set(a,r)}return t}(i.search);for(const[e,i]of t){const t=n.get(e);if(Array.isArray(t))if(Array.isArray(i)){t.push(...i);const a=new Set(t);n.set(e,Array.from(a))}else t.push(i);else t?(Array.isArray(i)?i.unshift(t):a.has(e)&&n.set(e,[t,i]),r||n.set(e,i)):n.set(e,i)}const s=[];for(const[e,t]of n)if("string"==typeof t)s.push(`${e}=${t}`);else if(Array.isArray(t))for(const a of t)s.push(`${e}=${a}`);else s.push(`${e}=${t}`);return i.search=s.length?`?${s.join("&")}`:"",i.toString()}(s,o,m,n),s}function At(e,t){let a=e;for(const[e,r]of t)a=a.split(e).join(r);return a}const Ht=z("core-client");class Dt{constructor(e={}){var t,a;if(this._requestContentType=e.requestContentType,this._endpoint=null!==(t=e.endpoint)&&void 0!==t?t:e.baseUri,e.baseUri&&Ht.warning("The baseUri option for SDK Clients has been deprecated, please use endpoint instead."),this._allowInsecureConnection=e.allowInsecureConnection,this._httpClient=e.httpClient||(Mt||(Mt=Ue()),Mt),this.pipeline=e.pipeline||function(e){const t=function(e){if(e.credentialScopes)return e.credentialScopes;if(e.endpoint)return`${e.endpoint}/.default`;if(e.baseUri)return`${e.baseUri}/.default`;if(e.credential&&!e.credentialScopes)throw new Error("When using credentials, the ServiceClientOptions must contain either a endpoint or a credentialScopes. Unable to create a bearerTokenAuthenticationPolicy")}(e),a=e.credential&&t?{credentialScopes:t,credential:e.credential}:void 0;return Et(Object.assign(Object.assign({},e),{credentialOptions:a}))}(e),null===(a=e.additionalPolicies)||void 0===a?void 0:a.length)for(const{policy:t,position:a}of e.additionalPolicies){const e="perRetry"===a?"Sign":void 0;this.pipeline.addPolicy(t,{afterPhase:e})}}async sendRequest(e){return this.pipeline.sendRequest(this._httpClient,e)}async sendOperationRequest(e,t){const a=t.baseUrl||this._endpoint;if(!a)throw new Error("If operationSpec.baseUrl is not specified, then the ServiceClient must have a endpoint string property that contains the base URL to use.");const r=$e({url:It(a,t,e,this)});r.method=t.httpMethod;const i=wt(r);i.operationSpec=t,i.operationArguments=e;const n=t.contentType||this._requestContentType;n&&t.requestBody&&r.headers.set("Content-Type",n);const s=e.options;if(s){const e=s.requestOptions;e&&(e.timeout&&(r.timeout=e.timeout),e.onUploadProgress&&(r.onUploadProgress=e.onUploadProgress),e.onDownloadProgress&&(r.onDownloadProgress=e.onDownloadProgress),void 0!==e.shouldDeserialize&&(i.shouldDeserialize=e.shouldDeserialize),e.allowInsecureConnection&&(r.allowInsecureConnection=!0)),s.abortSignal&&(r.abortSignal=s.abortSignal),s.tracingOptions&&(r.tracingOptions=s.tracingOptions)}this._allowInsecureConnection&&(r.allowInsecureConnection=!0),void 0===r.streamResponseStatusCodes&&(r.streamResponseStatusCodes=function(e){const t=new Set;for(const a in e.responses){const r=e.responses[a];r.bodyMapper&&r.bodyMapper.type.name===St&&t.add(Number(a))}return t}(t));try{const e=await this.sendRequest(r),a=lt(e,t.responses[e.status]);return(null==s?void 0:s.onResponse)&&s.onResponse(e,a),a}catch(e){if("object"==typeof e&&(null==e?void 0:e.response)){const a=e.response,r=lt(a,t.responses[e.statusCode]||t.responses.default);e.details=r,(null==s?void 0:s.onResponse)&&s.onResponse(a,r,e)}throw e}}}const kt="authorization",Lt=async e=>{const t={abortSignal:(a=e.request).abortSignal,requestOptions:{timeout:a.timeout},tracingOptions:a.tracingOptions};var a;const r=function(e){const t=e.headers.get("WWW-Authenticate");if(401===e.status&&t)return t}(e.response);if(r){const a=function(e){return`${e.slice(7).trim()} `.split(" ").filter((e=>e)).map((e=>(([e,t])=>({[e]:t}))(e.trim().split("=")))).reduce(((e,t)=>Object.assign(Object.assign({},e),t)),{})}(r),i=function(e,t){if(!t.resource_id)return e.scopes;const a=new URL(t.resource_id);a.pathname="/.default";let r=a.toString();return"https://disk.azure.com/.default"===r&&(r="https://disk.azure.com//.default"),[r]}(e,a),n=function(e){const t=new URL(e.authorization_uri).pathname.split("/")[1];if(t&&/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/.test(t))return t}(a);if(!n)return!1;const s=await e.getAccessToken(i,Object.assign(Object.assign({},t),{tenantId:n}));return!!s&&(e.request.headers.set(kt,`Bearer ${s.token}`),!0)}return!1},jt=Symbol("Original PipelineRequest"),Ut=Symbol.for("@azure/core-client original request");function _t(e,t={}){const a=e[jt],r=ze(e.headers.toJson({preserveCase:!0}));if(a)return a.headers=r,a;{const a=$e({url:e.url,method:e.method,headers:r,withCredentials:e.withCredentials,timeout:e.timeout,requestId:e.requestId,abortSignal:e.abortSignal,body:e.body,formData:e.formData,disableKeepAlive:!!e.keepAlive,onDownloadProgress:e.onDownloadProgress,onUploadProgress:e.onUploadProgress,proxySettings:e.proxySettings,streamResponseStatusCodes:e.streamResponseStatusCodes});return t.originalRequest&&(a[Ut]=t.originalRequest),a}}function $t(e,t){var a;const r=null!==(a=null==t?void 0:t.originalRequest)&&void 0!==a?a:e,i={url:e.url,method:e.method,headers:Ft(e.headers),withCredentials:e.withCredentials,timeout:e.timeout,requestId:e.headers.get("x-ms-client-request-id")||e.requestId,abortSignal:e.abortSignal,body:e.body,formData:e.formData,keepAlive:!!e.disableKeepAlive,onDownloadProgress:e.onDownloadProgress,onUploadProgress:e.onUploadProgress,proxySettings:e.proxySettings,streamResponseStatusCodes:e.streamResponseStatusCodes,clone(){throw new Error("Cannot clone a non-proxied WebResourceLike")},prepare(){throw new Error("WebResourceLike.prepare() is not supported by @azure/core-http-compat")},validateRequestProperties(){}};return(null==t?void 0:t.createProxy)?new Proxy(i,{get:(t,a,n)=>a===jt?e:"clone"===a?()=>$t(_t(i,{originalRequest:r}),{createProxy:!0,originalRequest:r}):Reflect.get(t,a,n),set:(t,a,r,i)=>("keepAlive"===a&&(e.disableKeepAlive=!r),"string"==typeof a&&["url","method","withCredentials","timeout","requestId","abortSignal","body","formData","onDownloadProgress","onUploadProgress","proxySettings","streamResponseStatusCodes"].includes(a)&&(e[a]=r),Reflect.set(t,a,r,i))}):i}function Ft(e){return new Kt(e.toJSON({preserveCase:!0}))}function Vt(e){return e.toLowerCase()}class Kt{constructor(e){if(this._headersMap={},e)for(const t in e)this.set(t,e[t])}set(e,t){this._headersMap[Vt(e)]={name:e,value:t.toString()}}get(e){const t=this._headersMap[Vt(e)];return t?t.value:void 0}contains(e){return!!this._headersMap[Vt(e)]}remove(e){const t=this.contains(e);return delete this._headersMap[Vt(e)],t}rawHeaders(){return this.toJson({preserveCase:!0})}headersArray(){const e=[];for(const t in this._headersMap)e.push(this._headersMap[t]);return e}headerNames(){const e=[],t=this.headersArray();for(let a=0;a<t.length;++a)e.push(t[a].name);return e}headerValues(){const e=[],t=this.headersArray();for(let a=0;a<t.length;++a)e.push(t[a].value);return e}toJson(e={}){const t={};if(e.preserveCase)for(const e in this._headersMap){const a=this._headersMap[e];t[a.name]=a.value}else for(const e in this._headersMap){const a=this._headersMap[e];t[Vt(a.name)]=a.value}return t}toString(){return JSON.stringify(this.toJson({preserveCase:!0}))}clone(){const e={};for(const t in this._headersMap){const a=this._headersMap[t];e[a.name]=a.value}return new Kt(e)}}const Gt=Symbol("Original FullOperationResponse");function Xt(e,t){let a=$t(e.request),r=Ft(e.headers);return(null==t?void 0:t.createProxy)?new Proxy(e,{get:(t,i,n)=>"headers"===i?r:"request"===i?a:i===Gt?e:Reflect.get(t,i,n),set:(e,t,i,n)=>("headers"===t?r=i:"request"===t&&(a=i),Reflect.set(e,t,i,n))}):Object.assign(Object.assign({},e),{request:a,headers:r})}function Wt(e){const t=e[Gt],a=ze(e.headers.toJson({preserveCase:!0}));return t?(t.headers=a,t):Object.assign(Object.assign({},e),{headers:a,request:_t(e.request)})}class Qt extends Dt{constructor(e){var t,a;super(e),!1!==(null===(t=e.keepAliveOptions)||void 0===t?void 0:t.enable)||this.pipeline.getOrderedPolicies().some((e=>e.name===at))||this.pipeline.addPolicy({name:at,sendRequest:async(e,t)=>(e.disableKeepAlive=!0,t(e))}),!1===(null===(a=e.redirectOptions)||void 0===a?void 0:a.handleRedirects)&&this.pipeline.removePolicy({name:Z})}async sendOperationRequest(e,t){var a;const r=null===(a=null==e?void 0:e.options)||void 0===a?void 0:a.onResponse;let i;e.options=Object.assign(Object.assign({},e.options),{onResponse:function(e,t,a){i=e,r&&r(e,t,a)}});const n=await super.sendOperationRequest(e,t);return i&&Object.defineProperty(n,"_response",{value:Xt(i)}),n}}var Jt;!function(e){e[e.ERROR=1]="ERROR",e[e.INFO=3]="INFO",e[e.OFF=0]="OFF",e[e.WARNING=2]="WARNING"}(Jt||(Jt={}));const Zt={log(e,t){},shouldLog:e=>!1};function Yt(e){const t=e.slice().reverse();return{name:"RequestPolicyFactoryPolicy",async sendRequest(e,a){let r={sendRequest:async e=>Xt(await a(_t(e)),{createProxy:!0})};for(const e of t)r=e.create(r,Zt);const i=$t(e,{createProxy:!0});return Wt(await r.sendRequest(i))}}}const ea="$";if(!(document&&DOMParser&&Node&&XMLSerializer))throw new Error('This library depends on the following DOM objects: ["document", "DOMParser", "Node", "XMLSerializer"] to parse XML, but some of these are undefined. You may provide a polyfill to make these globally available in order to support your environment. For more information, please refer to https://aka.ms/azsdk/js/web-workers. ');let ta;try{void 0!==self.trustedTypes&&(ta=self.trustedTypes.createPolicy("@azure/core-xml#xml.browser",{createHTML:e=>e}))}catch(e){console.warn('Could not create trusted types policy "@azure/core-xml#xml.browser"')}const aa=document.implementation.createDocument(null,null,null),ra=new DOMParser;function ia(e,t={}){var a,r,i,n,s,o;try{const m={rootName:null!==(a=t.rootName)&&void 0!==a?a:"",includeRoot:null!==(r=t.includeRoot)&&void 0!==r&&r,xmlCharKey:null!==(i=t.xmlCharKey)&&void 0!==i?i:"_",cdataPropName:null!==(n=t.cdataPropName)&&void 0!==n?n:"__cdata",stopNodes:null!==(s=t.stopNodes)&&void 0!==s?s:[]},l=ra.parseFromString(null!==(o=null==ta?void 0:ta.createHTML(e))&&void 0!==o?o:e,"application/xml");let d;return function(e){const t=e.getElementsByTagName("parsererror");if(t.length>0&&function(){var e,t;if(void 0===na)try{const a=null!==(e=null==ta?void 0:ta.createHTML("INVALID"))&&void 0!==e?e:"INVALID";na=null!==(t=ra.parseFromString(a,"text/xml").getElementsByTagName("parsererror")[0].namespaceURI)&&void 0!==t?t:""}catch(e){na=""}return na}())for(let e=0;e<t.length;e++)if(t[e].namespaceURI===na)throw new Error(t[e].innerHTML)}(l),d=m.includeRoot?sa(l,m):sa(l.childNodes[0],m),Promise.resolve(d)}catch(e){return Promise.reject(e)}}let na;function sa(e,t){var a;let r={};const i=e.childNodes.length,n=e.childNodes[0],s=n&&1===i&&n.nodeType===Node.TEXT_NODE&&n.nodeValue||void 0,o=function(e){return function(e){return!!e.attributes}(e)&&e.hasAttributes()?e:void 0}(e);if(o){r[ea]={};for(let e=0;e<o.attributes.length;e++){const t=o.attributes[e];r[ea][t.nodeName]=t.nodeValue}s&&(r[t.xmlCharKey]=s)}else 0===i?r="":s&&(r=s);if(!s)for(let n=0;n<i;n++){const i=e.childNodes[n];if((null==i?void 0:i.nodeType)===Node.CDATA_SECTION_NODE)r=i.textContent;else if((null===(a=null==i?void 0:i.firstChild)||void 0===a?void 0:a.nodeType)===Node.CDATA_SECTION_NODE)r[i.nodeName]=i.textContent;else if(i.nodeType!==Node.TEXT_NODE){const e=sa(i,t);r[i.nodeName]?Array.isArray(r[i.nodeName])?r[i.nodeName].push(e):r[i.nodeName]=[r[i.nodeName],e]:r[i.nodeName]=e}}return r}const oa=new XMLSerializer;function ma(e,t={}){var a,r,i,n,s;const o={rootName:null!==(a=t.rootName)&&void 0!==a?a:"root",includeRoot:null!==(r=t.includeRoot)&&void 0!==r&&r,xmlCharKey:null!==(i=t.xmlCharKey)&&void 0!==i?i:"_",cdataPropName:null!==(n=t.cdataPropName)&&void 0!==n?n:"__cdata",stopNodes:null!==(s=t.stopNodes)&&void 0!==s?s:[]},m=da(e,o.rootName,o)[0];return'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+oa.serializeToString(m).replace(/ xmlns=""/g,"")}function la(e){const t=[];for(const a of Object.keys(e)){const r=aa.createAttribute(a);r.value=e[a].toString(),t.push(r)}return t}function da(e,t,a){var r;if(null==e||"string"==typeof e||"number"==typeof e||"boolean"==typeof e){const a=aa.createElement(t);return a.textContent=null==e?"":e.toString(),[a]}if(Array.isArray(e)){const r=[];for(const i of e)for(const e of da(i,t,a))r.push(e);return r}if("object"==typeof e){let i;i=(null===(r=e[ea])||void 0===r?void 0:r.xmlns)?aa.createElementNS(e[ea].xmlns,t):aa.createElement(t);for(const t of Object.keys(e))if(t===ea)for(const a of la(e[t]))i.attributes.setNamedItem(a);else if(t===a.xmlCharKey)i.textContent=e[t].toString();else if(t===a.cdataPropName){const a=aa.createCDATASection(e[t].toString());i.appendChild(a)}else for(const r of da(e[t],t,a))i.appendChild(r);return[i]}throw new Error(`Illegal value passed to buildObject: ${e}`)}const ca=z("storage-blob");class pa{constructor(e,t){this._nextPolicy=e,this._options=t}shouldLog(e){return this._options.shouldLog(e)}log(e,t){this._options.log(e,t)}}const ua="12.26.0",ya="2025-01-05",ga=268435456,ha=4194304,xa="https://storage.azure.com/.default",ba="_",Na="snapshot",fa="versionid",Sa="timeout",va="Content-ID",Ca="Content-Length",Pa="Cookie",za="",wa="\r\n",Ra="HTTP/1.1",qa=["Access-Control-Allow-Origin","Cache-Control","Content-Length","Content-Type","Date","Request-Id","traceparent","Transfer-Encoding","User-Agent","x-ms-client-request-id","x-ms-date","x-ms-error-code","x-ms-request-id","x-ms-return-client-request-id","x-ms-version","Accept-Ranges","Content-Disposition","Content-Encoding","Content-Language","Content-MD5","Content-Range","ETag","Last-Modified","Server","Vary","x-ms-content-crc64","x-ms-copy-action","x-ms-copy-completion-time","x-ms-copy-id","x-ms-copy-progress","x-ms-copy-status","x-ms-has-immutability-policy","x-ms-has-legal-hold","x-ms-lease-state","x-ms-lease-status","x-ms-range","x-ms-request-server-encrypted","x-ms-server-encrypted","x-ms-snapshot","x-ms-source-range","If-Match","If-Modified-Since","If-None-Match","If-Unmodified-Since","x-ms-access-tier","x-ms-access-tier-change-time","x-ms-access-tier-inferred","x-ms-account-kind","x-ms-archive-status","x-ms-blob-append-offset","x-ms-blob-cache-control","x-ms-blob-committed-block-count","x-ms-blob-condition-appendpos","x-ms-blob-condition-maxsize","x-ms-blob-content-disposition","x-ms-blob-content-encoding","x-ms-blob-content-language","x-ms-blob-content-length","x-ms-blob-content-md5","x-ms-blob-content-type","x-ms-blob-public-access","x-ms-blob-sequence-number","x-ms-blob-type","x-ms-copy-destination-snapshot","x-ms-creation-time","x-ms-default-encryption-scope","x-ms-delete-snapshots","x-ms-delete-type-permanent","x-ms-deny-encryption-scope-override","x-ms-encryption-algorithm","x-ms-if-sequence-number-eq","x-ms-if-sequence-number-le","x-ms-if-sequence-number-lt","x-ms-incremental-copy","x-ms-lease-action","x-ms-lease-break-period","x-ms-lease-duration","x-ms-lease-id","x-ms-lease-time","x-ms-page-write","x-ms-proposed-lease-id","x-ms-range-get-content-md5","x-ms-rehydrate-priority","x-ms-sequence-number-action","x-ms-sku-name","x-ms-source-content-md5","x-ms-source-if-match","x-ms-source-if-modified-since","x-ms-source-if-none-match","x-ms-source-if-unmodified-since","x-ms-tag-count","x-ms-encryption-key-sha256","x-ms-copy-source-error-code","x-ms-copy-source-status-code","x-ms-if-tags","x-ms-source-if-tags"],Ba=["comp","maxresults","rscc","rscd","rsce","rscl","rsct","se","si","sip","sp","spr","sr","srt","ss","st","sv","include","marker","prefix","copyid","restype","blockid","blocklisttype","delimiter","prevsnapshot","ske","skoid","sks","skt","sktid","skv","snapshot"],Oa=["10000","10001","10002","10003","10004","10100","10101","10102","10103","10104","11000","11001","11002","11003","11004","11100","11101","11102","11103","11104"];function Ea(e,t){const a=e.split(";");for(const e of a)if(e.trim().startsWith(t))return e.trim().match(t+"=(.*)")[1];return""}function Ma(e){let t="";e.startsWith("UseDevelopmentStorage=true")&&(t=function(e){let t="";if(-1!==e.search("DevelopmentStorageProxyUri=")){const a=e.split(";");for(const e of a)e.trim().startsWith("DevelopmentStorageProxyUri=")&&(t=e.trim().match("DevelopmentStorageProxyUri=(.*)")[1])}return t}(e),e="DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;");let a=Ea(e,"BlobEndpoint");if(a=a.endsWith("/")?a.slice(0,-1):a,-1!==e.search("DefaultEndpointsProtocol=")&&-1!==e.search("AccountKey=")){let r="",i="",n=Buffer.from("accountKey","base64"),s="";if(i=Ea(e,"AccountName"),n=Buffer.from(Ea(e,"AccountKey"),"base64"),!a){r=Ea(e,"DefaultEndpointsProtocol");const t=r.toLowerCase();if("https"!==t&&"http"!==t)throw new Error("Invalid DefaultEndpointsProtocol in the provided Connection String. Expecting 'https' or 'http'");if(s=Ea(e,"EndpointSuffix"),!s)throw new Error("Invalid EndpointSuffix in the provided Connection String");a=`${r}://${i}.blob.${s}`}if(!i)throw new Error("Invalid AccountName in the provided Connection String");if(0===n.length)throw new Error("Invalid AccountKey in the provided Connection String");return{kind:"AccountConnString",url:a,accountName:i,accountKey:n,proxyUri:t}}{let t=Ea(e,"SharedAccessSignature"),r=Ea(e,"AccountName");if(r||(r=Fa(a)),!a)throw new Error("Invalid BlobEndpoint in the provided SAS Connection String");if(!t)throw new Error("Invalid SharedAccessSignature in the provided SAS Connection String");return t.startsWith("?")&&(t=t.substring(1)),{kind:"SASConnString",url:a,accountName:r,accountSas:t}}}function Ta(e,t){const a=new URL(e);let r=a.pathname;return r=r?r.endsWith("/")?`${r}${t}`:`${r}/${t}`:t,a.pathname=r,a.toString()}function Ia(e,t,a){const r=new URL(e),i=encodeURIComponent(t),n=a?encodeURIComponent(a):void 0,s=""===r.search?"?":r.search,o=[];for(const e of s.slice(1).split("&"))if(e){const[t]=e.split("=",2);t!==i&&o.push(e)}return n&&o.push(`${i}=${n}`),r.search=o.length?`?${o.join("&")}`:"",r.toString()}function Aa(e,t){var a;return null!==(a=new URL(e).searchParams.get(t))&&void 0!==a?a:void 0}function Ha(e,t){const a=new URL(e);return a.hostname=t,a.toString()}function Da(e){try{return new URL(e).pathname}catch(e){return}}function ka(e){const t=new URL(e),a=t.pathname;if(!a)throw new RangeError("Invalid url without valid path.");let r=t.search||"";return r=r.trim(),""!==r&&(r=r.startsWith("?")?r:`?${r}`),`${a}${r}`}function La(e,t){const a=new URL(e);let r=a.search;return r?r+="&"+t:r=t,a.search=r,a.toString()}function ja(e,t=!0){const a=e.toISOString();return t?a.substring(0,a.length-1)+"0000Z":a.substring(0,a.length-5)+"Z"}function Ua(e,t){e.length>42&&(e=e.slice(0,42));return a=e+function(e,t,a=" "){return String.prototype.padStart?e.padStart(t,a):(a=a||" ",e.length>t?e:((t-=e.length)>a.length&&(a+=a.repeat(t/a.length)),a.slice(0,t)+e))}(t.toString(),48-e.length,"0"),G?Buffer.from(a).toString("base64"):btoa(a);var a}async function _a(e,t,a){return new Promise(((r,i)=>{let n;const s=()=>{void 0!==n&&clearTimeout(n),i(a)};n=setTimeout((()=>{void 0!==t&&t.removeEventListener("abort",s),r()}),e),void 0!==t&&t.addEventListener("abort",s)}))}function $a(e,t){return e.toLocaleLowerCase()===t.toLocaleLowerCase()}function Fa(e){const t=new URL(e);let a;try{return a="blob"===t.hostname.split(".")[1]?t.hostname.split(".")[0]:Va(t)?t.pathname.split("/")[1]:"",a}catch(e){throw new Error("Unable to extract accountName with provided information.")}}function Va(e){const t=e.host;return/^.*:.*:.*$|^(localhost|host.docker.internal)(:[0-9]+)?$|^(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])(\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])){3}(:[0-9]+)?$/.test(t)||Boolean(e.port)&&Oa.includes(e.port)}function Ka(e){if(void 0===e)return;const t=[];for(const a in e)if(Object.prototype.hasOwnProperty.call(e,a)){const r=e[a];t.push(`${encodeURIComponent(a)}=${encodeURIComponent(r)}`)}return t.join("&")}function Ga(e){if(void 0===e)return;const t={blobTagSet:[]};for(const a in e)if(Object.prototype.hasOwnProperty.call(e,a)){const r=e[a];t.blobTagSet.push({key:a,value:r})}return t}function Xa(e){if(void 0===e)return;const t={};for(const a of e.blobTagSet)t[a.key]=a.value;return t}function Wa(e){if(void 0!==e)switch(e.kind){case"csv":return{format:{type:"delimited",delimitedTextConfiguration:{columnSeparator:e.columnSeparator||",",fieldQuote:e.fieldQuote||"",recordSeparator:e.recordSeparator,escapeChar:e.escapeCharacter||"",headersPresent:e.hasHeaders||!1}}};case"json":return{format:{type:"json",jsonTextConfiguration:{recordSeparator:e.recordSeparator}}};case"arrow":return{format:{type:"arrow",arrowConfiguration:{schema:e.schema}}};case"parquet":return{format:{type:"parquet"}};default:throw Error("Invalid BlobQueryTextConfiguration.")}}function Qa(e){if(!e)return;if("policy-id"in e)return;const t=[];for(const a in e){const r=a.split("_"),i="or-";r[0].startsWith(i)&&(r[0]=r[0].substring(i.length));const n={ruleId:r[1],replicationStatus:e[a]},s=t.findIndex((e=>e.policyId===r[0]));s>-1?t[s].rules.push(n):t.push({policyId:r[0],rules:[n]})}return t}function Ja(e){return e?e.scheme+" "+e.value:void 0}function Za(e){return e.encoded?decodeURIComponent(e.content):e.content}function Ya(e){var t;return Object.assign(Object.assign({},e),{segment:{blobPrefixes:null===(t=e.segment.blobPrefixes)||void 0===t?void 0:t.map((e=>Object.assign(Object.assign({},e),{name:Za(e.name)}))),blobItems:e.segment.blobItems.map((e=>Object.assign(Object.assign({},e),{name:Za(e.name)})))}})}function*er(e){let t=[],a=[];e.pageRange&&(t=e.pageRange),e.clearRange&&(a=e.clearRange);let r=0,i=0;for(;r<t.length&&i<a.length;)t[r].start<a[i].start?(yield{start:t[r].start,end:t[r].end,isClear:!1},++r):(yield{start:a[i].start,end:a[i].end,isClear:!0},++i);for(;r<t.length;++r)yield{start:t[r].start,end:t[r].end,isClear:!1};for(;i<a.length;++i)yield{start:a[i].start,end:a[i].end,isClear:!0}}function tr(e){const t=e.split("/");for(let e=0;e<t.length;e++)t[e]=encodeURIComponent(t[e]);return t.join("/")}function ar(e){if("_response"in e)return e;throw new TypeError(`Unexpected response object ${e}`)}var rr;!function(e){e[e.EXPONENTIAL=0]="EXPONENTIAL",e[e.FIXED=1]="FIXED"}(rr||(rr={}));const ir={maxRetryDelayInMs:12e4,maxTries:4,retryDelayInMs:4e3,retryPolicyType:rr.EXPONENTIAL,secondaryHost:"",tryTimeoutInMs:void 0},nr=new E("The operation was aborted.");class sr extends pa{constructor(e,t,a=ir){super(e,t),this.retryOptions={retryPolicyType:a.retryPolicyType?a.retryPolicyType:ir.retryPolicyType,maxTries:a.maxTries&&a.maxTries>=1?Math.floor(a.maxTries):ir.maxTries,tryTimeoutInMs:a.tryTimeoutInMs&&a.tryTimeoutInMs>=0?a.tryTimeoutInMs:ir.tryTimeoutInMs,retryDelayInMs:a.retryDelayInMs&&a.retryDelayInMs>=0?Math.min(a.retryDelayInMs,a.maxRetryDelayInMs?a.maxRetryDelayInMs:ir.maxRetryDelayInMs):ir.retryDelayInMs,maxRetryDelayInMs:a.maxRetryDelayInMs&&a.maxRetryDelayInMs>=0?a.maxRetryDelayInMs:ir.maxRetryDelayInMs,secondaryHost:a.secondaryHost?a.secondaryHost:ir.secondaryHost}}async sendRequest(e){return this.attemptSendRequest(e,!1,1)}async attemptSendRequest(e,t,a){const r=e.clone(),i=t||!this.retryOptions.secondaryHost||!("GET"===e.method||"HEAD"===e.method||"OPTIONS"===e.method)||a%2==1;let n;i||(r.url=Ha(r.url,this.retryOptions.secondaryHost)),this.retryOptions.tryTimeoutInMs&&(r.url=Ia(r.url,Sa,Math.floor(this.retryOptions.tryTimeoutInMs/1e3).toString()));try{if(ca.info(`RetryPolicy: =====> Try=${a} ${i?"Primary":"Secondary"}`),n=await this._nextPolicy.sendRequest(r),!this.shouldRetry(i,a,n))return n;t=t||!i&&404===n.status}catch(e){if(ca.error(`RetryPolicy: Caught error, message: ${e.message}, code: ${e.code}`),!this.shouldRetry(i,a,n,e))throw e}return await this.delay(i,a,e.abortSignal),this.attemptSendRequest(e,t,++a)}shouldRetry(e,t,a,r){if(t>=this.retryOptions.maxTries)return ca.info(`RetryPolicy: Attempt(s) ${t} >= maxTries ${this.retryOptions.maxTries}, no further try.`),!1;const i=["ETIMEDOUT","ESOCKETTIMEDOUT","ECONNREFUSED","ECONNRESET","ENOENT","ENOTFOUND","TIMEOUT","EPIPE","REQUEST_SEND_ERROR"];if(r)for(const e of i)if(r.name.toUpperCase().includes(e)||r.message.toUpperCase().includes(e)||r.code&&r.code.toString().toUpperCase()===e)return ca.info(`RetryPolicy: Network error ${e} found, will retry.`),!0;if(a||r){const t=a?a.status:r?r.statusCode:0;if(!e&&404===t)return ca.info("RetryPolicy: Secondary access with 404, will retry."),!0;if(503===t||500===t)return ca.info(`RetryPolicy: Will retry for status code ${t}.`),!0}return!("PARSE_ERROR"!==(null==r?void 0:r.code)||!(null==r?void 0:r.message.startsWith('Error "Error: Unclosed root tag'))||(ca.info("RetryPolicy: Incomplete XML response likely due to service timeout, will retry."),0))}async delay(e,t,a){let r=0;if(e)switch(this.retryOptions.retryPolicyType){case rr.EXPONENTIAL:r=Math.min((Math.pow(2,t-1)-1)*this.retryOptions.retryDelayInMs,this.retryOptions.maxRetryDelayInMs);break;case rr.FIXED:r=this.retryOptions.retryDelayInMs}else r=1e3*Math.random();return ca.info(`RetryPolicy: Delay for ${r}ms`),_a(r,a,nr)}}class or{constructor(e){this.retryOptions=e}create(e,t){return new sr(e,t,this.retryOptions)}}class mr{}class lr extends pa{sendRequest(e){return this._nextPolicy.sendRequest(this.signRequest(e))}signRequest(e){return e}}class dr extends lr{constructor(e,t){super(e,t)}}class cr{create(e,t){throw new Error("Method should be implemented in children classes.")}}class pr extends cr{create(e,t){return new dr(e,t)}}let ur;var yr;!function(e){e[e.EXPONENTIAL=0]="EXPONENTIAL",e[e.FIXED=1]="FIXED"}(yr||(yr={}));const gr={maxRetryDelayInMs:12e4,maxTries:4,retryDelayInMs:4e3,retryPolicyType:yr.EXPONENTIAL,secondaryHost:"",tryTimeoutInMs:void 0},hr=["ETIMEDOUT","ESOCKETTIMEDOUT","ECONNREFUSED","ECONNRESET","ENOENT","ENOTFOUND","TIMEOUT","EPIPE","REQUEST_SEND_ERROR"],xr=new E("The operation was aborted.");class br extends pa{constructor(e,t){super(e,t)}async sendRequest(e){return G||("GET"!==e.method.toUpperCase()&&"HEAD"!==e.method.toUpperCase()||(e.url=Ia(e.url,ba,(new Date).getTime().toString())),e.headers.remove(Pa),e.headers.remove(Ca)),this._nextPolicy.sendRequest(e)}}class Nr{create(e,t){return new br(e,t)}}function fr(e){if(!e||"object"!=typeof e)return!1;const t=e;return Array.isArray(t.factories)&&"object"==typeof t.options&&"function"==typeof t.toServiceClientOptions}class Sr{constructor(e,t={}){this.factories=e,this.options=t}toServiceClientOptions(){return{httpClient:this.options.httpClient,requestPolicyFactories:this.factories}}}function vr(e,t={}){e||(e=new pr);const a=new Sr([],t);return a._credential=e,a}function Cr(e){var t;const a=e.options,{httpClient:r}=a,i=function(e,t){var a={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(a[r[i]]=e[r[i]])}return a}(a,["httpClient"]);let n=e._coreHttpClient;var s;n||(n=r?(s=r,{sendRequest:async e=>Wt(await s.sendRequest($t(e,{createProxy:!0})))}):(ur||(ur=Ue()),ur),e._coreHttpClient=n);let o=e._corePipeline;if(!o){const a=`azsdk-js-azure-storage-blob/${ua}`,r=i.userAgentOptions&&i.userAgentOptions.userAgentPrefix?`${i.userAgentOptions.userAgentPrefix} ${a}`:`${a}`;o=Et(Object.assign(Object.assign({},i),{loggingOptions:{additionalAllowedHeaderNames:qa,additionalAllowedQueryParameters:Ba,logger:ca.info},userAgentOptions:{userAgentPrefix:r},serializationOptions:{stringifyXML:ma,serializerOptions:{xml:{xmlCharKey:"#"}}},deserializationOptions:{parseXML:ia,serializerOptions:{xml:{xmlCharKey:"#"}}}})),o.removePolicy({phase:"Retry"}),o.removePolicy({name:"decompressResponsePolicy"}),o.addPolicy({name:"StorageCorrectContentLengthPolicy",sendRequest:async(e,t)=>t(e)}),o.addPolicy(function(e={}){var t,a,r,i,n,s;const o=null!==(t=e.retryPolicyType)&&void 0!==t?t:gr.retryPolicyType,m=null!==(a=e.maxTries)&&void 0!==a?a:gr.maxTries,l=null!==(r=e.retryDelayInMs)&&void 0!==r?r:gr.retryDelayInMs,d=null!==(i=e.maxRetryDelayInMs)&&void 0!==i?i:gr.maxRetryDelayInMs,c=null!==(n=e.secondaryHost)&&void 0!==n?n:gr.secondaryHost,p=null!==(s=e.tryTimeoutInMs)&&void 0!==s?s:gr.tryTimeoutInMs;function u({isPrimaryRetry:e,attempt:t,response:a,error:r}){var i,n;if(t>=m)return ca.info(`RetryPolicy: Attempt(s) ${t} >= maxTries ${m}, no further try.`),!1;if(r){for(const e of hr)if(r.name.toUpperCase().includes(e)||r.message.toUpperCase().includes(e)||r.code&&r.code.toString().toUpperCase()===e)return ca.info(`RetryPolicy: Network error ${e} found, will retry.`),!0;if("PARSE_ERROR"===(null==r?void 0:r.code)&&(null==r?void 0:r.message.startsWith('Error "Error: Unclosed root tag')))return ca.info("RetryPolicy: Incomplete XML response likely due to service timeout, will retry."),!0}if(a||r){const t=null!==(n=null!==(i=null==a?void 0:a.status)&&void 0!==i?i:null==r?void 0:r.statusCode)&&void 0!==n?n:0;if(!e&&404===t)return ca.info("RetryPolicy: Secondary access with 404, will retry."),!0;if(503===t||500===t)return ca.info(`RetryPolicy: Will retry for status code ${t}.`),!0}return!1}function y(e,t){let a=0;if(e)switch(o){case yr.EXPONENTIAL:a=Math.min((Math.pow(2,t-1)-1)*l,d);break;case yr.FIXED:a=l}else a=1e3*Math.random();return ca.info(`RetryPolicy: Delay for ${a}ms`),a}return{name:"storageRetryPolicy",async sendRequest(e,t){p&&(e.url=Ia(e.url,Sa,String(Math.floor(p/1e3))));const a=e.url,r=c?Ha(e.url,c):void 0;let i,n,s=!1,o=1,m=!0;for(;m;){const l=s||!r||!["GET","HEAD","OPTIONS"].includes(e.method)||o%2==1;e.url=l?a:r,i=void 0,n=void 0;try{ca.info(`RetryPolicy: =====> Try=${o} ${l?"Primary":"Secondary"}`),i=await t(e),s=s||!l&&404===i.status}catch(e){if(!De(e))throw ca.error(`RetryPolicy: Caught error, message: ${A(e)}`),e;ca.error(`RetryPolicy: Caught error, message: ${e.message}, code: ${e.code}`),n=e}m=u({isPrimaryRetry:l,attempt:o,response:i,error:n}),m&&await _a(y(l,o),e.abortSignal,xr),o++}if(i)return i;throw null!=n?n:new He("RetryPolicy failed without known error.")}}}(i.retryOptions),{phase:"Retry"}),o.addPolicy({name:"storageBrowserPolicy",sendRequest:async(e,t)=>(G||("GET"!==e.method&&"HEAD"!==e.method||(e.url=Ia(e.url,ba,(new Date).getTime().toString())),e.headers.delete(Pa),e.headers.delete(Ca)),t(e))});const n=function(e){const t=[wr,zr,Rr,qr,Br,Or,Er];if(e.factories.length){const a=e.factories.filter((e=>!t.some((t=>t(e)))));if(a.length){const e=a.some((e=>function(e){return"InjectorPolicyFactory"===e.constructor.name}(e)));return{wrappedPolicies:Yt(a),afterRetry:e}}}}(e);n&&o.addPolicy(n.wrappedPolicies,n.afterRetry?{afterPhase:"Retry"}:void 0);const s=Pr(e);tt(s)?o.addPolicy(We({credential:s,scopes:null!==(t=i.audience)&&void 0!==t?t:xa,challengeCallbacks:{authorizeRequestOnChallenge:Lt}}),{phase:"Sign"}):s instanceof mr&&o.addPolicy((s.accountName,s.accountKey,{name:"storageSharedKeyCredentialPolicy",sendRequest:async(e,t)=>t(e)}),{phase:"Sign"}),e._corePipeline=o}return Object.assign(Object.assign({},i),{allowInsecureConnection:!0,httpClient:n,pipeline:o})}function Pr(e){if(e._credential)return e._credential;let t=new pr;for(const a of e.factories)if(tt(a.credential))t=a.credential;else if(zr(a))return a;return t}function zr(e){return e instanceof mr||"StorageSharedKeyCredential"===e.constructor.name}function wr(e){return e instanceof pr||"AnonymousCredential"===e.constructor.name}function Rr(e){return tt(e.credential)}function qr(e){return e instanceof Nr||"StorageBrowserPolicyFactory"===e.constructor.name}function Br(e){return e instanceof or||"StorageRetryPolicyFactory"===e.constructor.name}function Or(e){return"TelemetryPolicyFactory"===e.constructor.name}function Er(e){const t={log(e,t){},shouldLog:e=>!1},a=e.create({sendRequest:async e=>({request:e,headers:e.headers.clone(),status:500})},t).constructor.name;return["GenerateClientRequestIdPolicy","TracingPolicy","LogPolicy","ProxyPolicy","DisableResponseDecompressionPolicy","KeepAlivePolicy","DeserializationPolicy"].some((e=>a.startsWith(e)))}const Mr={serializedName:"BlobServiceProperties",xmlName:"StorageServiceProperties",type:{name:"Composite",className:"BlobServiceProperties",modelProperties:{blobAnalyticsLogging:{serializedName:"Logging",xmlName:"Logging",type:{name:"Composite",className:"Logging"}},hourMetrics:{serializedName:"HourMetrics",xmlName:"HourMetrics",type:{name:"Composite",className:"Metrics"}},minuteMetrics:{serializedName:"MinuteMetrics",xmlName:"MinuteMetrics",type:{name:"Composite",className:"Metrics"}},cors:{serializedName:"Cors",xmlName:"Cors",xmlIsWrapped:!0,xmlElementName:"CorsRule",type:{name:"Sequence",element:{type:{name:"Composite",className:"CorsRule"}}}},defaultServiceVersion:{serializedName:"DefaultServiceVersion",xmlName:"DefaultServiceVersion",type:{name:"String"}},deleteRetentionPolicy:{serializedName:"DeleteRetentionPolicy",xmlName:"DeleteRetentionPolicy",type:{name:"Composite",className:"RetentionPolicy"}},staticWebsite:{serializedName:"StaticWebsite",xmlName:"StaticWebsite",type:{name:"Composite",className:"StaticWebsite"}}}}},Tr={serializedName:"Logging",type:{name:"Composite",className:"Logging",modelProperties:{version:{serializedName:"Version",required:!0,xmlName:"Version",type:{name:"String"}},deleteProperty:{serializedName:"Delete",required:!0,xmlName:"Delete",type:{name:"Boolean"}},read:{serializedName:"Read",required:!0,xmlName:"Read",type:{name:"Boolean"}},write:{serializedName:"Write",required:!0,xmlName:"Write",type:{name:"Boolean"}},retentionPolicy:{serializedName:"RetentionPolicy",xmlName:"RetentionPolicy",type:{name:"Composite",className:"RetentionPolicy"}}}}},Ir={serializedName:"RetentionPolicy",type:{name:"Composite",className:"RetentionPolicy",modelProperties:{enabled:{serializedName:"Enabled",required:!0,xmlName:"Enabled",type:{name:"Boolean"}},days:{constraints:{InclusiveMinimum:1},serializedName:"Days",xmlName:"Days",type:{name:"Number"}}}}},Ar={serializedName:"Metrics",type:{name:"Composite",className:"Metrics",modelProperties:{version:{serializedName:"Version",xmlName:"Version",type:{name:"String"}},enabled:{serializedName:"Enabled",required:!0,xmlName:"Enabled",type:{name:"Boolean"}},includeAPIs:{serializedName:"IncludeAPIs",xmlName:"IncludeAPIs",type:{name:"Boolean"}},retentionPolicy:{serializedName:"RetentionPolicy",xmlName:"RetentionPolicy",type:{name:"Composite",className:"RetentionPolicy"}}}}},Hr={serializedName:"CorsRule",type:{name:"Composite",className:"CorsRule",modelProperties:{allowedOrigins:{serializedName:"AllowedOrigins",required:!0,xmlName:"AllowedOrigins",type:{name:"String"}},allowedMethods:{serializedName:"AllowedMethods",required:!0,xmlName:"AllowedMethods",type:{name:"String"}},allowedHeaders:{serializedName:"AllowedHeaders",required:!0,xmlName:"AllowedHeaders",type:{name:"String"}},exposedHeaders:{serializedName:"ExposedHeaders",required:!0,xmlName:"ExposedHeaders",type:{name:"String"}},maxAgeInSeconds:{constraints:{InclusiveMinimum:0},serializedName:"MaxAgeInSeconds",required:!0,xmlName:"MaxAgeInSeconds",type:{name:"Number"}}}}},Dr={serializedName:"StaticWebsite",type:{name:"Composite",className:"StaticWebsite",modelProperties:{enabled:{serializedName:"Enabled",required:!0,xmlName:"Enabled",type:{name:"Boolean"}},indexDocument:{serializedName:"IndexDocument",xmlName:"IndexDocument",type:{name:"String"}},errorDocument404Path:{serializedName:"ErrorDocument404Path",xmlName:"ErrorDocument404Path",type:{name:"String"}},defaultIndexDocumentPath:{serializedName:"DefaultIndexDocumentPath",xmlName:"DefaultIndexDocumentPath",type:{name:"String"}}}}},kr={serializedName:"StorageError",type:{name:"Composite",className:"StorageError",modelProperties:{message:{serializedName:"Message",xmlName:"Message",type:{name:"String"}},code:{serializedName:"Code",xmlName:"Code",type:{name:"String"}},authenticationErrorDetail:{serializedName:"AuthenticationErrorDetail",xmlName:"AuthenticationErrorDetail",type:{name:"String"}}}}},Lr={serializedName:"BlobServiceStatistics",xmlName:"StorageServiceStats",type:{name:"Composite",className:"BlobServiceStatistics",modelProperties:{geoReplication:{serializedName:"GeoReplication",xmlName:"GeoReplication",type:{name:"Composite",className:"GeoReplication"}}}}},jr={serializedName:"GeoReplication",type:{name:"Composite",className:"GeoReplication",modelProperties:{status:{serializedName:"Status",required:!0,xmlName:"Status",type:{name:"Enum",allowedValues:["live","bootstrap","unavailable"]}},lastSyncOn:{serializedName:"LastSyncTime",required:!0,xmlName:"LastSyncTime",type:{name:"DateTimeRfc1123"}}}}},Ur={serializedName:"ListContainersSegmentResponse",xmlName:"EnumerationResults",type:{name:"Composite",className:"ListContainersSegmentResponse",modelProperties:{serviceEndpoint:{serializedName:"ServiceEndpoint",required:!0,xmlName:"ServiceEndpoint",xmlIsAttribute:!0,type:{name:"String"}},prefix:{serializedName:"Prefix",xmlName:"Prefix",type:{name:"String"}},marker:{serializedName:"Marker",xmlName:"Marker",type:{name:"String"}},maxPageSize:{serializedName:"MaxResults",xmlName:"MaxResults",type:{name:"Number"}},containerItems:{serializedName:"ContainerItems",required:!0,xmlName:"Containers",xmlIsWrapped:!0,xmlElementName:"Container",type:{name:"Sequence",element:{type:{name:"Composite",className:"ContainerItem"}}}},continuationToken:{serializedName:"NextMarker",xmlName:"NextMarker",type:{name:"String"}}}}},_r={serializedName:"ContainerItem",xmlName:"Container",type:{name:"Composite",className:"ContainerItem",modelProperties:{name:{serializedName:"Name",required:!0,xmlName:"Name",type:{name:"String"}},deleted:{serializedName:"Deleted",xmlName:"Deleted",type:{name:"Boolean"}},version:{serializedName:"Version",xmlName:"Version",type:{name:"String"}},properties:{serializedName:"Properties",xmlName:"Properties",type:{name:"Composite",className:"ContainerProperties"}},metadata:{serializedName:"Metadata",xmlName:"Metadata",type:{name:"Dictionary",value:{type:{name:"String"}}}}}}},$r={serializedName:"ContainerProperties",type:{name:"Composite",className:"ContainerProperties",modelProperties:{lastModified:{serializedName:"Last-Modified",required:!0,xmlName:"Last-Modified",type:{name:"DateTimeRfc1123"}},etag:{serializedName:"Etag",required:!0,xmlName:"Etag",type:{name:"String"}},leaseStatus:{serializedName:"LeaseStatus",xmlName:"LeaseStatus",type:{name:"Enum",allowedValues:["locked","unlocked"]}},leaseState:{serializedName:"LeaseState",xmlName:"LeaseState",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseDuration:{serializedName:"LeaseDuration",xmlName:"LeaseDuration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},publicAccess:{serializedName:"PublicAccess",xmlName:"PublicAccess",type:{name:"Enum",allowedValues:["container","blob"]}},hasImmutabilityPolicy:{serializedName:"HasImmutabilityPolicy",xmlName:"HasImmutabilityPolicy",type:{name:"Boolean"}},hasLegalHold:{serializedName:"HasLegalHold",xmlName:"HasLegalHold",type:{name:"Boolean"}},defaultEncryptionScope:{serializedName:"DefaultEncryptionScope",xmlName:"DefaultEncryptionScope",type:{name:"String"}},preventEncryptionScopeOverride:{serializedName:"DenyEncryptionScopeOverride",xmlName:"DenyEncryptionScopeOverride",type:{name:"Boolean"}},deletedOn:{serializedName:"DeletedTime",xmlName:"DeletedTime",type:{name:"DateTimeRfc1123"}},remainingRetentionDays:{serializedName:"RemainingRetentionDays",xmlName:"RemainingRetentionDays",type:{name:"Number"}},isImmutableStorageWithVersioningEnabled:{serializedName:"ImmutableStorageWithVersioningEnabled",xmlName:"ImmutableStorageWithVersioningEnabled",type:{name:"Boolean"}}}}},Fr={serializedName:"KeyInfo",type:{name:"Composite",className:"KeyInfo",modelProperties:{startsOn:{serializedName:"Start",required:!0,xmlName:"Start",type:{name:"String"}},expiresOn:{serializedName:"Expiry",required:!0,xmlName:"Expiry",type:{name:"String"}}}}},Vr={serializedName:"UserDelegationKey",type:{name:"Composite",className:"UserDelegationKey",modelProperties:{signedObjectId:{serializedName:"SignedOid",required:!0,xmlName:"SignedOid",type:{name:"String"}},signedTenantId:{serializedName:"SignedTid",required:!0,xmlName:"SignedTid",type:{name:"String"}},signedStartsOn:{serializedName:"SignedStart",required:!0,xmlName:"SignedStart",type:{name:"String"}},signedExpiresOn:{serializedName:"SignedExpiry",required:!0,xmlName:"SignedExpiry",type:{name:"String"}},signedService:{serializedName:"SignedService",required:!0,xmlName:"SignedService",type:{name:"String"}},signedVersion:{serializedName:"SignedVersion",required:!0,xmlName:"SignedVersion",type:{name:"String"}},value:{serializedName:"Value",required:!0,xmlName:"Value",type:{name:"String"}}}}},Kr={serializedName:"FilterBlobSegment",xmlName:"EnumerationResults",type:{name:"Composite",className:"FilterBlobSegment",modelProperties:{serviceEndpoint:{serializedName:"ServiceEndpoint",required:!0,xmlName:"ServiceEndpoint",xmlIsAttribute:!0,type:{name:"String"}},where:{serializedName:"Where",required:!0,xmlName:"Where",type:{name:"String"}},blobs:{serializedName:"Blobs",required:!0,xmlName:"Blobs",xmlIsWrapped:!0,xmlElementName:"Blob",type:{name:"Sequence",element:{type:{name:"Composite",className:"FilterBlobItem"}}}},continuationToken:{serializedName:"NextMarker",xmlName:"NextMarker",type:{name:"String"}}}}},Gr={serializedName:"FilterBlobItem",xmlName:"Blob",type:{name:"Composite",className:"FilterBlobItem",modelProperties:{name:{serializedName:"Name",required:!0,xmlName:"Name",type:{name:"String"}},containerName:{serializedName:"ContainerName",required:!0,xmlName:"ContainerName",type:{name:"String"}},tags:{serializedName:"Tags",xmlName:"Tags",type:{name:"Composite",className:"BlobTags"}}}}},Xr={serializedName:"BlobTags",xmlName:"Tags",type:{name:"Composite",className:"BlobTags",modelProperties:{blobTagSet:{serializedName:"BlobTagSet",required:!0,xmlName:"TagSet",xmlIsWrapped:!0,xmlElementName:"Tag",type:{name:"Sequence",element:{type:{name:"Composite",className:"BlobTag"}}}}}}},Wr={serializedName:"BlobTag",xmlName:"Tag",type:{name:"Composite",className:"BlobTag",modelProperties:{key:{serializedName:"Key",required:!0,xmlName:"Key",type:{name:"String"}},value:{serializedName:"Value",required:!0,xmlName:"Value",type:{name:"String"}}}}},Qr={serializedName:"SignedIdentifier",xmlName:"SignedIdentifier",type:{name:"Composite",className:"SignedIdentifier",modelProperties:{id:{serializedName:"Id",required:!0,xmlName:"Id",type:{name:"String"}},accessPolicy:{serializedName:"AccessPolicy",xmlName:"AccessPolicy",type:{name:"Composite",className:"AccessPolicy"}}}}},Jr={serializedName:"AccessPolicy",type:{name:"Composite",className:"AccessPolicy",modelProperties:{startsOn:{serializedName:"Start",xmlName:"Start",type:{name:"String"}},expiresOn:{serializedName:"Expiry",xmlName:"Expiry",type:{name:"String"}},permissions:{serializedName:"Permission",xmlName:"Permission",type:{name:"String"}}}}},Zr={serializedName:"ListBlobsFlatSegmentResponse",xmlName:"EnumerationResults",type:{name:"Composite",className:"ListBlobsFlatSegmentResponse",modelProperties:{serviceEndpoint:{serializedName:"ServiceEndpoint",required:!0,xmlName:"ServiceEndpoint",xmlIsAttribute:!0,type:{name:"String"}},containerName:{serializedName:"ContainerName",required:!0,xmlName:"ContainerName",xmlIsAttribute:!0,type:{name:"String"}},prefix:{serializedName:"Prefix",xmlName:"Prefix",type:{name:"String"}},marker:{serializedName:"Marker",xmlName:"Marker",type:{name:"String"}},maxPageSize:{serializedName:"MaxResults",xmlName:"MaxResults",type:{name:"Number"}},segment:{serializedName:"Segment",xmlName:"Blobs",type:{name:"Composite",className:"BlobFlatListSegment"}},continuationToken:{serializedName:"NextMarker",xmlName:"NextMarker",type:{name:"String"}}}}},Yr={serializedName:"BlobFlatListSegment",xmlName:"Blobs",type:{name:"Composite",className:"BlobFlatListSegment",modelProperties:{blobItems:{serializedName:"BlobItems",required:!0,xmlName:"BlobItems",xmlElementName:"Blob",type:{name:"Sequence",element:{type:{name:"Composite",className:"BlobItemInternal"}}}}}}},ei={serializedName:"BlobItemInternal",xmlName:"Blob",type:{name:"Composite",className:"BlobItemInternal",modelProperties:{name:{serializedName:"Name",xmlName:"Name",type:{name:"Composite",className:"BlobName"}},deleted:{serializedName:"Deleted",required:!0,xmlName:"Deleted",type:{name:"Boolean"}},snapshot:{serializedName:"Snapshot",required:!0,xmlName:"Snapshot",type:{name:"String"}},versionId:{serializedName:"VersionId",xmlName:"VersionId",type:{name:"String"}},isCurrentVersion:{serializedName:"IsCurrentVersion",xmlName:"IsCurrentVersion",type:{name:"Boolean"}},properties:{serializedName:"Properties",xmlName:"Properties",type:{name:"Composite",className:"BlobPropertiesInternal"}},metadata:{serializedName:"Metadata",xmlName:"Metadata",type:{name:"Dictionary",value:{type:{name:"String"}}}},blobTags:{serializedName:"BlobTags",xmlName:"Tags",type:{name:"Composite",className:"BlobTags"}},objectReplicationMetadata:{serializedName:"ObjectReplicationMetadata",xmlName:"OrMetadata",type:{name:"Dictionary",value:{type:{name:"String"}}}},hasVersionsOnly:{serializedName:"HasVersionsOnly",xmlName:"HasVersionsOnly",type:{name:"Boolean"}}}}},ti={serializedName:"BlobName",type:{name:"Composite",className:"BlobName",modelProperties:{encoded:{serializedName:"Encoded",xmlName:"Encoded",xmlIsAttribute:!0,type:{name:"Boolean"}},content:{serializedName:"content",xmlName:"content",xmlIsMsText:!0,type:{name:"String"}}}}},ai={serializedName:"BlobPropertiesInternal",xmlName:"Properties",type:{name:"Composite",className:"BlobPropertiesInternal",modelProperties:{createdOn:{serializedName:"Creation-Time",xmlName:"Creation-Time",type:{name:"DateTimeRfc1123"}},lastModified:{serializedName:"Last-Modified",required:!0,xmlName:"Last-Modified",type:{name:"DateTimeRfc1123"}},etag:{serializedName:"Etag",required:!0,xmlName:"Etag",type:{name:"String"}},contentLength:{serializedName:"Content-Length",xmlName:"Content-Length",type:{name:"Number"}},contentType:{serializedName:"Content-Type",xmlName:"Content-Type",type:{name:"String"}},contentEncoding:{serializedName:"Content-Encoding",xmlName:"Content-Encoding",type:{name:"String"}},contentLanguage:{serializedName:"Content-Language",xmlName:"Content-Language",type:{name:"String"}},contentMD5:{serializedName:"Content-MD5",xmlName:"Content-MD5",type:{name:"ByteArray"}},contentDisposition:{serializedName:"Content-Disposition",xmlName:"Content-Disposition",type:{name:"String"}},cacheControl:{serializedName:"Cache-Control",xmlName:"Cache-Control",type:{name:"String"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},blobType:{serializedName:"BlobType",xmlName:"BlobType",type:{name:"Enum",allowedValues:["BlockBlob","PageBlob","AppendBlob"]}},leaseStatus:{serializedName:"LeaseStatus",xmlName:"LeaseStatus",type:{name:"Enum",allowedValues:["locked","unlocked"]}},leaseState:{serializedName:"LeaseState",xmlName:"LeaseState",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseDuration:{serializedName:"LeaseDuration",xmlName:"LeaseDuration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},copyId:{serializedName:"CopyId",xmlName:"CopyId",type:{name:"String"}},copyStatus:{serializedName:"CopyStatus",xmlName:"CopyStatus",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},copySource:{serializedName:"CopySource",xmlName:"CopySource",type:{name:"String"}},copyProgress:{serializedName:"CopyProgress",xmlName:"CopyProgress",type:{name:"String"}},copyCompletedOn:{serializedName:"CopyCompletionTime",xmlName:"CopyCompletionTime",type:{name:"DateTimeRfc1123"}},copyStatusDescription:{serializedName:"CopyStatusDescription",xmlName:"CopyStatusDescription",type:{name:"String"}},serverEncrypted:{serializedName:"ServerEncrypted",xmlName:"ServerEncrypted",type:{name:"Boolean"}},incrementalCopy:{serializedName:"IncrementalCopy",xmlName:"IncrementalCopy",type:{name:"Boolean"}},destinationSnapshot:{serializedName:"DestinationSnapshot",xmlName:"DestinationSnapshot",type:{name:"String"}},deletedOn:{serializedName:"DeletedTime",xmlName:"DeletedTime",type:{name:"DateTimeRfc1123"}},remainingRetentionDays:{serializedName:"RemainingRetentionDays",xmlName:"RemainingRetentionDays",type:{name:"Number"}},accessTier:{serializedName:"AccessTier",xmlName:"AccessTier",type:{name:"Enum",allowedValues:["P4","P6","P10","P15","P20","P30","P40","P50","P60","P70","P80","Hot","Cool","Archive","Cold"]}},accessTierInferred:{serializedName:"AccessTierInferred",xmlName:"AccessTierInferred",type:{name:"Boolean"}},archiveStatus:{serializedName:"ArchiveStatus",xmlName:"ArchiveStatus",type:{name:"Enum",allowedValues:["rehydrate-pending-to-hot","rehydrate-pending-to-cool","rehydrate-pending-to-cold"]}},customerProvidedKeySha256:{serializedName:"CustomerProvidedKeySha256",xmlName:"CustomerProvidedKeySha256",type:{name:"String"}},encryptionScope:{serializedName:"EncryptionScope",xmlName:"EncryptionScope",type:{name:"String"}},accessTierChangedOn:{serializedName:"AccessTierChangeTime",xmlName:"AccessTierChangeTime",type:{name:"DateTimeRfc1123"}},tagCount:{serializedName:"TagCount",xmlName:"TagCount",type:{name:"Number"}},expiresOn:{serializedName:"Expiry-Time",xmlName:"Expiry-Time",type:{name:"DateTimeRfc1123"}},isSealed:{serializedName:"Sealed",xmlName:"Sealed",type:{name:"Boolean"}},rehydratePriority:{serializedName:"RehydratePriority",xmlName:"RehydratePriority",type:{name:"Enum",allowedValues:["High","Standard"]}},lastAccessedOn:{serializedName:"LastAccessTime",xmlName:"LastAccessTime",type:{name:"DateTimeRfc1123"}},immutabilityPolicyExpiresOn:{serializedName:"ImmutabilityPolicyUntilDate",xmlName:"ImmutabilityPolicyUntilDate",type:{name:"DateTimeRfc1123"}},immutabilityPolicyMode:{serializedName:"ImmutabilityPolicyMode",xmlName:"ImmutabilityPolicyMode",type:{name:"Enum",allowedValues:["Mutable","Unlocked","Locked"]}},legalHold:{serializedName:"LegalHold",xmlName:"LegalHold",type:{name:"Boolean"}}}}},ri={serializedName:"ListBlobsHierarchySegmentResponse",xmlName:"EnumerationResults",type:{name:"Composite",className:"ListBlobsHierarchySegmentResponse",modelProperties:{serviceEndpoint:{serializedName:"ServiceEndpoint",required:!0,xmlName:"ServiceEndpoint",xmlIsAttribute:!0,type:{name:"String"}},containerName:{serializedName:"ContainerName",required:!0,xmlName:"ContainerName",xmlIsAttribute:!0,type:{name:"String"}},prefix:{serializedName:"Prefix",xmlName:"Prefix",type:{name:"String"}},marker:{serializedName:"Marker",xmlName:"Marker",type:{name:"String"}},maxPageSize:{serializedName:"MaxResults",xmlName:"MaxResults",type:{name:"Number"}},delimiter:{serializedName:"Delimiter",xmlName:"Delimiter",type:{name:"String"}},segment:{serializedName:"Segment",xmlName:"Blobs",type:{name:"Composite",className:"BlobHierarchyListSegment"}},continuationToken:{serializedName:"NextMarker",xmlName:"NextMarker",type:{name:"String"}}}}},ii={serializedName:"BlobHierarchyListSegment",xmlName:"Blobs",type:{name:"Composite",className:"BlobHierarchyListSegment",modelProperties:{blobPrefixes:{serializedName:"BlobPrefixes",xmlName:"BlobPrefixes",xmlElementName:"BlobPrefix",type:{name:"Sequence",element:{type:{name:"Composite",className:"BlobPrefix"}}}},blobItems:{serializedName:"BlobItems",required:!0,xmlName:"BlobItems",xmlElementName:"Blob",type:{name:"Sequence",element:{type:{name:"Composite",className:"BlobItemInternal"}}}}}}},ni={serializedName:"BlobPrefix",type:{name:"Composite",className:"BlobPrefix",modelProperties:{name:{serializedName:"Name",xmlName:"Name",type:{name:"Composite",className:"BlobName"}}}}},si={serializedName:"BlockLookupList",xmlName:"BlockList",type:{name:"Composite",className:"BlockLookupList",modelProperties:{committed:{serializedName:"Committed",xmlName:"Committed",xmlElementName:"Committed",type:{name:"Sequence",element:{type:{name:"String"}}}},uncommitted:{serializedName:"Uncommitted",xmlName:"Uncommitted",xmlElementName:"Uncommitted",type:{name:"Sequence",element:{type:{name:"String"}}}},latest:{serializedName:"Latest",xmlName:"Latest",xmlElementName:"Latest",type:{name:"Sequence",element:{type:{name:"String"}}}}}}},oi={serializedName:"BlockList",type:{name:"Composite",className:"BlockList",modelProperties:{committedBlocks:{serializedName:"CommittedBlocks",xmlName:"CommittedBlocks",xmlIsWrapped:!0,xmlElementName:"Block",type:{name:"Sequence",element:{type:{name:"Composite",className:"Block"}}}},uncommittedBlocks:{serializedName:"UncommittedBlocks",xmlName:"UncommittedBlocks",xmlIsWrapped:!0,xmlElementName:"Block",type:{name:"Sequence",element:{type:{name:"Composite",className:"Block"}}}}}}},mi={serializedName:"Block",type:{name:"Composite",className:"Block",modelProperties:{name:{serializedName:"Name",required:!0,xmlName:"Name",type:{name:"String"}},size:{serializedName:"Size",required:!0,xmlName:"Size",type:{name:"Number"}}}}},li={serializedName:"PageList",type:{name:"Composite",className:"PageList",modelProperties:{pageRange:{serializedName:"PageRange",xmlName:"PageRange",xmlElementName:"PageRange",type:{name:"Sequence",element:{type:{name:"Composite",className:"PageRange"}}}},clearRange:{serializedName:"ClearRange",xmlName:"ClearRange",xmlElementName:"ClearRange",type:{name:"Sequence",element:{type:{name:"Composite",className:"ClearRange"}}}},continuationToken:{serializedName:"NextMarker",xmlName:"NextMarker",type:{name:"String"}}}}},di={serializedName:"PageRange",xmlName:"PageRange",type:{name:"Composite",className:"PageRange",modelProperties:{start:{serializedName:"Start",required:!0,xmlName:"Start",type:{name:"Number"}},end:{serializedName:"End",required:!0,xmlName:"End",type:{name:"Number"}}}}},ci={serializedName:"ClearRange",xmlName:"ClearRange",type:{name:"Composite",className:"ClearRange",modelProperties:{start:{serializedName:"Start",required:!0,xmlName:"Start",type:{name:"Number"}},end:{serializedName:"End",required:!0,xmlName:"End",type:{name:"Number"}}}}},pi={serializedName:"QueryRequest",xmlName:"QueryRequest",type:{name:"Composite",className:"QueryRequest",modelProperties:{queryType:{serializedName:"QueryType",required:!0,xmlName:"QueryType",type:{name:"String"}},expression:{serializedName:"Expression",required:!0,xmlName:"Expression",type:{name:"String"}},inputSerialization:{serializedName:"InputSerialization",xmlName:"InputSerialization",type:{name:"Composite",className:"QuerySerialization"}},outputSerialization:{serializedName:"OutputSerialization",xmlName:"OutputSerialization",type:{name:"Composite",className:"QuerySerialization"}}}}},ui={serializedName:"QuerySerialization",type:{name:"Composite",className:"QuerySerialization",modelProperties:{format:{serializedName:"Format",xmlName:"Format",type:{name:"Composite",className:"QueryFormat"}}}}},yi={serializedName:"QueryFormat",type:{name:"Composite",className:"QueryFormat",modelProperties:{type:{serializedName:"Type",required:!0,xmlName:"Type",type:{name:"Enum",allowedValues:["delimited","json","arrow","parquet"]}},delimitedTextConfiguration:{serializedName:"DelimitedTextConfiguration",xmlName:"DelimitedTextConfiguration",type:{name:"Composite",className:"DelimitedTextConfiguration"}},jsonTextConfiguration:{serializedName:"JsonTextConfiguration",xmlName:"JsonTextConfiguration",type:{name:"Composite",className:"JsonTextConfiguration"}},arrowConfiguration:{serializedName:"ArrowConfiguration",xmlName:"ArrowConfiguration",type:{name:"Composite",className:"ArrowConfiguration"}},parquetTextConfiguration:{serializedName:"ParquetTextConfiguration",xmlName:"ParquetTextConfiguration",type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},gi={serializedName:"DelimitedTextConfiguration",xmlName:"DelimitedTextConfiguration",type:{name:"Composite",className:"DelimitedTextConfiguration",modelProperties:{columnSeparator:{serializedName:"ColumnSeparator",xmlName:"ColumnSeparator",type:{name:"String"}},fieldQuote:{serializedName:"FieldQuote",xmlName:"FieldQuote",type:{name:"String"}},recordSeparator:{serializedName:"RecordSeparator",xmlName:"RecordSeparator",type:{name:"String"}},escapeChar:{serializedName:"EscapeChar",xmlName:"EscapeChar",type:{name:"String"}},headersPresent:{serializedName:"HeadersPresent",xmlName:"HasHeaders",type:{name:"Boolean"}}}}},hi={serializedName:"JsonTextConfiguration",xmlName:"JsonTextConfiguration",type:{name:"Composite",className:"JsonTextConfiguration",modelProperties:{recordSeparator:{serializedName:"RecordSeparator",xmlName:"RecordSeparator",type:{name:"String"}}}}},xi={serializedName:"ArrowConfiguration",xmlName:"ArrowConfiguration",type:{name:"Composite",className:"ArrowConfiguration",modelProperties:{schema:{serializedName:"Schema",required:!0,xmlName:"Schema",xmlIsWrapped:!0,xmlElementName:"Field",type:{name:"Sequence",element:{type:{name:"Composite",className:"ArrowField"}}}}}}},bi={serializedName:"ArrowField",xmlName:"Field",type:{name:"Composite",className:"ArrowField",modelProperties:{type:{serializedName:"Type",required:!0,xmlName:"Type",type:{name:"String"}},name:{serializedName:"Name",xmlName:"Name",type:{name:"String"}},precision:{serializedName:"Precision",xmlName:"Precision",type:{name:"Number"}},scale:{serializedName:"Scale",xmlName:"Scale",type:{name:"Number"}}}}},Ni={serializedName:"Service_setPropertiesHeaders",type:{name:"Composite",className:"ServiceSetPropertiesHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},fi={serializedName:"Service_setPropertiesExceptionHeaders",type:{name:"Composite",className:"ServiceSetPropertiesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Si={serializedName:"Service_getPropertiesHeaders",type:{name:"Composite",className:"ServiceGetPropertiesHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},vi={serializedName:"Service_getPropertiesExceptionHeaders",type:{name:"Composite",className:"ServiceGetPropertiesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ci={serializedName:"Service_getStatisticsHeaders",type:{name:"Composite",className:"ServiceGetStatisticsHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Pi={serializedName:"Service_getStatisticsExceptionHeaders",type:{name:"Composite",className:"ServiceGetStatisticsExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},zi={serializedName:"Service_listContainersSegmentHeaders",type:{name:"Composite",className:"ServiceListContainersSegmentHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},wi={serializedName:"Service_listContainersSegmentExceptionHeaders",type:{name:"Composite",className:"ServiceListContainersSegmentExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ri={serializedName:"Service_getUserDelegationKeyHeaders",type:{name:"Composite",className:"ServiceGetUserDelegationKeyHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},qi={serializedName:"Service_getUserDelegationKeyExceptionHeaders",type:{name:"Composite",className:"ServiceGetUserDelegationKeyExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Bi={serializedName:"Service_getAccountInfoHeaders",type:{name:"Composite",className:"ServiceGetAccountInfoHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},skuName:{serializedName:"x-ms-sku-name",xmlName:"x-ms-sku-name",type:{name:"Enum",allowedValues:["Standard_LRS","Standard_GRS","Standard_RAGRS","Standard_ZRS","Premium_LRS"]}},accountKind:{serializedName:"x-ms-account-kind",xmlName:"x-ms-account-kind",type:{name:"Enum",allowedValues:["Storage","BlobStorage","StorageV2","FileStorage","BlockBlobStorage"]}},isHierarchicalNamespaceEnabled:{serializedName:"x-ms-is-hns-enabled",xmlName:"x-ms-is-hns-enabled",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Oi={serializedName:"Service_getAccountInfoExceptionHeaders",type:{name:"Composite",className:"ServiceGetAccountInfoExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ei={serializedName:"Service_submitBatchHeaders",type:{name:"Composite",className:"ServiceSubmitBatchHeaders",modelProperties:{contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Mi={serializedName:"Service_submitBatchExceptionHeaders",type:{name:"Composite",className:"ServiceSubmitBatchExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ti={serializedName:"Service_filterBlobsHeaders",type:{name:"Composite",className:"ServiceFilterBlobsHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ii={serializedName:"Service_filterBlobsExceptionHeaders",type:{name:"Composite",className:"ServiceFilterBlobsExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ai={serializedName:"Container_createHeaders",type:{name:"Composite",className:"ContainerCreateHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Hi={serializedName:"Container_createExceptionHeaders",type:{name:"Composite",className:"ContainerCreateExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Di={serializedName:"Container_getPropertiesHeaders",type:{name:"Composite",className:"ContainerGetPropertiesHeaders",modelProperties:{metadata:{serializedName:"x-ms-meta",headerCollectionPrefix:"x-ms-meta-",xmlName:"x-ms-meta",type:{name:"Dictionary",value:{type:{name:"String"}}}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseDuration:{serializedName:"x-ms-lease-duration",xmlName:"x-ms-lease-duration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},leaseState:{serializedName:"x-ms-lease-state",xmlName:"x-ms-lease-state",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseStatus:{serializedName:"x-ms-lease-status",xmlName:"x-ms-lease-status",type:{name:"Enum",allowedValues:["locked","unlocked"]}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},blobPublicAccess:{serializedName:"x-ms-blob-public-access",xmlName:"x-ms-blob-public-access",type:{name:"Enum",allowedValues:["container","blob"]}},hasImmutabilityPolicy:{serializedName:"x-ms-has-immutability-policy",xmlName:"x-ms-has-immutability-policy",type:{name:"Boolean"}},hasLegalHold:{serializedName:"x-ms-has-legal-hold",xmlName:"x-ms-has-legal-hold",type:{name:"Boolean"}},defaultEncryptionScope:{serializedName:"x-ms-default-encryption-scope",xmlName:"x-ms-default-encryption-scope",type:{name:"String"}},denyEncryptionScopeOverride:{serializedName:"x-ms-deny-encryption-scope-override",xmlName:"x-ms-deny-encryption-scope-override",type:{name:"Boolean"}},isImmutableStorageWithVersioningEnabled:{serializedName:"x-ms-immutable-storage-with-versioning-enabled",xmlName:"x-ms-immutable-storage-with-versioning-enabled",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ki={serializedName:"Container_getPropertiesExceptionHeaders",type:{name:"Composite",className:"ContainerGetPropertiesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Li={serializedName:"Container_deleteHeaders",type:{name:"Composite",className:"ContainerDeleteHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ji={serializedName:"Container_deleteExceptionHeaders",type:{name:"Composite",className:"ContainerDeleteExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ui={serializedName:"Container_setMetadataHeaders",type:{name:"Composite",className:"ContainerSetMetadataHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},_i={serializedName:"Container_setMetadataExceptionHeaders",type:{name:"Composite",className:"ContainerSetMetadataExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},$i={serializedName:"Container_getAccessPolicyHeaders",type:{name:"Composite",className:"ContainerGetAccessPolicyHeaders",modelProperties:{blobPublicAccess:{serializedName:"x-ms-blob-public-access",xmlName:"x-ms-blob-public-access",type:{name:"Enum",allowedValues:["container","blob"]}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Fi={serializedName:"Container_getAccessPolicyExceptionHeaders",type:{name:"Composite",className:"ContainerGetAccessPolicyExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Vi={serializedName:"Container_setAccessPolicyHeaders",type:{name:"Composite",className:"ContainerSetAccessPolicyHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ki={serializedName:"Container_setAccessPolicyExceptionHeaders",type:{name:"Composite",className:"ContainerSetAccessPolicyExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Gi={serializedName:"Container_restoreHeaders",type:{name:"Composite",className:"ContainerRestoreHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Xi={serializedName:"Container_restoreExceptionHeaders",type:{name:"Composite",className:"ContainerRestoreExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Wi={serializedName:"Container_renameHeaders",type:{name:"Composite",className:"ContainerRenameHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Qi={serializedName:"Container_renameExceptionHeaders",type:{name:"Composite",className:"ContainerRenameExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ji={serializedName:"Container_submitBatchHeaders",type:{name:"Composite",className:"ContainerSubmitBatchHeaders",modelProperties:{contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}}}}},Zi={serializedName:"Container_submitBatchExceptionHeaders",type:{name:"Composite",className:"ContainerSubmitBatchExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Yi={serializedName:"Container_filterBlobsHeaders",type:{name:"Composite",className:"ContainerFilterBlobsHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},en={serializedName:"Container_filterBlobsExceptionHeaders",type:{name:"Composite",className:"ContainerFilterBlobsExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},tn={serializedName:"Container_acquireLeaseHeaders",type:{name:"Composite",className:"ContainerAcquireLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},an={serializedName:"Container_acquireLeaseExceptionHeaders",type:{name:"Composite",className:"ContainerAcquireLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},rn={serializedName:"Container_releaseLeaseHeaders",type:{name:"Composite",className:"ContainerReleaseLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},nn={serializedName:"Container_releaseLeaseExceptionHeaders",type:{name:"Composite",className:"ContainerReleaseLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},sn={serializedName:"Container_renewLeaseHeaders",type:{name:"Composite",className:"ContainerRenewLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},on={serializedName:"Container_renewLeaseExceptionHeaders",type:{name:"Composite",className:"ContainerRenewLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},mn={serializedName:"Container_breakLeaseHeaders",type:{name:"Composite",className:"ContainerBreakLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseTime:{serializedName:"x-ms-lease-time",xmlName:"x-ms-lease-time",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},ln={serializedName:"Container_breakLeaseExceptionHeaders",type:{name:"Composite",className:"ContainerBreakLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},dn={serializedName:"Container_changeLeaseHeaders",type:{name:"Composite",className:"ContainerChangeLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},cn={serializedName:"Container_changeLeaseExceptionHeaders",type:{name:"Composite",className:"ContainerChangeLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},pn={serializedName:"Container_listBlobFlatSegmentHeaders",type:{name:"Composite",className:"ContainerListBlobFlatSegmentHeaders",modelProperties:{contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},un={serializedName:"Container_listBlobFlatSegmentExceptionHeaders",type:{name:"Composite",className:"ContainerListBlobFlatSegmentExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},yn={serializedName:"Container_listBlobHierarchySegmentHeaders",type:{name:"Composite",className:"ContainerListBlobHierarchySegmentHeaders",modelProperties:{contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},gn={serializedName:"Container_listBlobHierarchySegmentExceptionHeaders",type:{name:"Composite",className:"ContainerListBlobHierarchySegmentExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},hn={serializedName:"Container_getAccountInfoHeaders",type:{name:"Composite",className:"ContainerGetAccountInfoHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},skuName:{serializedName:"x-ms-sku-name",xmlName:"x-ms-sku-name",type:{name:"Enum",allowedValues:["Standard_LRS","Standard_GRS","Standard_RAGRS","Standard_ZRS","Premium_LRS"]}},accountKind:{serializedName:"x-ms-account-kind",xmlName:"x-ms-account-kind",type:{name:"Enum",allowedValues:["Storage","BlobStorage","StorageV2","FileStorage","BlockBlobStorage"]}},isHierarchicalNamespaceEnabled:{serializedName:"x-ms-is-hns-enabled",xmlName:"x-ms-is-hns-enabled",type:{name:"Boolean"}}}}},xn={serializedName:"Container_getAccountInfoExceptionHeaders",type:{name:"Composite",className:"ContainerGetAccountInfoExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},bn={serializedName:"Blob_downloadHeaders",type:{name:"Composite",className:"BlobDownloadHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},createdOn:{serializedName:"x-ms-creation-time",xmlName:"x-ms-creation-time",type:{name:"DateTimeRfc1123"}},metadata:{serializedName:"x-ms-meta",headerCollectionPrefix:"x-ms-meta-",xmlName:"x-ms-meta",type:{name:"Dictionary",value:{type:{name:"String"}}}},objectReplicationPolicyId:{serializedName:"x-ms-or-policy-id",xmlName:"x-ms-or-policy-id",type:{name:"String"}},objectReplicationRules:{serializedName:"x-ms-or",headerCollectionPrefix:"x-ms-or-",xmlName:"x-ms-or",type:{name:"Dictionary",value:{type:{name:"String"}}}},contentLength:{serializedName:"content-length",xmlName:"content-length",type:{name:"Number"}},contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},contentRange:{serializedName:"content-range",xmlName:"content-range",type:{name:"String"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},contentEncoding:{serializedName:"content-encoding",xmlName:"content-encoding",type:{name:"String"}},cacheControl:{serializedName:"cache-control",xmlName:"cache-control",type:{name:"String"}},contentDisposition:{serializedName:"content-disposition",xmlName:"content-disposition",type:{name:"String"}},contentLanguage:{serializedName:"content-language",xmlName:"content-language",type:{name:"String"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},blobType:{serializedName:"x-ms-blob-type",xmlName:"x-ms-blob-type",type:{name:"Enum",allowedValues:["BlockBlob","PageBlob","AppendBlob"]}},copyCompletedOn:{serializedName:"x-ms-copy-completion-time",xmlName:"x-ms-copy-completion-time",type:{name:"DateTimeRfc1123"}},copyStatusDescription:{serializedName:"x-ms-copy-status-description",xmlName:"x-ms-copy-status-description",type:{name:"String"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyProgress:{serializedName:"x-ms-copy-progress",xmlName:"x-ms-copy-progress",type:{name:"String"}},copySource:{serializedName:"x-ms-copy-source",xmlName:"x-ms-copy-source",type:{name:"String"}},copyStatus:{serializedName:"x-ms-copy-status",xmlName:"x-ms-copy-status",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},leaseDuration:{serializedName:"x-ms-lease-duration",xmlName:"x-ms-lease-duration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},leaseState:{serializedName:"x-ms-lease-state",xmlName:"x-ms-lease-state",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseStatus:{serializedName:"x-ms-lease-status",xmlName:"x-ms-lease-status",type:{name:"Enum",allowedValues:["locked","unlocked"]}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},isCurrentVersion:{serializedName:"x-ms-is-current-version",xmlName:"x-ms-is-current-version",type:{name:"Boolean"}},acceptRanges:{serializedName:"accept-ranges",xmlName:"accept-ranges",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},blobCommittedBlockCount:{serializedName:"x-ms-blob-committed-block-count",xmlName:"x-ms-blob-committed-block-count",type:{name:"Number"}},isServerEncrypted:{serializedName:"x-ms-server-encrypted",xmlName:"x-ms-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},blobContentMD5:{serializedName:"x-ms-blob-content-md5",xmlName:"x-ms-blob-content-md5",type:{name:"ByteArray"}},tagCount:{serializedName:"x-ms-tag-count",xmlName:"x-ms-tag-count",type:{name:"Number"}},isSealed:{serializedName:"x-ms-blob-sealed",xmlName:"x-ms-blob-sealed",type:{name:"Boolean"}},lastAccessed:{serializedName:"x-ms-last-access-time",xmlName:"x-ms-last-access-time",type:{name:"DateTimeRfc1123"}},immutabilityPolicyExpiresOn:{serializedName:"x-ms-immutability-policy-until-date",xmlName:"x-ms-immutability-policy-until-date",type:{name:"DateTimeRfc1123"}},immutabilityPolicyMode:{serializedName:"x-ms-immutability-policy-mode",xmlName:"x-ms-immutability-policy-mode",type:{name:"Enum",allowedValues:["Mutable","Unlocked","Locked"]}},legalHold:{serializedName:"x-ms-legal-hold",xmlName:"x-ms-legal-hold",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}},contentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}}}}},Nn={serializedName:"Blob_downloadExceptionHeaders",type:{name:"Composite",className:"BlobDownloadExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},fn={serializedName:"Blob_getPropertiesHeaders",type:{name:"Composite",className:"BlobGetPropertiesHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},createdOn:{serializedName:"x-ms-creation-time",xmlName:"x-ms-creation-time",type:{name:"DateTimeRfc1123"}},metadata:{serializedName:"x-ms-meta",headerCollectionPrefix:"x-ms-meta-",xmlName:"x-ms-meta",type:{name:"Dictionary",value:{type:{name:"String"}}}},objectReplicationPolicyId:{serializedName:"x-ms-or-policy-id",xmlName:"x-ms-or-policy-id",type:{name:"String"}},objectReplicationRules:{serializedName:"x-ms-or",headerCollectionPrefix:"x-ms-or-",xmlName:"x-ms-or",type:{name:"Dictionary",value:{type:{name:"String"}}}},blobType:{serializedName:"x-ms-blob-type",xmlName:"x-ms-blob-type",type:{name:"Enum",allowedValues:["BlockBlob","PageBlob","AppendBlob"]}},copyCompletedOn:{serializedName:"x-ms-copy-completion-time",xmlName:"x-ms-copy-completion-time",type:{name:"DateTimeRfc1123"}},copyStatusDescription:{serializedName:"x-ms-copy-status-description",xmlName:"x-ms-copy-status-description",type:{name:"String"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyProgress:{serializedName:"x-ms-copy-progress",xmlName:"x-ms-copy-progress",type:{name:"String"}},copySource:{serializedName:"x-ms-copy-source",xmlName:"x-ms-copy-source",type:{name:"String"}},copyStatus:{serializedName:"x-ms-copy-status",xmlName:"x-ms-copy-status",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},isIncrementalCopy:{serializedName:"x-ms-incremental-copy",xmlName:"x-ms-incremental-copy",type:{name:"Boolean"}},destinationSnapshot:{serializedName:"x-ms-copy-destination-snapshot",xmlName:"x-ms-copy-destination-snapshot",type:{name:"String"}},leaseDuration:{serializedName:"x-ms-lease-duration",xmlName:"x-ms-lease-duration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},leaseState:{serializedName:"x-ms-lease-state",xmlName:"x-ms-lease-state",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseStatus:{serializedName:"x-ms-lease-status",xmlName:"x-ms-lease-status",type:{name:"Enum",allowedValues:["locked","unlocked"]}},contentLength:{serializedName:"content-length",xmlName:"content-length",type:{name:"Number"}},contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},contentEncoding:{serializedName:"content-encoding",xmlName:"content-encoding",type:{name:"String"}},contentDisposition:{serializedName:"content-disposition",xmlName:"content-disposition",type:{name:"String"}},contentLanguage:{serializedName:"content-language",xmlName:"content-language",type:{name:"String"}},cacheControl:{serializedName:"cache-control",xmlName:"cache-control",type:{name:"String"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},acceptRanges:{serializedName:"accept-ranges",xmlName:"accept-ranges",type:{name:"String"}},blobCommittedBlockCount:{serializedName:"x-ms-blob-committed-block-count",xmlName:"x-ms-blob-committed-block-count",type:{name:"Number"}},isServerEncrypted:{serializedName:"x-ms-server-encrypted",xmlName:"x-ms-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},accessTier:{serializedName:"x-ms-access-tier",xmlName:"x-ms-access-tier",type:{name:"String"}},accessTierInferred:{serializedName:"x-ms-access-tier-inferred",xmlName:"x-ms-access-tier-inferred",type:{name:"Boolean"}},archiveStatus:{serializedName:"x-ms-archive-status",xmlName:"x-ms-archive-status",type:{name:"String"}},accessTierChangedOn:{serializedName:"x-ms-access-tier-change-time",xmlName:"x-ms-access-tier-change-time",type:{name:"DateTimeRfc1123"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},isCurrentVersion:{serializedName:"x-ms-is-current-version",xmlName:"x-ms-is-current-version",type:{name:"Boolean"}},tagCount:{serializedName:"x-ms-tag-count",xmlName:"x-ms-tag-count",type:{name:"Number"}},expiresOn:{serializedName:"x-ms-expiry-time",xmlName:"x-ms-expiry-time",type:{name:"DateTimeRfc1123"}},isSealed:{serializedName:"x-ms-blob-sealed",xmlName:"x-ms-blob-sealed",type:{name:"Boolean"}},rehydratePriority:{serializedName:"x-ms-rehydrate-priority",xmlName:"x-ms-rehydrate-priority",type:{name:"Enum",allowedValues:["High","Standard"]}},lastAccessed:{serializedName:"x-ms-last-access-time",xmlName:"x-ms-last-access-time",type:{name:"DateTimeRfc1123"}},immutabilityPolicyExpiresOn:{serializedName:"x-ms-immutability-policy-until-date",xmlName:"x-ms-immutability-policy-until-date",type:{name:"DateTimeRfc1123"}},immutabilityPolicyMode:{serializedName:"x-ms-immutability-policy-mode",xmlName:"x-ms-immutability-policy-mode",type:{name:"Enum",allowedValues:["Mutable","Unlocked","Locked"]}},legalHold:{serializedName:"x-ms-legal-hold",xmlName:"x-ms-legal-hold",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Sn={serializedName:"Blob_getPropertiesExceptionHeaders",type:{name:"Composite",className:"BlobGetPropertiesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},vn={serializedName:"Blob_deleteHeaders",type:{name:"Composite",className:"BlobDeleteHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Cn={serializedName:"Blob_deleteExceptionHeaders",type:{name:"Composite",className:"BlobDeleteExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Pn={serializedName:"Blob_undeleteHeaders",type:{name:"Composite",className:"BlobUndeleteHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},zn={serializedName:"Blob_undeleteExceptionHeaders",type:{name:"Composite",className:"BlobUndeleteExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},wn={serializedName:"Blob_setExpiryHeaders",type:{name:"Composite",className:"BlobSetExpiryHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},Rn={serializedName:"Blob_setExpiryExceptionHeaders",type:{name:"Composite",className:"BlobSetExpiryExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},qn={serializedName:"Blob_setHttpHeadersHeaders",type:{name:"Composite",className:"BlobSetHttpHeadersHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Bn={serializedName:"Blob_setHttpHeadersExceptionHeaders",type:{name:"Composite",className:"BlobSetHttpHeadersExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},On={serializedName:"Blob_setImmutabilityPolicyHeaders",type:{name:"Composite",className:"BlobSetImmutabilityPolicyHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},immutabilityPolicyExpiry:{serializedName:"x-ms-immutability-policy-until-date",xmlName:"x-ms-immutability-policy-until-date",type:{name:"DateTimeRfc1123"}},immutabilityPolicyMode:{serializedName:"x-ms-immutability-policy-mode",xmlName:"x-ms-immutability-policy-mode",type:{name:"Enum",allowedValues:["Mutable","Unlocked","Locked"]}}}}},En={serializedName:"Blob_setImmutabilityPolicyExceptionHeaders",type:{name:"Composite",className:"BlobSetImmutabilityPolicyExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Mn={serializedName:"Blob_deleteImmutabilityPolicyHeaders",type:{name:"Composite",className:"BlobDeleteImmutabilityPolicyHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},Tn={serializedName:"Blob_deleteImmutabilityPolicyExceptionHeaders",type:{name:"Composite",className:"BlobDeleteImmutabilityPolicyExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},In={serializedName:"Blob_setLegalHoldHeaders",type:{name:"Composite",className:"BlobSetLegalHoldHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},legalHold:{serializedName:"x-ms-legal-hold",xmlName:"x-ms-legal-hold",type:{name:"Boolean"}}}}},An={serializedName:"Blob_setLegalHoldExceptionHeaders",type:{name:"Composite",className:"BlobSetLegalHoldExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Hn={serializedName:"Blob_setMetadataHeaders",type:{name:"Composite",className:"BlobSetMetadataHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Dn={serializedName:"Blob_setMetadataExceptionHeaders",type:{name:"Composite",className:"BlobSetMetadataExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},kn={serializedName:"Blob_acquireLeaseHeaders",type:{name:"Composite",className:"BlobAcquireLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},Ln={serializedName:"Blob_acquireLeaseExceptionHeaders",type:{name:"Composite",className:"BlobAcquireLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},jn={serializedName:"Blob_releaseLeaseHeaders",type:{name:"Composite",className:"BlobReleaseLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},Un={serializedName:"Blob_releaseLeaseExceptionHeaders",type:{name:"Composite",className:"BlobReleaseLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},_n={serializedName:"Blob_renewLeaseHeaders",type:{name:"Composite",className:"BlobRenewLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},$n={serializedName:"Blob_renewLeaseExceptionHeaders",type:{name:"Composite",className:"BlobRenewLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Fn={serializedName:"Blob_changeLeaseHeaders",type:{name:"Composite",className:"BlobChangeLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},leaseId:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},Vn={serializedName:"Blob_changeLeaseExceptionHeaders",type:{name:"Composite",className:"BlobChangeLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Kn={serializedName:"Blob_breakLeaseHeaders",type:{name:"Composite",className:"BlobBreakLeaseHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},leaseTime:{serializedName:"x-ms-lease-time",xmlName:"x-ms-lease-time",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}}}}},Gn={serializedName:"Blob_breakLeaseExceptionHeaders",type:{name:"Composite",className:"BlobBreakLeaseExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Xn={serializedName:"Blob_createSnapshotHeaders",type:{name:"Composite",className:"BlobCreateSnapshotHeaders",modelProperties:{snapshot:{serializedName:"x-ms-snapshot",xmlName:"x-ms-snapshot",type:{name:"String"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Wn={serializedName:"Blob_createSnapshotExceptionHeaders",type:{name:"Composite",className:"BlobCreateSnapshotExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Qn={serializedName:"Blob_startCopyFromURLHeaders",type:{name:"Composite",className:"BlobStartCopyFromURLHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyStatus:{serializedName:"x-ms-copy-status",xmlName:"x-ms-copy-status",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Jn={serializedName:"Blob_startCopyFromURLExceptionHeaders",type:{name:"Composite",className:"BlobStartCopyFromURLExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Zn={serializedName:"Blob_copyFromURLHeaders",type:{name:"Composite",className:"BlobCopyFromURLHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyStatus:{defaultValue:"success",isConstant:!0,serializedName:"x-ms-copy-status",type:{name:"String"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Yn={serializedName:"Blob_copyFromURLExceptionHeaders",type:{name:"Composite",className:"BlobCopyFromURLExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},es={serializedName:"Blob_abortCopyFromURLHeaders",type:{name:"Composite",className:"BlobAbortCopyFromURLHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ts={serializedName:"Blob_abortCopyFromURLExceptionHeaders",type:{name:"Composite",className:"BlobAbortCopyFromURLExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},as={serializedName:"Blob_setTierHeaders",type:{name:"Composite",className:"BlobSetTierHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},rs={serializedName:"Blob_setTierExceptionHeaders",type:{name:"Composite",className:"BlobSetTierExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},is={serializedName:"Blob_getAccountInfoHeaders",type:{name:"Composite",className:"BlobGetAccountInfoHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},skuName:{serializedName:"x-ms-sku-name",xmlName:"x-ms-sku-name",type:{name:"Enum",allowedValues:["Standard_LRS","Standard_GRS","Standard_RAGRS","Standard_ZRS","Premium_LRS"]}},accountKind:{serializedName:"x-ms-account-kind",xmlName:"x-ms-account-kind",type:{name:"Enum",allowedValues:["Storage","BlobStorage","StorageV2","FileStorage","BlockBlobStorage"]}},isHierarchicalNamespaceEnabled:{serializedName:"x-ms-is-hns-enabled",xmlName:"x-ms-is-hns-enabled",type:{name:"Boolean"}}}}},ns={serializedName:"Blob_getAccountInfoExceptionHeaders",type:{name:"Composite",className:"BlobGetAccountInfoExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ss={serializedName:"Blob_queryHeaders",type:{name:"Composite",className:"BlobQueryHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},metadata:{serializedName:"x-ms-meta",headerCollectionPrefix:"x-ms-meta-",xmlName:"x-ms-meta",type:{name:"Dictionary",value:{type:{name:"String"}}}},contentLength:{serializedName:"content-length",xmlName:"content-length",type:{name:"Number"}},contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},contentRange:{serializedName:"content-range",xmlName:"content-range",type:{name:"String"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},contentEncoding:{serializedName:"content-encoding",xmlName:"content-encoding",type:{name:"String"}},cacheControl:{serializedName:"cache-control",xmlName:"cache-control",type:{name:"String"}},contentDisposition:{serializedName:"content-disposition",xmlName:"content-disposition",type:{name:"String"}},contentLanguage:{serializedName:"content-language",xmlName:"content-language",type:{name:"String"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},blobType:{serializedName:"x-ms-blob-type",xmlName:"x-ms-blob-type",type:{name:"Enum",allowedValues:["BlockBlob","PageBlob","AppendBlob"]}},copyCompletionTime:{serializedName:"x-ms-copy-completion-time",xmlName:"x-ms-copy-completion-time",type:{name:"DateTimeRfc1123"}},copyStatusDescription:{serializedName:"x-ms-copy-status-description",xmlName:"x-ms-copy-status-description",type:{name:"String"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyProgress:{serializedName:"x-ms-copy-progress",xmlName:"x-ms-copy-progress",type:{name:"String"}},copySource:{serializedName:"x-ms-copy-source",xmlName:"x-ms-copy-source",type:{name:"String"}},copyStatus:{serializedName:"x-ms-copy-status",xmlName:"x-ms-copy-status",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},leaseDuration:{serializedName:"x-ms-lease-duration",xmlName:"x-ms-lease-duration",type:{name:"Enum",allowedValues:["infinite","fixed"]}},leaseState:{serializedName:"x-ms-lease-state",xmlName:"x-ms-lease-state",type:{name:"Enum",allowedValues:["available","leased","expired","breaking","broken"]}},leaseStatus:{serializedName:"x-ms-lease-status",xmlName:"x-ms-lease-status",type:{name:"Enum",allowedValues:["locked","unlocked"]}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},acceptRanges:{serializedName:"accept-ranges",xmlName:"accept-ranges",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},blobCommittedBlockCount:{serializedName:"x-ms-blob-committed-block-count",xmlName:"x-ms-blob-committed-block-count",type:{name:"Number"}},isServerEncrypted:{serializedName:"x-ms-server-encrypted",xmlName:"x-ms-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},blobContentMD5:{serializedName:"x-ms-blob-content-md5",xmlName:"x-ms-blob-content-md5",type:{name:"ByteArray"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}},contentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}}}}},os={serializedName:"Blob_queryExceptionHeaders",type:{name:"Composite",className:"BlobQueryExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ms={serializedName:"Blob_getTagsHeaders",type:{name:"Composite",className:"BlobGetTagsHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ls={serializedName:"Blob_getTagsExceptionHeaders",type:{name:"Composite",className:"BlobGetTagsExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ds={serializedName:"Blob_setTagsHeaders",type:{name:"Composite",className:"BlobSetTagsHeaders",modelProperties:{clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},cs={serializedName:"Blob_setTagsExceptionHeaders",type:{name:"Composite",className:"BlobSetTagsExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ps={serializedName:"PageBlob_createHeaders",type:{name:"Composite",className:"PageBlobCreateHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},us={serializedName:"PageBlob_createExceptionHeaders",type:{name:"Composite",className:"PageBlobCreateExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ys={serializedName:"PageBlob_uploadPagesHeaders",type:{name:"Composite",className:"PageBlobUploadPagesHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},gs={serializedName:"PageBlob_uploadPagesExceptionHeaders",type:{name:"Composite",className:"PageBlobUploadPagesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},hs={serializedName:"PageBlob_clearPagesHeaders",type:{name:"Composite",className:"PageBlobClearPagesHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},xs={serializedName:"PageBlob_clearPagesExceptionHeaders",type:{name:"Composite",className:"PageBlobClearPagesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},bs={serializedName:"PageBlob_uploadPagesFromURLHeaders",type:{name:"Composite",className:"PageBlobUploadPagesFromURLHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ns={serializedName:"PageBlob_uploadPagesFromURLExceptionHeaders",type:{name:"Composite",className:"PageBlobUploadPagesFromURLExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},fs={serializedName:"PageBlob_getPageRangesHeaders",type:{name:"Composite",className:"PageBlobGetPageRangesHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},blobContentLength:{serializedName:"x-ms-blob-content-length",xmlName:"x-ms-blob-content-length",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ss={serializedName:"PageBlob_getPageRangesExceptionHeaders",type:{name:"Composite",className:"PageBlobGetPageRangesExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},vs={serializedName:"PageBlob_getPageRangesDiffHeaders",type:{name:"Composite",className:"PageBlobGetPageRangesDiffHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},blobContentLength:{serializedName:"x-ms-blob-content-length",xmlName:"x-ms-blob-content-length",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Cs={serializedName:"PageBlob_getPageRangesDiffExceptionHeaders",type:{name:"Composite",className:"PageBlobGetPageRangesDiffExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ps={serializedName:"PageBlob_resizeHeaders",type:{name:"Composite",className:"PageBlobResizeHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},zs={serializedName:"PageBlob_resizeExceptionHeaders",type:{name:"Composite",className:"PageBlobResizeExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ws={serializedName:"PageBlob_updateSequenceNumberHeaders",type:{name:"Composite",className:"PageBlobUpdateSequenceNumberHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},blobSequenceNumber:{serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Rs={serializedName:"PageBlob_updateSequenceNumberExceptionHeaders",type:{name:"Composite",className:"PageBlobUpdateSequenceNumberExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},qs={serializedName:"PageBlob_copyIncrementalHeaders",type:{name:"Composite",className:"PageBlobCopyIncrementalHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},copyId:{serializedName:"x-ms-copy-id",xmlName:"x-ms-copy-id",type:{name:"String"}},copyStatus:{serializedName:"x-ms-copy-status",xmlName:"x-ms-copy-status",type:{name:"Enum",allowedValues:["pending","success","aborted","failed"]}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Bs={serializedName:"PageBlob_copyIncrementalExceptionHeaders",type:{name:"Composite",className:"PageBlobCopyIncrementalExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Os={serializedName:"AppendBlob_createHeaders",type:{name:"Composite",className:"AppendBlobCreateHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Es={serializedName:"AppendBlob_createExceptionHeaders",type:{name:"Composite",className:"AppendBlobCreateExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ms={serializedName:"AppendBlob_appendBlockHeaders",type:{name:"Composite",className:"AppendBlobAppendBlockHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},blobAppendOffset:{serializedName:"x-ms-blob-append-offset",xmlName:"x-ms-blob-append-offset",type:{name:"String"}},blobCommittedBlockCount:{serializedName:"x-ms-blob-committed-block-count",xmlName:"x-ms-blob-committed-block-count",type:{name:"Number"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ts={serializedName:"AppendBlob_appendBlockExceptionHeaders",type:{name:"Composite",className:"AppendBlobAppendBlockExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Is={serializedName:"AppendBlob_appendBlockFromUrlHeaders",type:{name:"Composite",className:"AppendBlobAppendBlockFromUrlHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},blobAppendOffset:{serializedName:"x-ms-blob-append-offset",xmlName:"x-ms-blob-append-offset",type:{name:"String"}},blobCommittedBlockCount:{serializedName:"x-ms-blob-committed-block-count",xmlName:"x-ms-blob-committed-block-count",type:{name:"Number"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},As={serializedName:"AppendBlob_appendBlockFromUrlExceptionHeaders",type:{name:"Composite",className:"AppendBlobAppendBlockFromUrlExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Hs={serializedName:"AppendBlob_sealHeaders",type:{name:"Composite",className:"AppendBlobSealHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isSealed:{serializedName:"x-ms-blob-sealed",xmlName:"x-ms-blob-sealed",type:{name:"Boolean"}}}}},Ds={serializedName:"AppendBlob_sealExceptionHeaders",type:{name:"Composite",className:"AppendBlobSealExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},ks={serializedName:"BlockBlob_uploadHeaders",type:{name:"Composite",className:"BlockBlobUploadHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ls={serializedName:"BlockBlob_uploadExceptionHeaders",type:{name:"Composite",className:"BlockBlobUploadExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},js={serializedName:"BlockBlob_putBlobFromUrlHeaders",type:{name:"Composite",className:"BlockBlobPutBlobFromUrlHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Us={serializedName:"BlockBlob_putBlobFromUrlExceptionHeaders",type:{name:"Composite",className:"BlockBlobPutBlobFromUrlExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},_s={serializedName:"BlockBlob_stageBlockHeaders",type:{name:"Composite",className:"BlockBlobStageBlockHeaders",modelProperties:{contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},$s={serializedName:"BlockBlob_stageBlockExceptionHeaders",type:{name:"Composite",className:"BlockBlobStageBlockExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Fs={serializedName:"BlockBlob_stageBlockFromURLHeaders",type:{name:"Composite",className:"BlockBlobStageBlockFromURLHeaders",modelProperties:{contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Vs={serializedName:"BlockBlob_stageBlockFromURLExceptionHeaders",type:{name:"Composite",className:"BlockBlobStageBlockFromURLExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ks={serializedName:"BlockBlob_commitBlockListHeaders",type:{name:"Composite",className:"BlockBlobCommitBlockListHeaders",modelProperties:{etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},contentMD5:{serializedName:"content-md5",xmlName:"content-md5",type:{name:"ByteArray"}},xMsContentCrc64:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},versionId:{serializedName:"x-ms-version-id",xmlName:"x-ms-version-id",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},isServerEncrypted:{serializedName:"x-ms-request-server-encrypted",xmlName:"x-ms-request-server-encrypted",type:{name:"Boolean"}},encryptionKeySha256:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}},encryptionScope:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Gs={serializedName:"BlockBlob_commitBlockListExceptionHeaders",type:{name:"Composite",className:"BlockBlobCommitBlockListExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Xs={serializedName:"BlockBlob_getBlockListHeaders",type:{name:"Composite",className:"BlockBlobGetBlockListHeaders",modelProperties:{lastModified:{serializedName:"last-modified",xmlName:"last-modified",type:{name:"DateTimeRfc1123"}},etag:{serializedName:"etag",xmlName:"etag",type:{name:"String"}},contentType:{serializedName:"content-type",xmlName:"content-type",type:{name:"String"}},blobContentLength:{serializedName:"x-ms-blob-content-length",xmlName:"x-ms-blob-content-length",type:{name:"Number"}},clientRequestId:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}},requestId:{serializedName:"x-ms-request-id",xmlName:"x-ms-request-id",type:{name:"String"}},version:{serializedName:"x-ms-version",xmlName:"x-ms-version",type:{name:"String"}},date:{serializedName:"date",xmlName:"date",type:{name:"DateTimeRfc1123"}},errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Ws={serializedName:"BlockBlob_getBlockListExceptionHeaders",type:{name:"Composite",className:"BlockBlobGetBlockListExceptionHeaders",modelProperties:{errorCode:{serializedName:"x-ms-error-code",xmlName:"x-ms-error-code",type:{name:"String"}}}}},Qs={parameterPath:["options","contentType"],mapper:{defaultValue:"application/xml",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},Js={parameterPath:"blobServiceProperties",mapper:Mr},Zs={parameterPath:"accept",mapper:{defaultValue:"application/xml",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},Ys={parameterPath:"url",mapper:{serializedName:"url",required:!0,xmlName:"url",type:{name:"String"}},skipEncoding:!0},eo={parameterPath:"restype",mapper:{defaultValue:"service",isConstant:!0,serializedName:"restype",type:{name:"String"}}},to={parameterPath:"comp",mapper:{defaultValue:"properties",isConstant:!0,serializedName:"comp",type:{name:"String"}}},ao={parameterPath:["options","timeoutInSeconds"],mapper:{constraints:{InclusiveMinimum:0},serializedName:"timeout",xmlName:"timeout",type:{name:"Number"}}},ro={parameterPath:"version",mapper:{defaultValue:"2025-01-05",isConstant:!0,serializedName:"x-ms-version",type:{name:"String"}}},io={parameterPath:["options","requestId"],mapper:{serializedName:"x-ms-client-request-id",xmlName:"x-ms-client-request-id",type:{name:"String"}}},no={parameterPath:"accept",mapper:{defaultValue:"application/xml",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},so={parameterPath:"comp",mapper:{defaultValue:"list",isConstant:!0,serializedName:"comp",type:{name:"String"}}},oo={parameterPath:["options","prefix"],mapper:{serializedName:"prefix",xmlName:"prefix",type:{name:"String"}}},mo={parameterPath:["options","marker"],mapper:{serializedName:"marker",xmlName:"marker",type:{name:"String"}}},lo={parameterPath:["options","maxPageSize"],mapper:{constraints:{InclusiveMinimum:1},serializedName:"maxresults",xmlName:"maxresults",type:{name:"Number"}}},co={parameterPath:"keyInfo",mapper:Fr},po={parameterPath:"restype",mapper:{defaultValue:"account",isConstant:!0,serializedName:"restype",type:{name:"String"}}},uo={parameterPath:"body",mapper:{serializedName:"body",required:!0,xmlName:"body",type:{name:"Stream"}}},yo={parameterPath:"comp",mapper:{defaultValue:"batch",isConstant:!0,serializedName:"comp",type:{name:"String"}}},go={parameterPath:"contentLength",mapper:{serializedName:"Content-Length",required:!0,xmlName:"Content-Length",type:{name:"Number"}}},ho={parameterPath:"multipartContentType",mapper:{serializedName:"Content-Type",required:!0,xmlName:"Content-Type",type:{name:"String"}}},xo={parameterPath:"comp",mapper:{defaultValue:"blobs",isConstant:!0,serializedName:"comp",type:{name:"String"}}},bo={parameterPath:["options","where"],mapper:{serializedName:"where",xmlName:"where",type:{name:"String"}}},No={parameterPath:"restype",mapper:{defaultValue:"container",isConstant:!0,serializedName:"restype",type:{name:"String"}}},fo={parameterPath:["options","metadata"],mapper:{serializedName:"x-ms-meta",xmlName:"x-ms-meta",headerCollectionPrefix:"x-ms-meta-",type:{name:"Dictionary",value:{type:{name:"String"}}}}},So={parameterPath:["options","access"],mapper:{serializedName:"x-ms-blob-public-access",xmlName:"x-ms-blob-public-access",type:{name:"Enum",allowedValues:["container","blob"]}}},vo={parameterPath:["options","leaseAccessConditions","leaseId"],mapper:{serializedName:"x-ms-lease-id",xmlName:"x-ms-lease-id",type:{name:"String"}}},Co={parameterPath:["options","modifiedAccessConditions","ifModifiedSince"],mapper:{serializedName:"If-Modified-Since",xmlName:"If-Modified-Since",type:{name:"DateTimeRfc1123"}}},Po={parameterPath:["options","modifiedAccessConditions","ifUnmodifiedSince"],mapper:{serializedName:"If-Unmodified-Since",xmlName:"If-Unmodified-Since",type:{name:"DateTimeRfc1123"}}},zo={parameterPath:"comp",mapper:{defaultValue:"metadata",isConstant:!0,serializedName:"comp",type:{name:"String"}}},wo={parameterPath:"comp",mapper:{defaultValue:"acl",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Ro={parameterPath:"comp",mapper:{defaultValue:"undelete",isConstant:!0,serializedName:"comp",type:{name:"String"}}},qo={parameterPath:"comp",mapper:{defaultValue:"lease",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Bo={parameterPath:"action",mapper:{defaultValue:"acquire",isConstant:!0,serializedName:"x-ms-lease-action",type:{name:"String"}}},Oo={parameterPath:["options","duration"],mapper:{serializedName:"x-ms-lease-duration",xmlName:"x-ms-lease-duration",type:{name:"Number"}}},Eo={parameterPath:["options","proposedLeaseId"],mapper:{serializedName:"x-ms-proposed-lease-id",xmlName:"x-ms-proposed-lease-id",type:{name:"String"}}},Mo={parameterPath:"action",mapper:{defaultValue:"release",isConstant:!0,serializedName:"x-ms-lease-action",type:{name:"String"}}},To={parameterPath:"leaseId",mapper:{serializedName:"x-ms-lease-id",required:!0,xmlName:"x-ms-lease-id",type:{name:"String"}}},Io={parameterPath:"action",mapper:{defaultValue:"renew",isConstant:!0,serializedName:"x-ms-lease-action",type:{name:"String"}}},Ao={parameterPath:"action",mapper:{defaultValue:"break",isConstant:!0,serializedName:"x-ms-lease-action",type:{name:"String"}}},Ho={parameterPath:["options","breakPeriod"],mapper:{serializedName:"x-ms-lease-break-period",xmlName:"x-ms-lease-break-period",type:{name:"Number"}}},Do={parameterPath:"action",mapper:{defaultValue:"change",isConstant:!0,serializedName:"x-ms-lease-action",type:{name:"String"}}},ko={parameterPath:"proposedLeaseId",mapper:{serializedName:"x-ms-proposed-lease-id",required:!0,xmlName:"x-ms-proposed-lease-id",type:{name:"String"}}},Lo={parameterPath:["options","include"],mapper:{serializedName:"include",xmlName:"include",xmlElementName:"ListBlobsIncludeItem",type:{name:"Sequence",element:{type:{name:"Enum",allowedValues:["copy","deleted","metadata","snapshots","uncommittedblobs","versions","tags","immutabilitypolicy","legalhold","deletedwithversions"]}}}},collectionFormat:"CSV"},jo={parameterPath:["options","snapshot"],mapper:{serializedName:"snapshot",xmlName:"snapshot",type:{name:"String"}}},Uo={parameterPath:["options","versionId"],mapper:{serializedName:"versionid",xmlName:"versionid",type:{name:"String"}}},_o={parameterPath:["options","range"],mapper:{serializedName:"x-ms-range",xmlName:"x-ms-range",type:{name:"String"}}},$o={parameterPath:["options","cpkInfo","encryptionKey"],mapper:{serializedName:"x-ms-encryption-key",xmlName:"x-ms-encryption-key",type:{name:"String"}}},Fo={parameterPath:["options","cpkInfo","encryptionKeySha256"],mapper:{serializedName:"x-ms-encryption-key-sha256",xmlName:"x-ms-encryption-key-sha256",type:{name:"String"}}},Vo={parameterPath:["options","cpkInfo","encryptionAlgorithm"],mapper:{serializedName:"x-ms-encryption-algorithm",xmlName:"x-ms-encryption-algorithm",type:{name:"String"}}},Ko={parameterPath:["options","modifiedAccessConditions","ifMatch"],mapper:{serializedName:"If-Match",xmlName:"If-Match",type:{name:"String"}}},Go={parameterPath:["options","modifiedAccessConditions","ifNoneMatch"],mapper:{serializedName:"If-None-Match",xmlName:"If-None-Match",type:{name:"String"}}},Xo={parameterPath:["options","modifiedAccessConditions","ifTags"],mapper:{serializedName:"x-ms-if-tags",xmlName:"x-ms-if-tags",type:{name:"String"}}},Wo={parameterPath:["options","blobHttpHeaders","blobCacheControl"],mapper:{serializedName:"x-ms-blob-cache-control",xmlName:"x-ms-blob-cache-control",type:{name:"String"}}},Qo={parameterPath:["options","blobHttpHeaders","blobContentType"],mapper:{serializedName:"x-ms-blob-content-type",xmlName:"x-ms-blob-content-type",type:{name:"String"}}},Jo={parameterPath:["options","blobHttpHeaders","blobContentMD5"],mapper:{serializedName:"x-ms-blob-content-md5",xmlName:"x-ms-blob-content-md5",type:{name:"ByteArray"}}},Zo={parameterPath:["options","blobHttpHeaders","blobContentEncoding"],mapper:{serializedName:"x-ms-blob-content-encoding",xmlName:"x-ms-blob-content-encoding",type:{name:"String"}}},Yo={parameterPath:["options","blobHttpHeaders","blobContentLanguage"],mapper:{serializedName:"x-ms-blob-content-language",xmlName:"x-ms-blob-content-language",type:{name:"String"}}},em={parameterPath:["options","blobHttpHeaders","blobContentDisposition"],mapper:{serializedName:"x-ms-blob-content-disposition",xmlName:"x-ms-blob-content-disposition",type:{name:"String"}}},tm={parameterPath:"comp",mapper:{defaultValue:"immutabilityPolicies",isConstant:!0,serializedName:"comp",type:{name:"String"}}},am={parameterPath:["options","immutabilityPolicyExpiry"],mapper:{serializedName:"x-ms-immutability-policy-until-date",xmlName:"x-ms-immutability-policy-until-date",type:{name:"DateTimeRfc1123"}}},rm={parameterPath:["options","immutabilityPolicyMode"],mapper:{serializedName:"x-ms-immutability-policy-mode",xmlName:"x-ms-immutability-policy-mode",type:{name:"Enum",allowedValues:["Mutable","Unlocked","Locked"]}}},im={parameterPath:["options","encryptionScope"],mapper:{serializedName:"x-ms-encryption-scope",xmlName:"x-ms-encryption-scope",type:{name:"String"}}},nm={parameterPath:["options","tier"],mapper:{serializedName:"x-ms-access-tier",xmlName:"x-ms-access-tier",type:{name:"Enum",allowedValues:["P4","P6","P10","P15","P20","P30","P40","P50","P60","P70","P80","Hot","Cool","Archive","Cold"]}}},sm={parameterPath:["options","rehydratePriority"],mapper:{serializedName:"x-ms-rehydrate-priority",xmlName:"x-ms-rehydrate-priority",type:{name:"Enum",allowedValues:["High","Standard"]}}},om={parameterPath:["options","sourceModifiedAccessConditions","sourceIfModifiedSince"],mapper:{serializedName:"x-ms-source-if-modified-since",xmlName:"x-ms-source-if-modified-since",type:{name:"DateTimeRfc1123"}}},mm={parameterPath:["options","sourceModifiedAccessConditions","sourceIfUnmodifiedSince"],mapper:{serializedName:"x-ms-source-if-unmodified-since",xmlName:"x-ms-source-if-unmodified-since",type:{name:"DateTimeRfc1123"}}},lm={parameterPath:["options","sourceModifiedAccessConditions","sourceIfMatch"],mapper:{serializedName:"x-ms-source-if-match",xmlName:"x-ms-source-if-match",type:{name:"String"}}},dm={parameterPath:["options","sourceModifiedAccessConditions","sourceIfNoneMatch"],mapper:{serializedName:"x-ms-source-if-none-match",xmlName:"x-ms-source-if-none-match",type:{name:"String"}}},cm={parameterPath:["options","sourceModifiedAccessConditions","sourceIfTags"],mapper:{serializedName:"x-ms-source-if-tags",xmlName:"x-ms-source-if-tags",type:{name:"String"}}},pm={parameterPath:"copySource",mapper:{serializedName:"x-ms-copy-source",required:!0,xmlName:"x-ms-copy-source",type:{name:"String"}}},um={parameterPath:["options","blobTagsString"],mapper:{serializedName:"x-ms-tags",xmlName:"x-ms-tags",type:{name:"String"}}},ym={parameterPath:["options","legalHold"],mapper:{serializedName:"x-ms-legal-hold",xmlName:"x-ms-legal-hold",type:{name:"Boolean"}}},gm={parameterPath:["options","sourceContentMD5"],mapper:{serializedName:"x-ms-source-content-md5",xmlName:"x-ms-source-content-md5",type:{name:"ByteArray"}}},hm={parameterPath:["options","copySourceAuthorization"],mapper:{serializedName:"x-ms-copy-source-authorization",xmlName:"x-ms-copy-source-authorization",type:{name:"String"}}},xm={parameterPath:["options","copySourceTags"],mapper:{serializedName:"x-ms-copy-source-tag-option",xmlName:"x-ms-copy-source-tag-option",type:{name:"Enum",allowedValues:["REPLACE","COPY"]}}},bm={parameterPath:["options","queryRequest"],mapper:pi},Nm={parameterPath:"comp",mapper:{defaultValue:"tags",isConstant:!0,serializedName:"comp",type:{name:"String"}}},fm={parameterPath:["options","tags"],mapper:Xr},Sm={parameterPath:["options","transactionalContentMD5"],mapper:{serializedName:"Content-MD5",xmlName:"Content-MD5",type:{name:"ByteArray"}}},vm={parameterPath:["options","transactionalContentCrc64"],mapper:{serializedName:"x-ms-content-crc64",xmlName:"x-ms-content-crc64",type:{name:"ByteArray"}}},Cm={parameterPath:"blobContentLength",mapper:{serializedName:"x-ms-blob-content-length",required:!0,xmlName:"x-ms-blob-content-length",type:{name:"Number"}}},Pm={parameterPath:["options","blobSequenceNumber"],mapper:{defaultValue:0,serializedName:"x-ms-blob-sequence-number",xmlName:"x-ms-blob-sequence-number",type:{name:"Number"}}},zm={parameterPath:["options","contentType"],mapper:{defaultValue:"application/octet-stream",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},wm={parameterPath:"body",mapper:{serializedName:"body",required:!0,xmlName:"body",type:{name:"Stream"}}},Rm={parameterPath:"accept",mapper:{defaultValue:"application/xml",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},qm={parameterPath:"comp",mapper:{defaultValue:"page",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Bm={parameterPath:"pageWrite",mapper:{defaultValue:"update",isConstant:!0,serializedName:"x-ms-page-write",type:{name:"String"}}},Om={parameterPath:["options","sequenceNumberAccessConditions","ifSequenceNumberLessThanOrEqualTo"],mapper:{serializedName:"x-ms-if-sequence-number-le",xmlName:"x-ms-if-sequence-number-le",type:{name:"Number"}}},Em={parameterPath:["options","sequenceNumberAccessConditions","ifSequenceNumberLessThan"],mapper:{serializedName:"x-ms-if-sequence-number-lt",xmlName:"x-ms-if-sequence-number-lt",type:{name:"Number"}}},Mm={parameterPath:["options","sequenceNumberAccessConditions","ifSequenceNumberEqualTo"],mapper:{serializedName:"x-ms-if-sequence-number-eq",xmlName:"x-ms-if-sequence-number-eq",type:{name:"Number"}}},Tm={parameterPath:"sourceUrl",mapper:{serializedName:"x-ms-copy-source",required:!0,xmlName:"x-ms-copy-source",type:{name:"String"}}},Im={parameterPath:["options","sourceContentCrc64"],mapper:{serializedName:"x-ms-source-content-crc64",xmlName:"x-ms-source-content-crc64",type:{name:"ByteArray"}}},Am={parameterPath:"comp",mapper:{defaultValue:"pagelist",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Hm={parameterPath:"comp",mapper:{defaultValue:"appendblock",isConstant:!0,serializedName:"comp",type:{name:"String"}}},Dm={parameterPath:["options","appendPositionAccessConditions","maxSize"],mapper:{serializedName:"x-ms-blob-condition-maxsize",xmlName:"x-ms-blob-condition-maxsize",type:{name:"Number"}}},km={parameterPath:["options","appendPositionAccessConditions","appendPosition"],mapper:{serializedName:"x-ms-blob-condition-appendpos",xmlName:"x-ms-blob-condition-appendpos",type:{name:"Number"}}},Lm={parameterPath:["options","sourceRange"],mapper:{serializedName:"x-ms-source-range",xmlName:"x-ms-source-range",type:{name:"String"}}},jm={parameterPath:"blobType",mapper:{defaultValue:"BlockBlob",isConstant:!0,serializedName:"x-ms-blob-type",type:{name:"String"}}},Um={parameterPath:"comp",mapper:{defaultValue:"block",isConstant:!0,serializedName:"comp",type:{name:"String"}}},_m={parameterPath:"blockId",mapper:{serializedName:"blockid",required:!0,xmlName:"blockid",type:{name:"String"}}},$m={parameterPath:"blocks",mapper:si},Fm={parameterPath:"comp",mapper:{defaultValue:"blocklist",isConstant:!0,serializedName:"comp",type:{name:"String"}}};class Vm{constructor(e){this.client=e}setProperties(e,t){return this.client.sendOperationRequest({blobServiceProperties:e,options:t},Gm)}getProperties(e){return this.client.sendOperationRequest({options:e},Xm)}getStatistics(e){return this.client.sendOperationRequest({options:e},Wm)}listContainersSegment(e){return this.client.sendOperationRequest({options:e},Qm)}getUserDelegationKey(e,t){return this.client.sendOperationRequest({keyInfo:e,options:t},Jm)}getAccountInfo(e){return this.client.sendOperationRequest({options:e},Zm)}submitBatch(e,t,a,r){return this.client.sendOperationRequest({contentLength:e,multipartContentType:t,body:a,options:r},Ym)}filterBlobs(e){return this.client.sendOperationRequest({options:e},el)}}const Km=ct(r,!0),Gm={path:"/",httpMethod:"PUT",responses:{202:{headersMapper:Ni},default:{bodyMapper:kr,headersMapper:fi}},requestBody:Js,queryParameters:[eo,to,ao],urlParameters:[Ys],headerParameters:[Qs,Zs,ro,io],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:Km},Xm={path:"/",httpMethod:"GET",responses:{200:{bodyMapper:Mr,headersMapper:Si},default:{bodyMapper:kr,headersMapper:vi}},queryParameters:[eo,to,ao],urlParameters:[Ys],headerParameters:[ro,io,no],isXML:!0,serializer:Km},Wm={path:"/",httpMethod:"GET",responses:{200:{bodyMapper:Lr,headersMapper:Ci},default:{bodyMapper:kr,headersMapper:Pi}},queryParameters:[eo,ao,{parameterPath:"comp",mapper:{defaultValue:"stats",isConstant:!0,serializedName:"comp",type:{name:"String"}}}],urlParameters:[Ys],headerParameters:[ro,io,no],isXML:!0,serializer:Km},Qm={path:"/",httpMethod:"GET",responses:{200:{bodyMapper:Ur,headersMapper:zi},default:{bodyMapper:kr,headersMapper:wi}},queryParameters:[ao,so,oo,mo,lo,{parameterPath:["options","include"],mapper:{serializedName:"include",xmlName:"include",xmlElementName:"ListContainersIncludeType",type:{name:"Sequence",element:{type:{name:"Enum",allowedValues:["metadata","deleted","system"]}}}},collectionFormat:"CSV"}],urlParameters:[Ys],headerParameters:[ro,io,no],isXML:!0,serializer:Km},Jm={path:"/",httpMethod:"POST",responses:{200:{bodyMapper:Vr,headersMapper:Ri},default:{bodyMapper:kr,headersMapper:qi}},requestBody:co,queryParameters:[eo,ao,{parameterPath:"comp",mapper:{defaultValue:"userdelegationkey",isConstant:!0,serializedName:"comp",type:{name:"String"}}}],urlParameters:[Ys],headerParameters:[Qs,Zs,ro,io],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:Km},Zm={path:"/",httpMethod:"GET",responses:{200:{headersMapper:Bi},default:{bodyMapper:kr,headersMapper:Oi}},queryParameters:[to,ao,po],urlParameters:[Ys],headerParameters:[ro,io,no],isXML:!0,serializer:Km},Ym={path:"/",httpMethod:"POST",responses:{202:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:Ei},default:{bodyMapper:kr,headersMapper:Mi}},requestBody:uo,queryParameters:[ao,yo],urlParameters:[Ys],headerParameters:[Zs,ro,io,go,ho],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:Km},el={path:"/",httpMethod:"GET",responses:{200:{bodyMapper:Kr,headersMapper:Ti},default:{bodyMapper:kr,headersMapper:Ii}},queryParameters:[ao,mo,lo,xo,bo],urlParameters:[Ys],headerParameters:[ro,io,no],isXML:!0,serializer:Km};class tl{constructor(e){this.client=e}create(e){return this.client.sendOperationRequest({options:e},rl)}getProperties(e){return this.client.sendOperationRequest({options:e},il)}delete(e){return this.client.sendOperationRequest({options:e},nl)}setMetadata(e){return this.client.sendOperationRequest({options:e},sl)}getAccessPolicy(e){return this.client.sendOperationRequest({options:e},ol)}setAccessPolicy(e){return this.client.sendOperationRequest({options:e},ml)}restore(e){return this.client.sendOperationRequest({options:e},ll)}rename(e,t){return this.client.sendOperationRequest({sourceContainerName:e,options:t},dl)}submitBatch(e,t,a,r){return this.client.sendOperationRequest({contentLength:e,multipartContentType:t,body:a,options:r},cl)}filterBlobs(e){return this.client.sendOperationRequest({options:e},pl)}acquireLease(e){return this.client.sendOperationRequest({options:e},ul)}releaseLease(e,t){return this.client.sendOperationRequest({leaseId:e,options:t},yl)}renewLease(e,t){return this.client.sendOperationRequest({leaseId:e,options:t},gl)}breakLease(e){return this.client.sendOperationRequest({options:e},hl)}changeLease(e,t,a){return this.client.sendOperationRequest({leaseId:e,proposedLeaseId:t,options:a},xl)}listBlobFlatSegment(e){return this.client.sendOperationRequest({options:e},bl)}listBlobHierarchySegment(e,t){return this.client.sendOperationRequest({delimiter:e,options:t},Nl)}getAccountInfo(e){return this.client.sendOperationRequest({options:e},fl)}}const al=ct(r,!0),rl={path:"/{containerName}",httpMethod:"PUT",responses:{201:{headersMapper:Ai},default:{bodyMapper:kr,headersMapper:Hi}},queryParameters:[ao,No],urlParameters:[Ys],headerParameters:[ro,io,no,fo,So,{parameterPath:["options","containerEncryptionScope","defaultEncryptionScope"],mapper:{serializedName:"x-ms-default-encryption-scope",xmlName:"x-ms-default-encryption-scope",type:{name:"String"}}},{parameterPath:["options","containerEncryptionScope","preventEncryptionScopeOverride"],mapper:{serializedName:"x-ms-deny-encryption-scope-override",xmlName:"x-ms-deny-encryption-scope-override",type:{name:"Boolean"}}}],isXML:!0,serializer:al},il={path:"/{containerName}",httpMethod:"GET",responses:{200:{headersMapper:Di},default:{bodyMapper:kr,headersMapper:ki}},queryParameters:[ao,No],urlParameters:[Ys],headerParameters:[ro,io,no,vo],isXML:!0,serializer:al},nl={path:"/{containerName}",httpMethod:"DELETE",responses:{202:{headersMapper:Li},default:{bodyMapper:kr,headersMapper:ji}},queryParameters:[ao,No],urlParameters:[Ys],headerParameters:[ro,io,no,vo,Co,Po],isXML:!0,serializer:al},sl={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:Ui},default:{bodyMapper:kr,headersMapper:_i}},queryParameters:[ao,No,zo],urlParameters:[Ys],headerParameters:[ro,io,no,fo,vo,Co],isXML:!0,serializer:al},ol={path:"/{containerName}",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Sequence",element:{type:{name:"Composite",className:"SignedIdentifier"}}},serializedName:"SignedIdentifiers",xmlName:"SignedIdentifiers",xmlIsWrapped:!0,xmlElementName:"SignedIdentifier"},headersMapper:$i},default:{bodyMapper:kr,headersMapper:Fi}},queryParameters:[ao,No,wo],urlParameters:[Ys],headerParameters:[ro,io,no,vo],isXML:!0,serializer:al},ml={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:Vi},default:{bodyMapper:kr,headersMapper:Ki}},requestBody:{parameterPath:["options","containerAcl"],mapper:{serializedName:"containerAcl",xmlName:"SignedIdentifiers",xmlIsWrapped:!0,xmlElementName:"SignedIdentifier",type:{name:"Sequence",element:{type:{name:"Composite",className:"SignedIdentifier"}}}}},queryParameters:[ao,No,wo],urlParameters:[Ys],headerParameters:[Qs,Zs,ro,io,So,vo,Co,Po],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:al},ll={path:"/{containerName}",httpMethod:"PUT",responses:{201:{headersMapper:Gi},default:{bodyMapper:kr,headersMapper:Xi}},queryParameters:[ao,No,Ro],urlParameters:[Ys],headerParameters:[ro,io,no,{parameterPath:["options","deletedContainerName"],mapper:{serializedName:"x-ms-deleted-container-name",xmlName:"x-ms-deleted-container-name",type:{name:"String"}}},{parameterPath:["options","deletedContainerVersion"],mapper:{serializedName:"x-ms-deleted-container-version",xmlName:"x-ms-deleted-container-version",type:{name:"String"}}}],isXML:!0,serializer:al},dl={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:Wi},default:{bodyMapper:kr,headersMapper:Qi}},queryParameters:[ao,No,{parameterPath:"comp",mapper:{defaultValue:"rename",isConstant:!0,serializedName:"comp",type:{name:"String"}}}],urlParameters:[Ys],headerParameters:[ro,io,no,{parameterPath:"sourceContainerName",mapper:{serializedName:"x-ms-source-container-name",required:!0,xmlName:"x-ms-source-container-name",type:{name:"String"}}},{parameterPath:["options","sourceLeaseId"],mapper:{serializedName:"x-ms-source-lease-id",xmlName:"x-ms-source-lease-id",type:{name:"String"}}}],isXML:!0,serializer:al},cl={path:"/{containerName}",httpMethod:"POST",responses:{202:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:Ji},default:{bodyMapper:kr,headersMapper:Zi}},requestBody:uo,queryParameters:[ao,yo,No],urlParameters:[Ys],headerParameters:[Zs,ro,io,go,ho],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:al},pl={path:"/{containerName}",httpMethod:"GET",responses:{200:{bodyMapper:Kr,headersMapper:Yi},default:{bodyMapper:kr,headersMapper:en}},queryParameters:[ao,mo,lo,xo,bo,No],urlParameters:[Ys],headerParameters:[ro,io,no],isXML:!0,serializer:al},ul={path:"/{containerName}",httpMethod:"PUT",responses:{201:{headersMapper:tn},default:{bodyMapper:kr,headersMapper:an}},queryParameters:[ao,No,qo],urlParameters:[Ys],headerParameters:[ro,io,no,Co,Po,Bo,Oo,Eo],isXML:!0,serializer:al},yl={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:rn},default:{bodyMapper:kr,headersMapper:nn}},queryParameters:[ao,No,qo],urlParameters:[Ys],headerParameters:[ro,io,no,Co,Po,Mo,To],isXML:!0,serializer:al},gl={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:sn},default:{bodyMapper:kr,headersMapper:on}},queryParameters:[ao,No,qo],urlParameters:[Ys],headerParameters:[ro,io,no,Co,Po,To,Io],isXML:!0,serializer:al},hl={path:"/{containerName}",httpMethod:"PUT",responses:{202:{headersMapper:mn},default:{bodyMapper:kr,headersMapper:ln}},queryParameters:[ao,No,qo],urlParameters:[Ys],headerParameters:[ro,io,no,Co,Po,Ao,Ho],isXML:!0,serializer:al},xl={path:"/{containerName}",httpMethod:"PUT",responses:{200:{headersMapper:dn},default:{bodyMapper:kr,headersMapper:cn}},queryParameters:[ao,No,qo],urlParameters:[Ys],headerParameters:[ro,io,no,Co,Po,To,Do,ko],isXML:!0,serializer:al},bl={path:"/{containerName}",httpMethod:"GET",responses:{200:{bodyMapper:Zr,headersMapper:pn},default:{bodyMapper:kr,headersMapper:un}},queryParameters:[ao,so,oo,mo,lo,No,Lo],urlParameters:[Ys],headerParameters:[ro,io,no],isXML:!0,serializer:al},Nl={path:"/{containerName}",httpMethod:"GET",responses:{200:{bodyMapper:ri,headersMapper:yn},default:{bodyMapper:kr,headersMapper:gn}},queryParameters:[ao,so,oo,mo,lo,No,Lo,{parameterPath:"delimiter",mapper:{serializedName:"delimiter",required:!0,xmlName:"delimiter",type:{name:"String"}}}],urlParameters:[Ys],headerParameters:[ro,io,no],isXML:!0,serializer:al},fl={path:"/{containerName}",httpMethod:"GET",responses:{200:{headersMapper:hn},default:{bodyMapper:kr,headersMapper:xn}},queryParameters:[to,ao,po],urlParameters:[Ys],headerParameters:[ro,io,no],isXML:!0,serializer:al};class Sl{constructor(e){this.client=e}download(e){return this.client.sendOperationRequest({options:e},Cl)}getProperties(e){return this.client.sendOperationRequest({options:e},Pl)}delete(e){return this.client.sendOperationRequest({options:e},zl)}undelete(e){return this.client.sendOperationRequest({options:e},wl)}setExpiry(e,t){return this.client.sendOperationRequest({expiryOptions:e,options:t},Rl)}setHttpHeaders(e){return this.client.sendOperationRequest({options:e},ql)}setImmutabilityPolicy(e){return this.client.sendOperationRequest({options:e},Bl)}deleteImmutabilityPolicy(e){return this.client.sendOperationRequest({options:e},Ol)}setLegalHold(e,t){return this.client.sendOperationRequest({legalHold:e,options:t},El)}setMetadata(e){return this.client.sendOperationRequest({options:e},Ml)}acquireLease(e){return this.client.sendOperationRequest({options:e},Tl)}releaseLease(e,t){return this.client.sendOperationRequest({leaseId:e,options:t},Il)}renewLease(e,t){return this.client.sendOperationRequest({leaseId:e,options:t},Al)}changeLease(e,t,a){return this.client.sendOperationRequest({leaseId:e,proposedLeaseId:t,options:a},Hl)}breakLease(e){return this.client.sendOperationRequest({options:e},Dl)}createSnapshot(e){return this.client.sendOperationRequest({options:e},kl)}startCopyFromURL(e,t){return this.client.sendOperationRequest({copySource:e,options:t},Ll)}copyFromURL(e,t){return this.client.sendOperationRequest({copySource:e,options:t},jl)}abortCopyFromURL(e,t){return this.client.sendOperationRequest({copyId:e,options:t},Ul)}setTier(e,t){return this.client.sendOperationRequest({tier:e,options:t},_l)}getAccountInfo(e){return this.client.sendOperationRequest({options:e},$l)}query(e){return this.client.sendOperationRequest({options:e},Fl)}getTags(e){return this.client.sendOperationRequest({options:e},Vl)}setTags(e){return this.client.sendOperationRequest({options:e},Kl)}}const vl=ct(r,!0),Cl={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:bn},206:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:bn},default:{bodyMapper:kr,headersMapper:Nn}},queryParameters:[ao,jo,Uo],urlParameters:[Ys],headerParameters:[ro,io,no,vo,Co,Po,_o,{parameterPath:["options","rangeGetContentMD5"],mapper:{serializedName:"x-ms-range-get-content-md5",xmlName:"x-ms-range-get-content-md5",type:{name:"Boolean"}}},{parameterPath:["options","rangeGetContentCRC64"],mapper:{serializedName:"x-ms-range-get-content-crc64",xmlName:"x-ms-range-get-content-crc64",type:{name:"Boolean"}}},$o,Fo,Vo,Ko,Go,Xo],isXML:!0,serializer:vl},Pl={path:"/{containerName}/{blob}",httpMethod:"HEAD",responses:{200:{headersMapper:fn},default:{bodyMapper:kr,headersMapper:Sn}},queryParameters:[ao,jo,Uo],urlParameters:[Ys],headerParameters:[ro,io,no,vo,Co,Po,$o,Fo,Vo,Ko,Go,Xo],isXML:!0,serializer:vl},zl={path:"/{containerName}/{blob}",httpMethod:"DELETE",responses:{202:{headersMapper:vn},default:{bodyMapper:kr,headersMapper:Cn}},queryParameters:[ao,jo,Uo,{parameterPath:["options","blobDeleteType"],mapper:{serializedName:"deletetype",xmlName:"deletetype",type:{name:"String"}}}],urlParameters:[Ys],headerParameters:[ro,io,no,vo,Co,Po,Ko,Go,Xo,{parameterPath:["options","deleteSnapshots"],mapper:{serializedName:"x-ms-delete-snapshots",xmlName:"x-ms-delete-snapshots",type:{name:"Enum",allowedValues:["include","only"]}}}],isXML:!0,serializer:vl},wl={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:Pn},default:{bodyMapper:kr,headersMapper:zn}},queryParameters:[ao,Ro],urlParameters:[Ys],headerParameters:[ro,io,no],isXML:!0,serializer:vl},Rl={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:wn},default:{bodyMapper:kr,headersMapper:Rn}},queryParameters:[ao,{parameterPath:"comp",mapper:{defaultValue:"expiry",isConstant:!0,serializedName:"comp",type:{name:"String"}}}],urlParameters:[Ys],headerParameters:[ro,io,no,{parameterPath:"expiryOptions",mapper:{serializedName:"x-ms-expiry-option",required:!0,xmlName:"x-ms-expiry-option",type:{name:"String"}}},{parameterPath:["options","expiresOn"],mapper:{serializedName:"x-ms-expiry-time",xmlName:"x-ms-expiry-time",type:{name:"String"}}}],isXML:!0,serializer:vl},ql={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:qn},default:{bodyMapper:kr,headersMapper:Bn}},queryParameters:[to,ao],urlParameters:[Ys],headerParameters:[ro,io,no,vo,Co,Po,Ko,Go,Xo,Wo,Qo,Jo,Zo,Yo,em],isXML:!0,serializer:vl},Bl={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:On},default:{bodyMapper:kr,headersMapper:En}},queryParameters:[ao,jo,Uo,tm],urlParameters:[Ys],headerParameters:[ro,io,no,Po,am,rm],isXML:!0,serializer:vl},Ol={path:"/{containerName}/{blob}",httpMethod:"DELETE",responses:{200:{headersMapper:Mn},default:{bodyMapper:kr,headersMapper:Tn}},queryParameters:[ao,jo,Uo,tm],urlParameters:[Ys],headerParameters:[ro,io,no],isXML:!0,serializer:vl},El={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:In},default:{bodyMapper:kr,headersMapper:An}},queryParameters:[ao,jo,Uo,{parameterPath:"comp",mapper:{defaultValue:"legalhold",isConstant:!0,serializedName:"comp",type:{name:"String"}}}],urlParameters:[Ys],headerParameters:[ro,io,no,{parameterPath:"legalHold",mapper:{serializedName:"x-ms-legal-hold",required:!0,xmlName:"x-ms-legal-hold",type:{name:"Boolean"}}}],isXML:!0,serializer:vl},Ml={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:Hn},default:{bodyMapper:kr,headersMapper:Dn}},queryParameters:[ao,zo],urlParameters:[Ys],headerParameters:[ro,io,no,fo,vo,Co,Po,$o,Fo,Vo,Ko,Go,Xo,im],isXML:!0,serializer:vl},Tl={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:kn},default:{bodyMapper:kr,headersMapper:Ln}},queryParameters:[ao,qo],urlParameters:[Ys],headerParameters:[ro,io,no,Co,Po,Bo,Oo,Eo,Ko,Go,Xo],isXML:!0,serializer:vl},Il={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:jn},default:{bodyMapper:kr,headersMapper:Un}},queryParameters:[ao,qo],urlParameters:[Ys],headerParameters:[ro,io,no,Co,Po,Mo,To,Ko,Go,Xo],isXML:!0,serializer:vl},Al={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:_n},default:{bodyMapper:kr,headersMapper:$n}},queryParameters:[ao,qo],urlParameters:[Ys],headerParameters:[ro,io,no,Co,Po,To,Io,Ko,Go,Xo],isXML:!0,serializer:vl},Hl={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:Fn},default:{bodyMapper:kr,headersMapper:Vn}},queryParameters:[ao,qo],urlParameters:[Ys],headerParameters:[ro,io,no,Co,Po,To,Do,ko,Ko,Go,Xo],isXML:!0,serializer:vl},Dl={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{202:{headersMapper:Kn},default:{bodyMapper:kr,headersMapper:Gn}},queryParameters:[ao,qo],urlParameters:[Ys],headerParameters:[ro,io,no,Co,Po,Ao,Ho,Ko,Go,Xo],isXML:!0,serializer:vl},kl={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:Xn},default:{bodyMapper:kr,headersMapper:Wn}},queryParameters:[ao,{parameterPath:"comp",mapper:{defaultValue:"snapshot",isConstant:!0,serializedName:"comp",type:{name:"String"}}}],urlParameters:[Ys],headerParameters:[ro,io,no,fo,vo,Co,Po,$o,Fo,Vo,Ko,Go,Xo,im],isXML:!0,serializer:vl},Ll={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{202:{headersMapper:Qn},default:{bodyMapper:kr,headersMapper:Jn}},queryParameters:[ao],urlParameters:[Ys],headerParameters:[ro,io,no,fo,vo,Co,Po,Ko,Go,Xo,am,rm,nm,sm,om,mm,lm,dm,cm,pm,um,{parameterPath:["options","sealBlob"],mapper:{serializedName:"x-ms-seal-blob",xmlName:"x-ms-seal-blob",type:{name:"Boolean"}}},ym],isXML:!0,serializer:vl},jl={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{202:{headersMapper:Zn},default:{bodyMapper:kr,headersMapper:Yn}},queryParameters:[ao],urlParameters:[Ys],headerParameters:[ro,io,no,fo,vo,Co,Po,Ko,Go,Xo,am,rm,im,nm,om,mm,lm,dm,pm,um,ym,{parameterPath:"xMsRequiresSync",mapper:{defaultValue:"true",isConstant:!0,serializedName:"x-ms-requires-sync",type:{name:"String"}}},gm,hm,xm],isXML:!0,serializer:vl},Ul={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{204:{headersMapper:es},default:{bodyMapper:kr,headersMapper:ts}},queryParameters:[ao,{parameterPath:"comp",mapper:{defaultValue:"copy",isConstant:!0,serializedName:"comp",type:{name:"String"}}},{parameterPath:"copyId",mapper:{serializedName:"copyid",required:!0,xmlName:"copyid",type:{name:"String"}}}],urlParameters:[Ys],headerParameters:[ro,io,no,vo,{parameterPath:"copyActionAbortConstant",mapper:{defaultValue:"abort",isConstant:!0,serializedName:"x-ms-copy-action",type:{name:"String"}}}],isXML:!0,serializer:vl},_l={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:as},202:{headersMapper:as},default:{bodyMapper:kr,headersMapper:rs}},queryParameters:[ao,jo,Uo,{parameterPath:"comp",mapper:{defaultValue:"tier",isConstant:!0,serializedName:"comp",type:{name:"String"}}}],urlParameters:[Ys],headerParameters:[ro,io,no,vo,Xo,sm,{parameterPath:"tier",mapper:{serializedName:"x-ms-access-tier",required:!0,xmlName:"x-ms-access-tier",type:{name:"Enum",allowedValues:["P4","P6","P10","P15","P20","P30","P40","P50","P60","P70","P80","Hot","Cool","Archive","Cold"]}}}],isXML:!0,serializer:vl},$l={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{headersMapper:is},default:{bodyMapper:kr,headersMapper:ns}},queryParameters:[to,ao,po],urlParameters:[Ys],headerParameters:[ro,io,no],isXML:!0,serializer:vl},Fl={path:"/{containerName}/{blob}",httpMethod:"POST",responses:{200:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:ss},206:{bodyMapper:{type:{name:"Stream"},serializedName:"parsedResponse"},headersMapper:ss},default:{bodyMapper:kr,headersMapper:os}},requestBody:bm,queryParameters:[ao,jo,{parameterPath:"comp",mapper:{defaultValue:"query",isConstant:!0,serializedName:"comp",type:{name:"String"}}}],urlParameters:[Ys],headerParameters:[Qs,Zs,ro,io,vo,Co,Po,$o,Fo,Vo,Ko,Go,Xo],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:vl},Vl={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{bodyMapper:Xr,headersMapper:ms},default:{bodyMapper:kr,headersMapper:ls}},queryParameters:[ao,jo,Uo,Nm],urlParameters:[Ys],headerParameters:[ro,io,no,vo,Xo],isXML:!0,serializer:vl},Kl={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{204:{headersMapper:ds},default:{bodyMapper:kr,headersMapper:cs}},requestBody:fm,queryParameters:[ao,Uo,Nm],urlParameters:[Ys],headerParameters:[Qs,Zs,ro,io,vo,Xo,Sm,vm],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:vl};class Gl{constructor(e){this.client=e}create(e,t,a){return this.client.sendOperationRequest({contentLength:e,blobContentLength:t,options:a},Wl)}uploadPages(e,t,a){return this.client.sendOperationRequest({contentLength:e,body:t,options:a},Ql)}clearPages(e,t){return this.client.sendOperationRequest({contentLength:e,options:t},Jl)}uploadPagesFromURL(e,t,a,r,i){return this.client.sendOperationRequest({sourceUrl:e,sourceRange:t,contentLength:a,range:r,options:i},Zl)}getPageRanges(e){return this.client.sendOperationRequest({options:e},Yl)}getPageRangesDiff(e){return this.client.sendOperationRequest({options:e},ed)}resize(e,t){return this.client.sendOperationRequest({blobContentLength:e,options:t},td)}updateSequenceNumber(e,t){return this.client.sendOperationRequest({sequenceNumberAction:e,options:t},ad)}copyIncremental(e,t){return this.client.sendOperationRequest({copySource:e,options:t},rd)}}const Xl=ct(r,!0),Wl={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:ps},default:{bodyMapper:kr,headersMapper:us}},queryParameters:[ao],urlParameters:[Ys],headerParameters:[ro,io,no,go,fo,vo,Co,Po,$o,Fo,Vo,Ko,Go,Xo,Wo,Qo,Jo,Zo,Yo,em,am,rm,im,nm,um,ym,{parameterPath:"blobType",mapper:{defaultValue:"PageBlob",isConstant:!0,serializedName:"x-ms-blob-type",type:{name:"String"}}},Cm,Pm],isXML:!0,serializer:Xl},Ql={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:ys},default:{bodyMapper:kr,headersMapper:gs}},requestBody:wm,queryParameters:[ao,qm],urlParameters:[Ys],headerParameters:[ro,io,go,vo,Co,Po,_o,$o,Fo,Vo,Ko,Go,Xo,im,Sm,vm,zm,Rm,Bm,Om,Em,Mm],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"binary",serializer:Xl},Jl={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:hs},default:{bodyMapper:kr,headersMapper:xs}},queryParameters:[ao,qm],urlParameters:[Ys],headerParameters:[ro,io,no,go,vo,Co,Po,_o,$o,Fo,Vo,Ko,Go,Xo,im,Om,Em,Mm,{parameterPath:"pageWrite",mapper:{defaultValue:"clear",isConstant:!0,serializedName:"x-ms-page-write",type:{name:"String"}}}],isXML:!0,serializer:Xl},Zl={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:bs},default:{bodyMapper:kr,headersMapper:Ns}},queryParameters:[ao,qm],urlParameters:[Ys],headerParameters:[ro,io,no,go,vo,Co,Po,$o,Fo,Vo,Ko,Go,Xo,im,om,mm,lm,dm,gm,hm,Bm,Om,Em,Mm,Tm,{parameterPath:"sourceRange",mapper:{serializedName:"x-ms-source-range",required:!0,xmlName:"x-ms-source-range",type:{name:"String"}}},Im,{parameterPath:"range",mapper:{serializedName:"x-ms-range",required:!0,xmlName:"x-ms-range",type:{name:"String"}}}],isXML:!0,serializer:Xl},Yl={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{bodyMapper:li,headersMapper:fs},default:{bodyMapper:kr,headersMapper:Ss}},queryParameters:[ao,mo,lo,jo,Am],urlParameters:[Ys],headerParameters:[ro,io,no,vo,Co,Po,_o,Ko,Go,Xo],isXML:!0,serializer:Xl},ed={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{bodyMapper:li,headersMapper:vs},default:{bodyMapper:kr,headersMapper:Cs}},queryParameters:[ao,mo,lo,jo,Am,{parameterPath:["options","prevsnapshot"],mapper:{serializedName:"prevsnapshot",xmlName:"prevsnapshot",type:{name:"String"}}}],urlParameters:[Ys],headerParameters:[ro,io,no,vo,Co,Po,_o,Ko,Go,Xo,{parameterPath:["options","prevSnapshotUrl"],mapper:{serializedName:"x-ms-previous-snapshot-url",xmlName:"x-ms-previous-snapshot-url",type:{name:"String"}}}],isXML:!0,serializer:Xl},td={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:Ps},default:{bodyMapper:kr,headersMapper:zs}},queryParameters:[to,ao],urlParameters:[Ys],headerParameters:[ro,io,no,vo,Co,Po,$o,Fo,Vo,Ko,Go,Xo,im,Cm],isXML:!0,serializer:Xl},ad={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:ws},default:{bodyMapper:kr,headersMapper:Rs}},queryParameters:[to,ao],urlParameters:[Ys],headerParameters:[ro,io,no,vo,Co,Po,Ko,Go,Xo,Pm,{parameterPath:"sequenceNumberAction",mapper:{serializedName:"x-ms-sequence-number-action",required:!0,xmlName:"x-ms-sequence-number-action",type:{name:"Enum",allowedValues:["max","update","increment"]}}}],isXML:!0,serializer:Xl},rd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{202:{headersMapper:qs},default:{bodyMapper:kr,headersMapper:Bs}},queryParameters:[ao,{parameterPath:"comp",mapper:{defaultValue:"incrementalcopy",isConstant:!0,serializedName:"comp",type:{name:"String"}}}],urlParameters:[Ys],headerParameters:[ro,io,no,Co,Po,Ko,Go,Xo,pm],isXML:!0,serializer:Xl};class id{constructor(e){this.client=e}create(e,t){return this.client.sendOperationRequest({contentLength:e,options:t},sd)}appendBlock(e,t,a){return this.client.sendOperationRequest({contentLength:e,body:t,options:a},od)}appendBlockFromUrl(e,t,a){return this.client.sendOperationRequest({sourceUrl:e,contentLength:t,options:a},md)}seal(e){return this.client.sendOperationRequest({options:e},ld)}}const nd=ct(r,!0),sd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:Os},default:{bodyMapper:kr,headersMapper:Es}},queryParameters:[ao],urlParameters:[Ys],headerParameters:[ro,io,no,go,fo,vo,Co,Po,$o,Fo,Vo,Ko,Go,Xo,Wo,Qo,Jo,Zo,Yo,em,am,rm,im,um,ym,{parameterPath:"blobType",mapper:{defaultValue:"AppendBlob",isConstant:!0,serializedName:"x-ms-blob-type",type:{name:"String"}}}],isXML:!0,serializer:nd},od={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:Ms},default:{bodyMapper:kr,headersMapper:Ts}},requestBody:wm,queryParameters:[ao,Hm],urlParameters:[Ys],headerParameters:[ro,io,go,vo,Co,Po,$o,Fo,Vo,Ko,Go,Xo,im,Sm,vm,zm,Rm,Dm,km],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"binary",serializer:nd},md={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:Is},default:{bodyMapper:kr,headersMapper:As}},queryParameters:[ao,Hm],urlParameters:[Ys],headerParameters:[ro,io,no,go,vo,Co,Po,$o,Fo,Vo,Ko,Go,Xo,im,om,mm,lm,dm,gm,hm,Sm,Tm,Im,Dm,km,Lm],isXML:!0,serializer:nd},ld={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{200:{headersMapper:Hs},default:{bodyMapper:kr,headersMapper:Ds}},queryParameters:[ao,{parameterPath:"comp",mapper:{defaultValue:"seal",isConstant:!0,serializedName:"comp",type:{name:"String"}}}],urlParameters:[Ys],headerParameters:[ro,io,no,vo,Co,Po,Ko,Go,km],isXML:!0,serializer:nd};class dd{constructor(e){this.client=e}upload(e,t,a){return this.client.sendOperationRequest({contentLength:e,body:t,options:a},pd)}putBlobFromUrl(e,t,a){return this.client.sendOperationRequest({contentLength:e,copySource:t,options:a},ud)}stageBlock(e,t,a,r){return this.client.sendOperationRequest({blockId:e,contentLength:t,body:a,options:r},yd)}stageBlockFromURL(e,t,a,r){return this.client.sendOperationRequest({blockId:e,contentLength:t,sourceUrl:a,options:r},gd)}commitBlockList(e,t){return this.client.sendOperationRequest({blocks:e,options:t},hd)}getBlockList(e,t){return this.client.sendOperationRequest({listType:e,options:t},xd)}}const cd=ct(r,!0),pd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:ks},default:{bodyMapper:kr,headersMapper:Ls}},requestBody:wm,queryParameters:[ao],urlParameters:[Ys],headerParameters:[ro,io,go,fo,vo,Co,Po,$o,Fo,Vo,Ko,Go,Xo,Wo,Qo,Jo,Zo,Yo,em,am,rm,im,nm,um,ym,Sm,vm,zm,Rm,jm],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"binary",serializer:cd},ud={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:js},default:{bodyMapper:kr,headersMapper:Us}},queryParameters:[ao],urlParameters:[Ys],headerParameters:[ro,io,no,go,fo,vo,Co,Po,$o,Fo,Vo,Ko,Go,Xo,Wo,Qo,Jo,Zo,Yo,em,im,nm,om,mm,lm,dm,cm,pm,um,gm,hm,xm,Sm,jm,{parameterPath:["options","copySourceBlobProperties"],mapper:{serializedName:"x-ms-copy-source-blob-properties",xmlName:"x-ms-copy-source-blob-properties",type:{name:"Boolean"}}}],isXML:!0,serializer:cd},yd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:_s},default:{bodyMapper:kr,headersMapper:$s}},requestBody:wm,queryParameters:[ao,Um,_m],urlParameters:[Ys],headerParameters:[ro,io,go,vo,$o,Fo,Vo,im,Sm,vm,zm,Rm],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"binary",serializer:cd},gd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:Fs},default:{bodyMapper:kr,headersMapper:Vs}},queryParameters:[ao,Um,_m],urlParameters:[Ys],headerParameters:[ro,io,no,go,vo,$o,Fo,Vo,im,om,mm,lm,dm,gm,hm,Tm,Im,Lm],isXML:!0,serializer:cd},hd={path:"/{containerName}/{blob}",httpMethod:"PUT",responses:{201:{headersMapper:Ks},default:{bodyMapper:kr,headersMapper:Gs}},requestBody:$m,queryParameters:[ao,Fm],urlParameters:[Ys],headerParameters:[Qs,Zs,ro,io,fo,vo,Co,Po,$o,Fo,Vo,Ko,Go,Xo,Wo,Qo,Jo,Zo,Yo,em,am,rm,im,nm,um,ym,Sm,vm],isXML:!0,contentType:"application/xml; charset=utf-8",mediaType:"xml",serializer:cd},xd={path:"/{containerName}/{blob}",httpMethod:"GET",responses:{200:{bodyMapper:oi,headersMapper:Xs},default:{bodyMapper:kr,headersMapper:Ws}},queryParameters:[ao,jo,Fm,{parameterPath:"listType",mapper:{defaultValue:"committed",serializedName:"blocklisttype",required:!0,xmlName:"blocklisttype",type:{name:"Enum",allowedValues:["committed","uncommitted","all"]}}}],urlParameters:[Ys],headerParameters:[ro,io,no,vo,Xo],isXML:!0,serializer:cd};class bd extends Qt{constructor(e,t){var a,r;if(void 0===e)throw new Error("'url' cannot be null");t||(t={});const i="azsdk-js-azure-storage-blob/12.26.0",n=t.userAgentOptions&&t.userAgentOptions.userAgentPrefix?`${t.userAgentOptions.userAgentPrefix} ${i}`:`${i}`;super(Object.assign(Object.assign(Object.assign({},{requestContentType:"application/json; charset=utf-8"}),t),{userAgentOptions:{userAgentPrefix:n},endpoint:null!==(r=null!==(a=t.endpoint)&&void 0!==a?a:t.baseUri)&&void 0!==r?r:"{url}"})),this.url=e,this.version=t.version||"2025-01-05",this.service=new Vm(this),this.container=new tl(this),this.blob=new Sl(this),this.pageBlob=new Gl(this),this.appendBlob=new id(this),this.blockBlob=new dd(this)}}class Nd extends bd{async sendOperationRequest(e,t){const a=Object.assign({},t);return"/{containerName}"!==a.path&&"/{containerName}/{blob}"!==a.path||(a.path=""),super.sendOperationRequest(e,a)}}class fd{constructor(e,t){this.url=function(e){const t=new URL(e);let a=t.pathname;return a=a||"/",a=encodeURIComponent(a).replace(/%2F/g,"/").replace(/'/g,"%27").replace(/\+/g,"%20").replace(/%25/g,"%"),t.pathname=a,t.toString()}(e),this.accountName=Fa(e),this.pipeline=t,this.storageClientContext=new Nd(this.url,Cr(t)),this.isHttps=$a(function(e){try{const t=new URL(e);return t.protocol.endsWith(":")?t.protocol.slice(0,-1):t.protocol}catch(e){return}}(this.url)||"","https"),this.credential=Pr(t),this.storageClientContext.requestContentType=void 0}}const Sd=Te({packageName:"@azure/storage-blob",packageVersion:ua,namespace:"Microsoft.Storage"});class vd{constructor(){this.read=!1,this.add=!1,this.create=!1,this.write=!1,this.delete=!1,this.deleteVersion=!1,this.tag=!1,this.move=!1,this.execute=!1,this.setImmutabilityPolicy=!1,this.permanentDelete=!1}static parse(e){const t=new vd;for(const a of e)switch(a){case"r":t.read=!0;break;case"a":t.add=!0;break;case"c":t.create=!0;break;case"w":t.write=!0;break;case"d":t.delete=!0;break;case"x":t.deleteVersion=!0;break;case"t":t.tag=!0;break;case"m":t.move=!0;break;case"e":t.execute=!0;break;case"i":t.setImmutabilityPolicy=!0;break;case"y":t.permanentDelete=!0;break;default:throw new RangeError(`Invalid permission: ${a}`)}return t}static from(e){const t=new vd;return e.read&&(t.read=!0),e.add&&(t.add=!0),e.create&&(t.create=!0),e.write&&(t.write=!0),e.delete&&(t.delete=!0),e.deleteVersion&&(t.deleteVersion=!0),e.tag&&(t.tag=!0),e.move&&(t.move=!0),e.execute&&(t.execute=!0),e.setImmutabilityPolicy&&(t.setImmutabilityPolicy=!0),e.permanentDelete&&(t.permanentDelete=!0),t}toString(){const e=[];return this.read&&e.push("r"),this.add&&e.push("a"),this.create&&e.push("c"),this.write&&e.push("w"),this.delete&&e.push("d"),this.deleteVersion&&e.push("x"),this.tag&&e.push("t"),this.move&&e.push("m"),this.execute&&e.push("e"),this.setImmutabilityPolicy&&e.push("i"),this.permanentDelete&&e.push("y"),e.join("")}}class Cd{constructor(){this.read=!1,this.add=!1,this.create=!1,this.write=!1,this.delete=!1,this.deleteVersion=!1,this.list=!1,this.tag=!1,this.move=!1,this.execute=!1,this.setImmutabilityPolicy=!1,this.permanentDelete=!1,this.filterByTags=!1}static parse(e){const t=new Cd;for(const a of e)switch(a){case"r":t.read=!0;break;case"a":t.add=!0;break;case"c":t.create=!0;break;case"w":t.write=!0;break;case"d":t.delete=!0;break;case"l":t.list=!0;break;case"t":t.tag=!0;break;case"x":t.deleteVersion=!0;break;case"m":t.move=!0;break;case"e":t.execute=!0;break;case"i":t.setImmutabilityPolicy=!0;break;case"y":t.permanentDelete=!0;break;case"f":t.filterByTags=!0;break;default:throw new RangeError(`Invalid permission ${a}`)}return t}static from(e){const t=new Cd;return e.read&&(t.read=!0),e.add&&(t.add=!0),e.create&&(t.create=!0),e.write&&(t.write=!0),e.delete&&(t.delete=!0),e.list&&(t.list=!0),e.deleteVersion&&(t.deleteVersion=!0),e.tag&&(t.tag=!0),e.move&&(t.move=!0),e.execute&&(t.execute=!0),e.setImmutabilityPolicy&&(t.setImmutabilityPolicy=!0),e.permanentDelete&&(t.permanentDelete=!0),e.filterByTags&&(t.filterByTags=!0),t}toString(){const e=[];return this.read&&e.push("r"),this.add&&e.push("a"),this.create&&e.push("c"),this.write&&e.push("w"),this.delete&&e.push("d"),this.deleteVersion&&e.push("x"),this.list&&e.push("l"),this.tag&&e.push("t"),this.move&&e.push("m"),this.execute&&e.push("e"),this.setImmutabilityPolicy&&e.push("i"),this.permanentDelete&&e.push("y"),this.filterByTags&&e.push("f"),e.join("")}}class Pd{}function zd(e){return e.end?`${e.start}-${e.end}`:e.start}var wd,Rd,qd,Bd;!function(e){e.Https="https",e.HttpsAndHttp="https,http"}(wd||(wd={}));class Od{get ipRange(){if(this.ipRangeInner)return{end:this.ipRangeInner.end,start:this.ipRangeInner.start}}constructor(e,t,a,r,i,n,s,o,m,l,d,c,p,u,y,g,h,x,b,N){this.version=e,this.signature=t,void 0!==a&&"string"!=typeof a?(this.permissions=a.permissions,this.services=a.services,this.resourceTypes=a.resourceTypes,this.protocol=a.protocol,this.startsOn=a.startsOn,this.expiresOn=a.expiresOn,this.ipRangeInner=a.ipRange,this.identifier=a.identifier,this.encryptionScope=a.encryptionScope,this.resource=a.resource,this.cacheControl=a.cacheControl,this.contentDisposition=a.contentDisposition,this.contentEncoding=a.contentEncoding,this.contentLanguage=a.contentLanguage,this.contentType=a.contentType,a.userDelegationKey&&(this.signedOid=a.userDelegationKey.signedObjectId,this.signedTenantId=a.userDelegationKey.signedTenantId,this.signedStartsOn=a.userDelegationKey.signedStartsOn,this.signedExpiresOn=a.userDelegationKey.signedExpiresOn,this.signedService=a.userDelegationKey.signedService,this.signedVersion=a.userDelegationKey.signedVersion,this.preauthorizedAgentObjectId=a.preauthorizedAgentObjectId,this.correlationId=a.correlationId)):(this.services=r,this.resourceTypes=i,this.expiresOn=o,this.permissions=a,this.protocol=n,this.startsOn=s,this.ipRangeInner=m,this.encryptionScope=N,this.identifier=l,this.resource=d,this.cacheControl=c,this.contentDisposition=p,this.contentEncoding=u,this.contentLanguage=y,this.contentType=g,h&&(this.signedOid=h.signedObjectId,this.signedTenantId=h.signedTenantId,this.signedStartsOn=h.signedStartsOn,this.signedExpiresOn=h.signedExpiresOn,this.signedService=h.signedService,this.signedVersion=h.signedVersion,this.preauthorizedAgentObjectId=x,this.correlationId=b))}toString(){const e=["sv","ss","srt","spr","st","se","sip","si","ses","skoid","sktid","skt","ske","sks","skv","sr","sp","sig","rscc","rscd","rsce","rscl","rsct","saoid","scid"],t=[];for(const a of e)switch(a){case"sv":this.tryAppendQueryParameter(t,a,this.version);break;case"ss":this.tryAppendQueryParameter(t,a,this.services);break;case"srt":this.tryAppendQueryParameter(t,a,this.resourceTypes);break;case"spr":this.tryAppendQueryParameter(t,a,this.protocol);break;case"st":this.tryAppendQueryParameter(t,a,this.startsOn?ja(this.startsOn,!1):void 0);break;case"se":this.tryAppendQueryParameter(t,a,this.expiresOn?ja(this.expiresOn,!1):void 0);break;case"sip":this.tryAppendQueryParameter(t,a,this.ipRange?zd(this.ipRange):void 0);break;case"si":this.tryAppendQueryParameter(t,a,this.identifier);break;case"ses":this.tryAppendQueryParameter(t,a,this.encryptionScope);break;case"skoid":this.tryAppendQueryParameter(t,a,this.signedOid);break;case"sktid":this.tryAppendQueryParameter(t,a,this.signedTenantId);break;case"skt":this.tryAppendQueryParameter(t,a,this.signedStartsOn?ja(this.signedStartsOn,!1):void 0);break;case"ske":this.tryAppendQueryParameter(t,a,this.signedExpiresOn?ja(this.signedExpiresOn,!1):void 0);break;case"sks":this.tryAppendQueryParameter(t,a,this.signedService);break;case"skv":this.tryAppendQueryParameter(t,a,this.signedVersion);break;case"sr":this.tryAppendQueryParameter(t,a,this.resource);break;case"sp":this.tryAppendQueryParameter(t,a,this.permissions);break;case"sig":this.tryAppendQueryParameter(t,a,this.signature);break;case"rscc":this.tryAppendQueryParameter(t,a,this.cacheControl);break;case"rscd":this.tryAppendQueryParameter(t,a,this.contentDisposition);break;case"rsce":this.tryAppendQueryParameter(t,a,this.contentEncoding);break;case"rscl":this.tryAppendQueryParameter(t,a,this.contentLanguage);break;case"rsct":this.tryAppendQueryParameter(t,a,this.contentType);break;case"saoid":this.tryAppendQueryParameter(t,a,this.preauthorizedAgentObjectId);break;case"scid":this.tryAppendQueryParameter(t,a,this.correlationId)}return t.join("&")}tryAppendQueryParameter(e,t,a){a&&(t=encodeURIComponent(t),a=encodeURIComponent(a),t.length>0&&a.length>0&&e.push(`${t}=${a}`))}}function Ed(e,t,a){return Md(e,t,a).sasQueryParameters}function Md(e,t,a){const r=e.version?e.version:ya,i=t instanceof mr?t:void 0;let n;if(void 0===i&&void 0!==a&&(n=new Pd(a,t)),void 0===i&&void 0===n)throw TypeError("Invalid sharedKeyCredential, userDelegationKey or accountName.");if(r>="2020-12-06")return void 0!==i?function(e,t){if(!((e=Id(e)).identifier||e.permissions&&e.expiresOn))throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.");let a,r="c",i=e.snapshotTime;e.blobName&&(r="b",e.snapshotTime?r="bs":e.versionId&&(r="bv",i=e.versionId)),e.permissions&&(a=e.blobName?vd.parse(e.permissions.toString()).toString():Cd.parse(e.permissions.toString()).toString());const n=[a||"",e.startsOn?ja(e.startsOn,!1):"",e.expiresOn?ja(e.expiresOn,!1):"",Td(t.accountName,e.containerName,e.blobName),e.identifier,e.ipRange?zd(e.ipRange):"",e.protocol?e.protocol:"",e.version,r,i,e.encryptionScope,e.cacheControl?e.cacheControl:"",e.contentDisposition?e.contentDisposition:"",e.contentEncoding?e.contentEncoding:"",e.contentLanguage?e.contentLanguage:"",e.contentType?e.contentType:""].join("\n"),s=t.computeHMACSHA256(n);return{sasQueryParameters:new Od(e.version,s,a,void 0,void 0,e.protocol,e.startsOn,e.expiresOn,e.ipRange,e.identifier,r,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType,void 0,void 0,void 0,e.encryptionScope),stringToSign:n}}(e,i):function(e,t){if(!(e=Id(e)).permissions||!e.expiresOn)throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.");let a,r="c",i=e.snapshotTime;e.blobName&&(r="b",e.snapshotTime?r="bs":e.versionId&&(r="bv",i=e.versionId)),e.permissions&&(a=e.blobName?vd.parse(e.permissions.toString()).toString():Cd.parse(e.permissions.toString()).toString());const n=[a||"",e.startsOn?ja(e.startsOn,!1):"",e.expiresOn?ja(e.expiresOn,!1):"",Td(t.accountName,e.containerName,e.blobName),t.userDelegationKey.signedObjectId,t.userDelegationKey.signedTenantId,t.userDelegationKey.signedStartsOn?ja(t.userDelegationKey.signedStartsOn,!1):"",t.userDelegationKey.signedExpiresOn?ja(t.userDelegationKey.signedExpiresOn,!1):"",t.userDelegationKey.signedService,t.userDelegationKey.signedVersion,e.preauthorizedAgentObjectId,void 0,e.correlationId,e.ipRange?zd(e.ipRange):"",e.protocol?e.protocol:"",e.version,r,i,e.encryptionScope,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType].join("\n"),s=t.computeHMACSHA256(n);return{sasQueryParameters:new Od(e.version,s,a,void 0,void 0,e.protocol,e.startsOn,e.expiresOn,e.ipRange,e.identifier,r,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType,t.userDelegationKey,e.preauthorizedAgentObjectId,e.correlationId,e.encryptionScope),stringToSign:n}}(e,n);if(r>="2018-11-09")return void 0!==i?function(e,t){if(!((e=Id(e)).identifier||e.permissions&&e.expiresOn))throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.");let a,r="c",i=e.snapshotTime;e.blobName&&(r="b",e.snapshotTime?r="bs":e.versionId&&(r="bv",i=e.versionId)),e.permissions&&(a=e.blobName?vd.parse(e.permissions.toString()).toString():Cd.parse(e.permissions.toString()).toString());const n=[a||"",e.startsOn?ja(e.startsOn,!1):"",e.expiresOn?ja(e.expiresOn,!1):"",Td(t.accountName,e.containerName,e.blobName),e.identifier,e.ipRange?zd(e.ipRange):"",e.protocol?e.protocol:"",e.version,r,i,e.cacheControl?e.cacheControl:"",e.contentDisposition?e.contentDisposition:"",e.contentEncoding?e.contentEncoding:"",e.contentLanguage?e.contentLanguage:"",e.contentType?e.contentType:""].join("\n"),s=t.computeHMACSHA256(n);return{sasQueryParameters:new Od(e.version,s,a,void 0,void 0,e.protocol,e.startsOn,e.expiresOn,e.ipRange,e.identifier,r,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType),stringToSign:n}}(e,i):r>="2020-02-10"?function(e,t){if(!(e=Id(e)).permissions||!e.expiresOn)throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.");let a,r="c",i=e.snapshotTime;e.blobName&&(r="b",e.snapshotTime?r="bs":e.versionId&&(r="bv",i=e.versionId)),e.permissions&&(a=e.blobName?vd.parse(e.permissions.toString()).toString():Cd.parse(e.permissions.toString()).toString());const n=[a||"",e.startsOn?ja(e.startsOn,!1):"",e.expiresOn?ja(e.expiresOn,!1):"",Td(t.accountName,e.containerName,e.blobName),t.userDelegationKey.signedObjectId,t.userDelegationKey.signedTenantId,t.userDelegationKey.signedStartsOn?ja(t.userDelegationKey.signedStartsOn,!1):"",t.userDelegationKey.signedExpiresOn?ja(t.userDelegationKey.signedExpiresOn,!1):"",t.userDelegationKey.signedService,t.userDelegationKey.signedVersion,e.preauthorizedAgentObjectId,void 0,e.correlationId,e.ipRange?zd(e.ipRange):"",e.protocol?e.protocol:"",e.version,r,i,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType].join("\n"),s=t.computeHMACSHA256(n);return{sasQueryParameters:new Od(e.version,s,a,void 0,void 0,e.protocol,e.startsOn,e.expiresOn,e.ipRange,e.identifier,r,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType,t.userDelegationKey,e.preauthorizedAgentObjectId,e.correlationId),stringToSign:n}}(e,n):function(e,t){if(!(e=Id(e)).permissions||!e.expiresOn)throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.");let a,r="c",i=e.snapshotTime;e.blobName&&(r="b",e.snapshotTime?r="bs":e.versionId&&(r="bv",i=e.versionId)),e.permissions&&(a=e.blobName?vd.parse(e.permissions.toString()).toString():Cd.parse(e.permissions.toString()).toString());const n=[a||"",e.startsOn?ja(e.startsOn,!1):"",e.expiresOn?ja(e.expiresOn,!1):"",Td(t.accountName,e.containerName,e.blobName),t.userDelegationKey.signedObjectId,t.userDelegationKey.signedTenantId,t.userDelegationKey.signedStartsOn?ja(t.userDelegationKey.signedStartsOn,!1):"",t.userDelegationKey.signedExpiresOn?ja(t.userDelegationKey.signedExpiresOn,!1):"",t.userDelegationKey.signedService,t.userDelegationKey.signedVersion,e.ipRange?zd(e.ipRange):"",e.protocol?e.protocol:"",e.version,r,i,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType].join("\n"),s=t.computeHMACSHA256(n);return{sasQueryParameters:new Od(e.version,s,a,void 0,void 0,e.protocol,e.startsOn,e.expiresOn,e.ipRange,e.identifier,r,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType,t.userDelegationKey),stringToSign:n}}(e,n);if(r>="2015-04-05"){if(void 0!==i)return function(e,t){if(!((e=Id(e)).identifier||e.permissions&&e.expiresOn))throw new RangeError("Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.");let a,r="c";e.blobName&&(r="b"),e.permissions&&(a=e.blobName?vd.parse(e.permissions.toString()).toString():Cd.parse(e.permissions.toString()).toString());const i=[a||"",e.startsOn?ja(e.startsOn,!1):"",e.expiresOn?ja(e.expiresOn,!1):"",Td(t.accountName,e.containerName,e.blobName),e.identifier,e.ipRange?zd(e.ipRange):"",e.protocol?e.protocol:"",e.version,e.cacheControl?e.cacheControl:"",e.contentDisposition?e.contentDisposition:"",e.contentEncoding?e.contentEncoding:"",e.contentLanguage?e.contentLanguage:"",e.contentType?e.contentType:""].join("\n"),n=t.computeHMACSHA256(i);return{sasQueryParameters:new Od(e.version,n,a,void 0,void 0,e.protocol,e.startsOn,e.expiresOn,e.ipRange,e.identifier,r,e.cacheControl,e.contentDisposition,e.contentEncoding,e.contentLanguage,e.contentType),stringToSign:i}}(e,i);throw new RangeError("'version' must be >= '2018-11-09' when generating user delegation SAS using user delegation key.")}throw new RangeError("'version' must be >= '2015-04-05'.")}function Td(e,t,a){const r=[`/blob/${e}/${t}`];return a&&r.push(`/${a}`),r.join("")}function Id(e){const t=e.version?e.version:ya;if(e.snapshotTime&&t<"2018-11-09")throw RangeError("'version' must be >= '2018-11-09' when providing 'snapshotTime'.");if(void 0===e.blobName&&e.snapshotTime)throw RangeError("Must provide 'blobName' when providing 'snapshotTime'.");if(e.versionId&&t<"2019-10-10")throw RangeError("'version' must be >= '2019-10-10' when providing 'versionId'.");if(void 0===e.blobName&&e.versionId)throw RangeError("Must provide 'blobName' when providing 'versionId'.");if(e.permissions&&e.permissions.setImmutabilityPolicy&&t<"2020-08-04")throw RangeError("'version' must be >= '2020-08-04' when provided 'i' permission.");if(e.permissions&&e.permissions.deleteVersion&&t<"2019-10-10")throw RangeError("'version' must be >= '2019-10-10' when providing 'x' permission.");if(e.permissions&&e.permissions.permanentDelete&&t<"2019-10-10")throw RangeError("'version' must be >= '2019-10-10' when providing 'y' permission.");if(e.permissions&&e.permissions.tag&&t<"2019-12-12")throw RangeError("'version' must be >= '2019-12-12' when providing 't' permission.");if(t<"2020-02-10"&&e.permissions&&(e.permissions.move||e.permissions.execute))throw RangeError("'version' must be >= '2020-02-10' when providing the 'm' or 'e' permission.");if(t<"2021-04-10"&&e.permissions&&e.permissions.filterByTags)throw RangeError("'version' must be >= '2021-04-10' when providing the 'f' permission.");if(t<"2020-02-10"&&(e.preauthorizedAgentObjectId||e.correlationId))throw RangeError("'version' must be >= '2020-02-10' when providing 'preauthorizedAgentObjectId' or 'correlationId'.");if(e.encryptionScope&&t<"2020-12-06")throw RangeError("'version' must be >= '2020-12-06' when provided 'encryptionScope' in SAS.");return e.version=t,e}class Ad{get leaseId(){return this._leaseId}get url(){return this._url}constructor(e,t){const a=e.storageClientContext;this._url=e.url,void 0===e.name?(this._isContainer=!0,this._containerOrBlobOperation=a.container):(this._isContainer=!1,this._containerOrBlobOperation=a.blob),t||(t=U()),this._leaseId=t}async acquireLease(e,t={}){var a,r,i,n,s;if(this._isContainer&&((null===(a=t.conditions)||void 0===a?void 0:a.ifMatch)&&(null===(r=t.conditions)||void 0===r?void 0:r.ifMatch)!==za||(null===(i=t.conditions)||void 0===i?void 0:i.ifNoneMatch)&&(null===(n=t.conditions)||void 0===n?void 0:n.ifNoneMatch)!==za||(null===(s=t.conditions)||void 0===s?void 0:s.tagConditions)))throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");return Sd.withSpan("BlobLeaseClient-acquireLease",t,(async a=>{var r;return ar(await this._containerOrBlobOperation.acquireLease({abortSignal:t.abortSignal,duration:e,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),proposedLeaseId:this._leaseId,tracingOptions:a.tracingOptions}))}))}async changeLease(e,t={}){var a,r,i,n,s;if(this._isContainer&&((null===(a=t.conditions)||void 0===a?void 0:a.ifMatch)&&(null===(r=t.conditions)||void 0===r?void 0:r.ifMatch)!==za||(null===(i=t.conditions)||void 0===i?void 0:i.ifNoneMatch)&&(null===(n=t.conditions)||void 0===n?void 0:n.ifNoneMatch)!==za||(null===(s=t.conditions)||void 0===s?void 0:s.tagConditions)))throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");return Sd.withSpan("BlobLeaseClient-changeLease",t,(async a=>{var r;const i=ar(await this._containerOrBlobOperation.changeLease(this._leaseId,e,{abortSignal:t.abortSignal,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),tracingOptions:a.tracingOptions}));return this._leaseId=e,i}))}async releaseLease(e={}){var t,a,r,i,n;if(this._isContainer&&((null===(t=e.conditions)||void 0===t?void 0:t.ifMatch)&&(null===(a=e.conditions)||void 0===a?void 0:a.ifMatch)!==za||(null===(r=e.conditions)||void 0===r?void 0:r.ifNoneMatch)&&(null===(i=e.conditions)||void 0===i?void 0:i.ifNoneMatch)!==za||(null===(n=e.conditions)||void 0===n?void 0:n.tagConditions)))throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");return Sd.withSpan("BlobLeaseClient-releaseLease",e,(async t=>{var a;return ar(await this._containerOrBlobOperation.releaseLease(this._leaseId,{abortSignal:e.abortSignal,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(a=e.conditions)||void 0===a?void 0:a.tagConditions}),tracingOptions:t.tracingOptions}))}))}async renewLease(e={}){var t,a,r,i,n;if(this._isContainer&&((null===(t=e.conditions)||void 0===t?void 0:t.ifMatch)&&(null===(a=e.conditions)||void 0===a?void 0:a.ifMatch)!==za||(null===(r=e.conditions)||void 0===r?void 0:r.ifNoneMatch)&&(null===(i=e.conditions)||void 0===i?void 0:i.ifNoneMatch)!==za||(null===(n=e.conditions)||void 0===n?void 0:n.tagConditions)))throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");return Sd.withSpan("BlobLeaseClient-renewLease",e,(async t=>{var a;return this._containerOrBlobOperation.renewLease(this._leaseId,{abortSignal:e.abortSignal,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(a=e.conditions)||void 0===a?void 0:a.tagConditions}),tracingOptions:t.tracingOptions})}))}async breakLease(e,t={}){var a,r,i,n,s;if(this._isContainer&&((null===(a=t.conditions)||void 0===a?void 0:a.ifMatch)&&(null===(r=t.conditions)||void 0===r?void 0:r.ifMatch)!==za||(null===(i=t.conditions)||void 0===i?void 0:i.ifNoneMatch)&&(null===(n=t.conditions)||void 0===n?void 0:n.ifNoneMatch)!==za||(null===(s=t.conditions)||void 0===s?void 0:s.tagConditions)))throw new RangeError("The IfMatch, IfNoneMatch and tags access conditions are ignored by the service. Values other than undefined or their default values are not acceptable.");return Sd.withSpan("BlobLeaseClient-breakLease",t,(async a=>{var r;const i={abortSignal:t.abortSignal,breakPeriod:e,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),tracingOptions:a.tracingOptions};return ar(await this._containerOrBlobOperation.breakLease(i))}))}}class Hd{get acceptRanges(){return this.originalResponse.acceptRanges}get cacheControl(){return this.originalResponse.cacheControl}get contentDisposition(){return this.originalResponse.contentDisposition}get contentEncoding(){return this.originalResponse.contentEncoding}get contentLanguage(){return this.originalResponse.contentLanguage}get blobSequenceNumber(){return this.originalResponse.blobSequenceNumber}get blobType(){return this.originalResponse.blobType}get contentLength(){return this.originalResponse.contentLength}get contentMD5(){return this.originalResponse.contentMD5}get contentRange(){return this.originalResponse.contentRange}get contentType(){return this.originalResponse.contentType}get copyCompletedOn(){}get copyId(){return this.originalResponse.copyId}get copyProgress(){return this.originalResponse.copyProgress}get copySource(){return this.originalResponse.copySource}get copyStatus(){return this.originalResponse.copyStatus}get copyStatusDescription(){return this.originalResponse.copyStatusDescription}get leaseDuration(){return this.originalResponse.leaseDuration}get leaseState(){return this.originalResponse.leaseState}get leaseStatus(){return this.originalResponse.leaseStatus}get date(){return this.originalResponse.date}get blobCommittedBlockCount(){return this.originalResponse.blobCommittedBlockCount}get etag(){return this.originalResponse.etag}get errorCode(){return this.originalResponse.errorCode}get isServerEncrypted(){return this.originalResponse.isServerEncrypted}get blobContentMD5(){return this.originalResponse.blobContentMD5}get lastModified(){return this.originalResponse.lastModified}get metadata(){return this.originalResponse.metadata}get requestId(){return this.originalResponse.requestId}get clientRequestId(){return this.originalResponse.clientRequestId}get version(){return this.originalResponse.version}get encryptionKeySha256(){return this.originalResponse.encryptionKeySha256}get contentCrc64(){return this.originalResponse.contentCrc64}get blobBody(){throw Error("Quick query in browser is not supported yet.")}get readableStreamBody(){}get _response(){return this.originalResponse._response}constructor(e,t={}){this.originalResponse=e}}function Dd(e){if(void 0!==e)return e}function kd(e,t){if(e&&!t)throw new RangeError("Customer-provided encryption key must be used over HTTPS.");e&&!e.encryptionAlgorithm&&(e.encryptionAlgorithm="AES256")}function Ld(e){const t=(e._response.parsedBody.pageRange||[]).map((e=>({offset:e.start,count:e.end-e.start}))),a=(e._response.parsedBody.clearRange||[]).map((e=>({offset:e.start,count:e.end-e.start})));return Object.assign(Object.assign({},e),{pageRange:t,clearRange:a,_response:Object.assign(Object.assign({},e._response),{parsedBody:{pageRange:t,clearRange:a}})})}!function(e){e.Hot="Hot",e.Cool="Cool",e.Cold="Cold",e.Archive="Archive"}(Rd||(Rd={})),function(e){e.P4="P4",e.P6="P6",e.P10="P10",e.P15="P15",e.P20="P20",e.P30="P30",e.P40="P40",e.P50="P50",e.P60="P60",e.P70="P70",e.P80="P80"}(qd||(qd={})),function(e){e.StorageOAuthScopes="https://storage.azure.com/.default",e.DiskComputeOAuthScopes="https://disk.compute.azure.com/.default"}(Bd||(Bd={})),z("core-lro");class jd extends Error{constructor(e){super(e),this.name="PollerStoppedError",Object.setPrototypeOf(this,jd.prototype)}}class Ud extends Error{constructor(e){super(e),this.name="PollerCancelledError",Object.setPrototypeOf(this,Ud.prototype)}}class _d{constructor(e){this.resolveOnUnsuccessful=!1,this.stopped=!0,this.pollProgressCallbacks=[],this.operation=e,this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t})),this.promise.catch((()=>{}))}async startPolling(e={}){for(this.stopped&&(this.stopped=!1);!this.isStopped()&&!this.isDone();)await this.poll(e),await this.delay()}async pollOnce(e={}){this.isDone()||(this.operation=await this.operation.update({abortSignal:e.abortSignal,fireProgress:this.fireProgress.bind(this)})),this.processUpdatedState()}fireProgress(e){for(const t of this.pollProgressCallbacks)t(e)}async cancelOnce(e={}){this.operation=await this.operation.cancel(e)}poll(e={}){if(!this.pollOncePromise){this.pollOncePromise=this.pollOnce(e);const t=()=>{this.pollOncePromise=void 0};this.pollOncePromise.then(t,t).catch(this.reject)}return this.pollOncePromise}processUpdatedState(){if(this.operation.state.error&&(this.stopped=!0,!this.resolveOnUnsuccessful))throw this.reject(this.operation.state.error),this.operation.state.error;if(this.operation.state.isCancelled&&(this.stopped=!0,!this.resolveOnUnsuccessful)){const e=new Ud("Operation was canceled");throw this.reject(e),e}this.isDone()&&this.resolve&&this.resolve(this.getResult())}async pollUntilDone(e={}){return this.stopped&&this.startPolling(e).catch(this.reject),this.processUpdatedState(),this.promise}onProgress(e){return this.pollProgressCallbacks.push(e),()=>{this.pollProgressCallbacks=this.pollProgressCallbacks.filter((t=>t!==e))}}isDone(){const e=this.operation.state;return Boolean(e.isCompleted||e.isCancelled||e.error)}stopPolling(){this.stopped||(this.stopped=!0,this.reject&&this.reject(new jd("This poller is already stopped")))}isStopped(){return this.stopped}cancelOperation(e={}){if(this.cancelPromise){if(e.abortSignal)throw new Error("A cancel request is currently pending")}else this.cancelPromise=this.cancelOnce(e);return this.cancelPromise}getOperationState(){return this.operation.state}getResult(){return this.operation.state.result}toString(){return this.operation.toString()}}class $d extends _d{constructor(e){const{blobClient:t,copySource:a,intervalInMs:r=15e3,onProgress:i,resumeFrom:n,startCopyFromURLOptions:s}=e;let o;n&&(o=JSON.parse(n).state),super(Gd(Object.assign(Object.assign({},o),{blobClient:t,copySource:a,startCopyFromURLOptions:s}))),"function"==typeof i&&this.onProgress(i),this.intervalInMs=r}delay(){return M(this.intervalInMs)}}const Fd=async function(e={}){const t=this.state,{copyId:a}=t;return t.isCompleted?Gd(t):a?(await t.blobClient.abortCopyFromURL(a,{abortSignal:e.abortSignal}),t.isCancelled=!0,Gd(t)):(t.isCancelled=!0,Gd(t))},Vd=async function(e={}){const t=this.state,{blobClient:a,copySource:r,startCopyFromURLOptions:i}=t;if(t.isStarted){if(!t.isCompleted)try{const a=await t.blobClient.getProperties({abortSignal:e.abortSignal}),{copyStatus:r,copyProgress:i}=a,n=t.copyProgress;i&&(t.copyProgress=i),"pending"===r&&i!==n&&"function"==typeof e.fireProgress?e.fireProgress(t):"success"===r?(t.result=a,t.isCompleted=!0):"failed"===r&&(t.error=new Error(`Blob copy failed with reason: "${a.copyStatusDescription||"unknown"}"`),t.isCompleted=!0)}catch(e){t.error=e,t.isCompleted=!0}}else{t.isStarted=!0;const e=await a.startCopyFromURL(r,i);t.copyId=e.copyId,"success"===e.copyStatus&&(t.result=e,t.isCompleted=!0)}return Gd(t)},Kd=function(){return JSON.stringify({state:this.state},((e,t)=>{if("blobClient"!==e)return t}))};function Gd(e){return{state:Object.assign({},e),cancel:Fd,toString:Kd,update:Vd}}function Xd(e){if(e.offset<0)throw new RangeError("Range.offset cannot be smaller than 0.");if(e.count&&e.count<=0)throw new RangeError("Range.count must be larger than 0. Leave it undefined if you want a range from offset to the end.");return e.count?`bytes=${e.offset}-${e.offset+e.count-1}`:`bytes=${e.offset}-`}var Wd,Qd=a(7);!function(e){e[e.Good=0]="Good",e[e.Error=1]="Error"}(Wd||(Wd={}));class Jd{constructor(e=5){if(this.actives=0,this.completed=0,this.offset=0,this.operations=[],this.state=Wd.Good,e<1)throw new RangeError("concurrency must be larger than 0");this.concurrency=e,this.emitter=new Qd.EventEmitter}addOperation(e){this.operations.push((async()=>{try{this.actives++,await e(),this.actives--,this.completed++,this.parallelExecute()}catch(e){this.emitter.emit("error",e)}}))}async do(){return 0===this.operations.length?Promise.resolve():(this.parallelExecute(),new Promise(((e,t)=>{this.emitter.on("finish",e),this.emitter.on("error",(e=>{this.state=Wd.Error,t(e)}))})))}nextOperation(){return this.offset<this.operations.length?this.operations[this.offset++]:null}parallelExecute(){if(this.state!==Wd.Error)if(this.completed>=this.operations.length)this.emitter.emit("finish");else for(;this.actives<this.concurrency;){const e=this.nextOperation();if(!e)return;e()}}}class Zd{}class Yd extends fd{get name(){return this._name}get containerName(){return this._containerName}constructor(e,t,a,r){let i,n;if(r=r||{},fr(t))n=e,i=t;else if(G&&t instanceof mr||t instanceof pr||tt(t))n=e,i=vr(t,r=a);else if(t||"string"==typeof t){if(!t||"string"!=typeof t||!a||"string"!=typeof a)throw new Error("Expecting non-empty strings for containerName and blobName parameters");{const s=t,o=a,m=Ma(e);if("AccountConnString"===m.kind){if(!G)throw new Error("Account connection string is only supported in Node.js environment");{const e=new mr(m.accountName,m.accountKey);n=Ta(Ta(m.url,encodeURIComponent(s)),encodeURIComponent(o)),r.proxyOptions||(r.proxyOptions=Re(m.proxyUri)),i=vr(e,r)}}else{if("SASConnString"!==m.kind)throw new Error("Connection string must be either an Account connection string or a SAS connection string");n=Ta(Ta(m.url,encodeURIComponent(s)),encodeURIComponent(o))+"?"+m.accountSas,i=vr(new pr,r)}}}else n=e,a&&"string"!=typeof a&&(r=a),i=vr(new pr,r);super(n,i),({blobName:this._name,containerName:this._containerName}=this.getBlobAndContainerNamesFromUrl()),this.blobContext=this.storageClientContext.blob,this._snapshot=Aa(this.url,Na),this._versionId=Aa(this.url,fa)}withSnapshot(e){return new Yd(Ia(this.url,Na,0===e.length?void 0:e),this.pipeline)}withVersion(e){return new Yd(Ia(this.url,fa,0===e.length?void 0:e),this.pipeline)}getAppendBlobClient(){return new ec(this.url,this.pipeline)}getBlockBlobClient(){return new tc(this.url,this.pipeline)}getPageBlobClient(){return new ac(this.url,this.pipeline)}async download(e=0,t,a={}){return a.conditions=a.conditions||{},a.conditions=a.conditions||{},kd(a.customerProvidedKey,this.isHttps),Sd.withSpan("BlobClient-download",a,(async r=>{var i;const n=ar(await this.blobContext.download({abortSignal:a.abortSignal,leaseAccessConditions:a.conditions,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:null===(i=a.conditions)||void 0===i?void 0:i.tagConditions}),requestOptions:{onDownloadProgress:G?void 0:a.onProgress},range:0!==e||t?Xd({offset:e,count:t}):void 0,rangeGetContentMD5:a.rangeGetContentMD5,rangeGetContentCRC64:a.rangeGetContentCrc64,snapshot:a.snapshot,cpkInfo:a.customerProvidedKey,tracingOptions:r.tracingOptions})),s=Object.assign(Object.assign({},n),{_response:n._response,objectReplicationDestinationPolicyId:n.objectReplicationPolicyId,objectReplicationSourceProperties:Qa(n.objectReplicationRules)});if(!G)return s;if((void 0===a.maxRetryRequests||a.maxRetryRequests<0)&&(a.maxRetryRequests=5),void 0===n.contentLength)throw new RangeError("File download response doesn't contain valid content length header");if(!n.etag)throw new RangeError("File download response doesn't contain valid etag header");return new 1(s,(async t=>{var r;const i={leaseAccessConditions:a.conditions,modifiedAccessConditions:{ifMatch:a.conditions.ifMatch||n.etag,ifModifiedSince:a.conditions.ifModifiedSince,ifNoneMatch:a.conditions.ifNoneMatch,ifUnmodifiedSince:a.conditions.ifUnmodifiedSince,ifTags:null===(r=a.conditions)||void 0===r?void 0:r.tagConditions},range:Xd({count:e+n.contentLength-t,offset:t}),rangeGetContentMD5:a.rangeGetContentMD5,rangeGetContentCRC64:a.rangeGetContentCrc64,snapshot:a.snapshot,cpkInfo:a.customerProvidedKey};return(await this.blobContext.download(Object.assign({abortSignal:a.abortSignal},i))).readableStreamBody}),e,n.contentLength,{maxRetryRequests:a.maxRetryRequests,onProgress:a.onProgress})}))}async exists(e={}){return Sd.withSpan("BlobClient-exists",e,(async t=>{try{return kd(e.customerProvidedKey,this.isHttps),await this.getProperties({abortSignal:e.abortSignal,customerProvidedKey:e.customerProvidedKey,conditions:e.conditions,tracingOptions:t.tracingOptions}),!0}catch(e){if(404===e.statusCode)return!1;if(409===e.statusCode&&("BlobUsesCustomerSpecifiedEncryption"===e.details.errorCode||"BlobDoesNotUseCustomerSpecifiedEncryption"===e.details.errorCode))return!0;throw e}}))}async getProperties(e={}){return e.conditions=e.conditions||{},kd(e.customerProvidedKey,this.isHttps),Sd.withSpan("BlobClient-getProperties",e,(async t=>{var a;const r=ar(await this.blobContext.getProperties({abortSignal:e.abortSignal,leaseAccessConditions:e.conditions,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(a=e.conditions)||void 0===a?void 0:a.tagConditions}),cpkInfo:e.customerProvidedKey,tracingOptions:t.tracingOptions}));return Object.assign(Object.assign({},r),{_response:r._response,objectReplicationDestinationPolicyId:r.objectReplicationPolicyId,objectReplicationSourceProperties:Qa(r.objectReplicationRules)})}))}async delete(e={}){return e.conditions=e.conditions||{},Sd.withSpan("BlobClient-delete",e,(async t=>{var a;return ar(await this.blobContext.delete({abortSignal:e.abortSignal,deleteSnapshots:e.deleteSnapshots,leaseAccessConditions:e.conditions,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(a=e.conditions)||void 0===a?void 0:a.tagConditions}),tracingOptions:t.tracingOptions}))}))}async deleteIfExists(e={}){return Sd.withSpan("BlobClient-deleteIfExists",e,(async e=>{var t,a;try{const t=ar(await this.delete(e));return Object.assign(Object.assign({succeeded:!0},t),{_response:t._response})}catch(e){if("BlobNotFound"===(null===(t=e.details)||void 0===t?void 0:t.errorCode))return Object.assign(Object.assign({succeeded:!1},null===(a=e.response)||void 0===a?void 0:a.parsedHeaders),{_response:e.response});throw e}}))}async undelete(e={}){return Sd.withSpan("BlobClient-undelete",e,(async t=>ar(await this.blobContext.undelete({abortSignal:e.abortSignal,tracingOptions:t.tracingOptions}))))}async setHTTPHeaders(e,t={}){return t.conditions=t.conditions||{},kd(t.customerProvidedKey,this.isHttps),Sd.withSpan("BlobClient-setHTTPHeaders",t,(async a=>{var r;return ar(await this.blobContext.setHttpHeaders({abortSignal:t.abortSignal,blobHttpHeaders:e,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),tracingOptions:a.tracingOptions}))}))}async setMetadata(e,t={}){return t.conditions=t.conditions||{},kd(t.customerProvidedKey,this.isHttps),Sd.withSpan("BlobClient-setMetadata",t,(async a=>{var r;return ar(await this.blobContext.setMetadata({abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,metadata:e,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),cpkInfo:t.customerProvidedKey,encryptionScope:t.encryptionScope,tracingOptions:a.tracingOptions}))}))}async setTags(e,t={}){return Sd.withSpan("BlobClient-setTags",t,(async a=>{var r;return ar(await this.blobContext.setTags({abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),tracingOptions:a.tracingOptions,tags:Ga(e)}))}))}async getTags(e={}){return Sd.withSpan("BlobClient-getTags",e,(async t=>{var a;const r=ar(await this.blobContext.getTags({abortSignal:e.abortSignal,leaseAccessConditions:e.conditions,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(a=e.conditions)||void 0===a?void 0:a.tagConditions}),tracingOptions:t.tracingOptions}));return Object.assign(Object.assign({},r),{_response:r._response,tags:Xa({blobTagSet:r.blobTagSet})||{}})}))}getBlobLeaseClient(e){return new Ad(this,e)}async createSnapshot(e={}){return e.conditions=e.conditions||{},kd(e.customerProvidedKey,this.isHttps),Sd.withSpan("BlobClient-createSnapshot",e,(async t=>{var a;return ar(await this.blobContext.createSnapshot({abortSignal:e.abortSignal,leaseAccessConditions:e.conditions,metadata:e.metadata,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(a=e.conditions)||void 0===a?void 0:a.tagConditions}),cpkInfo:e.customerProvidedKey,encryptionScope:e.encryptionScope,tracingOptions:t.tracingOptions}))}))}async beginCopyFromURL(e,t={}){const a=new $d({blobClient:{abortCopyFromURL:(...e)=>this.abortCopyFromURL(...e),getProperties:(...e)=>this.getProperties(...e),startCopyFromURL:(...e)=>this.startCopyFromURL(...e)},copySource:e,intervalInMs:t.intervalInMs,onProgress:t.onProgress,resumeFrom:t.resumeFrom,startCopyFromURLOptions:t});return await a.poll(),a}async abortCopyFromURL(e,t={}){return Sd.withSpan("BlobClient-abortCopyFromURL",t,(async a=>ar(await this.blobContext.abortCopyFromURL(e,{abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,tracingOptions:a.tracingOptions}))))}async syncCopyFromURL(e,t={}){return t.conditions=t.conditions||{},t.sourceConditions=t.sourceConditions||{},Sd.withSpan("BlobClient-syncCopyFromURL",t,(async a=>{var r,i,n,s,o,m,l;return ar(await this.blobContext.copyFromURL(e,{abortSignal:t.abortSignal,metadata:t.metadata,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),sourceModifiedAccessConditions:{sourceIfMatch:null===(i=t.sourceConditions)||void 0===i?void 0:i.ifMatch,sourceIfModifiedSince:null===(n=t.sourceConditions)||void 0===n?void 0:n.ifModifiedSince,sourceIfNoneMatch:null===(s=t.sourceConditions)||void 0===s?void 0:s.ifNoneMatch,sourceIfUnmodifiedSince:null===(o=t.sourceConditions)||void 0===o?void 0:o.ifUnmodifiedSince},sourceContentMD5:t.sourceContentMD5,copySourceAuthorization:Ja(t.sourceAuthorization),tier:Dd(t.tier),blobTagsString:Ka(t.tags),immutabilityPolicyExpiry:null===(m=t.immutabilityPolicy)||void 0===m?void 0:m.expiriesOn,immutabilityPolicyMode:null===(l=t.immutabilityPolicy)||void 0===l?void 0:l.policyMode,legalHold:t.legalHold,encryptionScope:t.encryptionScope,copySourceTags:t.copySourceTags,tracingOptions:a.tracingOptions}))}))}async setAccessTier(e,t={}){return Sd.withSpan("BlobClient-setAccessTier",t,(async a=>{var r;return ar(await this.blobContext.setTier(Dd(e),{abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),rehydratePriority:t.rehydratePriority,tracingOptions:a.tracingOptions}))}))}async downloadToBuffer(e,t,a,r={}){var i;let n,s=0,o=0,m=r;e instanceof Buffer?(n=e,s=t||0,o="number"==typeof a?a:0):(s="number"==typeof e?e:0,o="number"==typeof t?t:0,m=a||{});let l=null!==(i=m.blockSize)&&void 0!==i?i:0;if(l<0)throw new RangeError("blockSize option must be >= 0");if(0===l&&(l=ha),s<0)throw new RangeError("offset option must be >= 0");if(o&&o<=0)throw new RangeError("count option must be greater than 0");return m.conditions||(m.conditions={}),Sd.withSpan("BlobClient-downloadToBuffer",m,(async e=>{if(!o){const t=await this.getProperties(Object.assign(Object.assign({},m),{tracingOptions:e.tracingOptions}));if(o=t.contentLength-s,o<0)throw new RangeError(`offset ${s} shouldn't be larger than blob size ${t.contentLength}`)}if(!n)try{n=Buffer.alloc(o)}catch(e){throw new Error(`Unable to allocate the buffer of size: ${o}(in bytes). Please try passing your own buffer to the "downloadToBuffer" method or try using other methods like "download" or "downloadToFile".\t ${e.message}`)}if(n.length<o)throw new RangeError(`The buffer's size should be equal to or larger than the request count of bytes: ${o}`);let t=0;const a=new Jd(m.concurrency);for(let r=s;r<s+o;r+=l)a.addOperation((async()=>{let a=s+o;r+l<a&&(a=r+l),(await this.download(r,a-r,{abortSignal:m.abortSignal,conditions:m.conditions,maxRetryRequests:m.maxRetryRequestsPerBlock,customerProvidedKey:m.customerProvidedKey,tracingOptions:e.tracingOptions})).readableStreamBody,await void 0,t+=a-r,m.onProgress&&m.onProgress({loadedBytes:t})}));return await a.do(),n}))}async downloadToFile(e,t=0,a,r={}){return Sd.withSpan("BlobClient-downloadToFile",r,(async e=>{const i=await this.download(t,a,Object.assign(Object.assign({},r),{tracingOptions:e.tracingOptions}));return i.readableStreamBody&&await void i.readableStreamBody,i.blobDownloadStream=void 0,i}))}getBlobAndContainerNamesFromUrl(){let e,t;try{const a=new URL(this.url);if("blob"===a.host.split(".")[1]){const r=a.pathname.match("/([^/]*)(/(.*))?");e=r[1],t=r[3]}else if(Va(a)){const r=a.pathname.match("/([^/]*)/([^/]*)(/(.*))?");e=r[2],t=r[4]}else{const r=a.pathname.match("/([^/]*)(/(.*))?");e=r[1],t=r[3]}if(e=decodeURIComponent(e),t=decodeURIComponent(t),t=t.replace(/\\/g,"/"),!e)throw new Error("Provided containerName is invalid.");return{blobName:t,containerName:e}}catch(e){throw new Error("Unable to extract blobName and containerName with provided information.")}}async startCopyFromURL(e,t={}){return Sd.withSpan("BlobClient-startCopyFromURL",t,(async a=>{var r,i,n;return t.conditions=t.conditions||{},t.sourceConditions=t.sourceConditions||{},ar(await this.blobContext.startCopyFromURL(e,{abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,metadata:t.metadata,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),sourceModifiedAccessConditions:{sourceIfMatch:t.sourceConditions.ifMatch,sourceIfModifiedSince:t.sourceConditions.ifModifiedSince,sourceIfNoneMatch:t.sourceConditions.ifNoneMatch,sourceIfUnmodifiedSince:t.sourceConditions.ifUnmodifiedSince,sourceIfTags:t.sourceConditions.tagConditions},immutabilityPolicyExpiry:null===(i=t.immutabilityPolicy)||void 0===i?void 0:i.expiriesOn,immutabilityPolicyMode:null===(n=t.immutabilityPolicy)||void 0===n?void 0:n.policyMode,legalHold:t.legalHold,rehydratePriority:t.rehydratePriority,tier:Dd(t.tier),blobTagsString:Ka(t.tags),sealBlob:t.sealBlob,tracingOptions:a.tracingOptions}))}))}generateSasUrl(e){return new Promise((t=>{if(!(this.credential instanceof mr))throw new RangeError("Can only generate the SAS when the client is initialized with a shared key credential");const a=Ed(Object.assign({containerName:this._containerName,blobName:this._name,snapshotTime:this._snapshot,versionId:this._versionId},e),this.credential).toString();t(La(this.url,a))}))}generateSasStringToSign(e){if(!(this.credential instanceof mr))throw new RangeError("Can only generate the SAS when the client is initialized with a shared key credential");return Md(Object.assign({containerName:this._containerName,blobName:this._name,snapshotTime:this._snapshot,versionId:this._versionId},e),this.credential).stringToSign}generateUserDelegationSasUrl(e,t){return new Promise((a=>{const r=Ed(Object.assign({containerName:this._containerName,blobName:this._name,snapshotTime:this._snapshot,versionId:this._versionId},e),t,this.accountName).toString();a(La(this.url,r))}))}generateUserDelegationSasStringToSign(e,t){return Md(Object.assign({containerName:this._containerName,blobName:this._name,snapshotTime:this._snapshot,versionId:this._versionId},e),t,this.accountName).stringToSign}async deleteImmutabilityPolicy(e={}){return Sd.withSpan("BlobClient-deleteImmutabilityPolicy",e,(async e=>ar(await this.blobContext.deleteImmutabilityPolicy({tracingOptions:e.tracingOptions}))))}async setImmutabilityPolicy(e,t={}){return Sd.withSpan("BlobClient-setImmutabilityPolicy",t,(async t=>ar(await this.blobContext.setImmutabilityPolicy({immutabilityPolicyExpiry:e.expiriesOn,immutabilityPolicyMode:e.policyMode,tracingOptions:t.tracingOptions}))))}async setLegalHold(e,t={}){return Sd.withSpan("BlobClient-setLegalHold",t,(async t=>ar(await this.blobContext.setLegalHold(e,{tracingOptions:t.tracingOptions}))))}async getAccountInfo(e={}){return Sd.withSpan("BlobClient-getAccountInfo",e,(async t=>ar(await this.blobContext.getAccountInfo({abortSignal:e.abortSignal,tracingOptions:t.tracingOptions}))))}}class ec extends Yd{constructor(e,t,a,r){let i,n;if(r=r||{},fr(t))n=e,i=t;else if(G&&t instanceof mr||t instanceof pr||tt(t))n=e,i=vr(t,r=a);else if(t||"string"==typeof t){if(!t||"string"!=typeof t||!a||"string"!=typeof a)throw new Error("Expecting non-empty strings for containerName and blobName parameters");{const s=t,o=a,m=Ma(e);if("AccountConnString"===m.kind){if(!G)throw new Error("Account connection string is only supported in Node.js environment");{const e=new mr(m.accountName,m.accountKey);n=Ta(Ta(m.url,encodeURIComponent(s)),encodeURIComponent(o)),r.proxyOptions||(r.proxyOptions=Re(m.proxyUri)),i=vr(e,r)}}else{if("SASConnString"!==m.kind)throw new Error("Connection string must be either an Account connection string or a SAS connection string");n=Ta(Ta(m.url,encodeURIComponent(s)),encodeURIComponent(o))+"?"+m.accountSas,i=vr(new pr,r)}}}else n=e,i=vr(new pr,r);super(n,i),this.appendBlobContext=this.storageClientContext.appendBlob}withSnapshot(e){return new ec(Ia(this.url,Na,0===e.length?void 0:e),this.pipeline)}async create(e={}){return e.conditions=e.conditions||{},kd(e.customerProvidedKey,this.isHttps),Sd.withSpan("AppendBlobClient-create",e,(async t=>{var a,r,i;return ar(await this.appendBlobContext.create(0,{abortSignal:e.abortSignal,blobHttpHeaders:e.blobHTTPHeaders,leaseAccessConditions:e.conditions,metadata:e.metadata,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(a=e.conditions)||void 0===a?void 0:a.tagConditions}),cpkInfo:e.customerProvidedKey,encryptionScope:e.encryptionScope,immutabilityPolicyExpiry:null===(r=e.immutabilityPolicy)||void 0===r?void 0:r.expiriesOn,immutabilityPolicyMode:null===(i=e.immutabilityPolicy)||void 0===i?void 0:i.policyMode,legalHold:e.legalHold,blobTagsString:Ka(e.tags),tracingOptions:t.tracingOptions}))}))}async createIfNotExists(e={}){const t={ifNoneMatch:"*"};return Sd.withSpan("AppendBlobClient-createIfNotExists",e,(async e=>{var a,r;try{const a=ar(await this.create(Object.assign(Object.assign({},e),{conditions:t})));return Object.assign(Object.assign({succeeded:!0},a),{_response:a._response})}catch(e){if("BlobAlreadyExists"===(null===(a=e.details)||void 0===a?void 0:a.errorCode))return Object.assign(Object.assign({succeeded:!1},null===(r=e.response)||void 0===r?void 0:r.parsedHeaders),{_response:e.response});throw e}}))}async seal(e={}){return e.conditions=e.conditions||{},Sd.withSpan("AppendBlobClient-seal",e,(async t=>{var a;return ar(await this.appendBlobContext.seal({abortSignal:e.abortSignal,appendPositionAccessConditions:e.conditions,leaseAccessConditions:e.conditions,modifiedAccessConditions:Object.assign(Object.assign({},e.conditions),{ifTags:null===(a=e.conditions)||void 0===a?void 0:a.tagConditions}),tracingOptions:t.tracingOptions}))}))}async appendBlock(e,t,a={}){return a.conditions=a.conditions||{},kd(a.customerProvidedKey,this.isHttps),Sd.withSpan("AppendBlobClient-appendBlock",a,(async r=>{var i;return ar(await this.appendBlobContext.appendBlock(t,e,{abortSignal:a.abortSignal,appendPositionAccessConditions:a.conditions,leaseAccessConditions:a.conditions,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:null===(i=a.conditions)||void 0===i?void 0:i.tagConditions}),requestOptions:{onUploadProgress:a.onProgress},transactionalContentMD5:a.transactionalContentMD5,transactionalContentCrc64:a.transactionalContentCrc64,cpkInfo:a.customerProvidedKey,encryptionScope:a.encryptionScope,tracingOptions:r.tracingOptions}))}))}async appendBlockFromURL(e,t,a,r={}){return r.conditions=r.conditions||{},r.sourceConditions=r.sourceConditions||{},kd(r.customerProvidedKey,this.isHttps),Sd.withSpan("AppendBlobClient-appendBlockFromURL",r,(async i=>{var n,s,o,m,l;return ar(await this.appendBlobContext.appendBlockFromUrl(e,0,{abortSignal:r.abortSignal,sourceRange:Xd({offset:t,count:a}),sourceContentMD5:r.sourceContentMD5,sourceContentCrc64:r.sourceContentCrc64,leaseAccessConditions:r.conditions,appendPositionAccessConditions:r.conditions,modifiedAccessConditions:Object.assign(Object.assign({},r.conditions),{ifTags:null===(n=r.conditions)||void 0===n?void 0:n.tagConditions}),sourceModifiedAccessConditions:{sourceIfMatch:null===(s=r.sourceConditions)||void 0===s?void 0:s.ifMatch,sourceIfModifiedSince:null===(o=r.sourceConditions)||void 0===o?void 0:o.ifModifiedSince,sourceIfNoneMatch:null===(m=r.sourceConditions)||void 0===m?void 0:m.ifNoneMatch,sourceIfUnmodifiedSince:null===(l=r.sourceConditions)||void 0===l?void 0:l.ifUnmodifiedSince},copySourceAuthorization:Ja(r.sourceAuthorization),cpkInfo:r.customerProvidedKey,encryptionScope:r.encryptionScope,tracingOptions:i.tracingOptions}))}))}}class tc extends Yd{constructor(e,t,a,r){let i,n;if(r=r||{},fr(t))n=e,i=t;else if(G&&t instanceof mr||t instanceof pr||tt(t))n=e,i=vr(t,r=a);else if(t||"string"==typeof t){if(!t||"string"!=typeof t||!a||"string"!=typeof a)throw new Error("Expecting non-empty strings for containerName and blobName parameters");{const s=t,o=a,m=Ma(e);if("AccountConnString"===m.kind){if(!G)throw new Error("Account connection string is only supported in Node.js environment");{const e=new mr(m.accountName,m.accountKey);n=Ta(Ta(m.url,encodeURIComponent(s)),encodeURIComponent(o)),r.proxyOptions||(r.proxyOptions=Re(m.proxyUri)),i=vr(e,r)}}else{if("SASConnString"!==m.kind)throw new Error("Connection string must be either an Account connection string or a SAS connection string");n=Ta(Ta(m.url,encodeURIComponent(s)),encodeURIComponent(o))+"?"+m.accountSas,i=vr(new pr,r)}}}else n=e,a&&"string"!=typeof a&&(r=a),i=vr(new pr,r);super(n,i),this.blockBlobContext=this.storageClientContext.blockBlob,this._blobContext=this.storageClientContext.blob}withSnapshot(e){return new tc(Ia(this.url,Na,0===e.length?void 0:e),this.pipeline)}async query(e,t={}){if(kd(t.customerProvidedKey,this.isHttps),!G)throw new Error("This operation currently is only supported in Node.js.");return Sd.withSpan("BlockBlobClient-query",t,(async a=>{var r;const i=ar(await this._blobContext.query({abortSignal:t.abortSignal,queryRequest:{queryType:"SQL",expression:e,inputSerialization:Wa(t.inputTextConfiguration),outputSerialization:Wa(t.outputTextConfiguration)},leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),cpkInfo:t.customerProvidedKey,tracingOptions:a.tracingOptions}));return new Hd(i,{abortSignal:t.abortSignal,onProgress:t.onProgress,onError:t.onError})}))}async upload(e,t,a={}){return a.conditions=a.conditions||{},kd(a.customerProvidedKey,this.isHttps),Sd.withSpan("BlockBlobClient-upload",a,(async r=>{var i,n,s;return ar(await this.blockBlobContext.upload(t,e,{abortSignal:a.abortSignal,blobHttpHeaders:a.blobHTTPHeaders,leaseAccessConditions:a.conditions,metadata:a.metadata,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:null===(i=a.conditions)||void 0===i?void 0:i.tagConditions}),requestOptions:{onUploadProgress:a.onProgress},cpkInfo:a.customerProvidedKey,encryptionScope:a.encryptionScope,immutabilityPolicyExpiry:null===(n=a.immutabilityPolicy)||void 0===n?void 0:n.expiriesOn,immutabilityPolicyMode:null===(s=a.immutabilityPolicy)||void 0===s?void 0:s.policyMode,legalHold:a.legalHold,tier:Dd(a.tier),blobTagsString:Ka(a.tags),tracingOptions:r.tracingOptions}))}))}async syncUploadFromURL(e,t={}){return t.conditions=t.conditions||{},kd(t.customerProvidedKey,this.isHttps),Sd.withSpan("BlockBlobClient-syncUploadFromURL",t,(async a=>{var r,i,n,s,o,m;return ar(await this.blockBlobContext.putBlobFromUrl(0,e,Object.assign(Object.assign({},t),{blobHttpHeaders:t.blobHTTPHeaders,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),sourceModifiedAccessConditions:{sourceIfMatch:null===(i=t.sourceConditions)||void 0===i?void 0:i.ifMatch,sourceIfModifiedSince:null===(n=t.sourceConditions)||void 0===n?void 0:n.ifModifiedSince,sourceIfNoneMatch:null===(s=t.sourceConditions)||void 0===s?void 0:s.ifNoneMatch,sourceIfUnmodifiedSince:null===(o=t.sourceConditions)||void 0===o?void 0:o.ifUnmodifiedSince,sourceIfTags:null===(m=t.sourceConditions)||void 0===m?void 0:m.tagConditions},cpkInfo:t.customerProvidedKey,copySourceAuthorization:Ja(t.sourceAuthorization),tier:Dd(t.tier),blobTagsString:Ka(t.tags),copySourceTags:t.copySourceTags,tracingOptions:a.tracingOptions})))}))}async stageBlock(e,t,a,r={}){return kd(r.customerProvidedKey,this.isHttps),Sd.withSpan("BlockBlobClient-stageBlock",r,(async i=>ar(await this.blockBlobContext.stageBlock(e,a,t,{abortSignal:r.abortSignal,leaseAccessConditions:r.conditions,requestOptions:{onUploadProgress:r.onProgress},transactionalContentMD5:r.transactionalContentMD5,transactionalContentCrc64:r.transactionalContentCrc64,cpkInfo:r.customerProvidedKey,encryptionScope:r.encryptionScope,tracingOptions:i.tracingOptions}))))}async stageBlockFromURL(e,t,a=0,r,i={}){return kd(i.customerProvidedKey,this.isHttps),Sd.withSpan("BlockBlobClient-stageBlockFromURL",i,(async n=>ar(await this.blockBlobContext.stageBlockFromURL(e,0,t,{abortSignal:i.abortSignal,leaseAccessConditions:i.conditions,sourceContentMD5:i.sourceContentMD5,sourceContentCrc64:i.sourceContentCrc64,sourceRange:0!==a||r?Xd({offset:a,count:r}):void 0,cpkInfo:i.customerProvidedKey,encryptionScope:i.encryptionScope,copySourceAuthorization:Ja(i.sourceAuthorization),tracingOptions:n.tracingOptions}))))}async commitBlockList(e,t={}){return t.conditions=t.conditions||{},kd(t.customerProvidedKey,this.isHttps),Sd.withSpan("BlockBlobClient-commitBlockList",t,(async a=>{var r,i,n;return ar(await this.blockBlobContext.commitBlockList({latest:e},{abortSignal:t.abortSignal,blobHttpHeaders:t.blobHTTPHeaders,leaseAccessConditions:t.conditions,metadata:t.metadata,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),cpkInfo:t.customerProvidedKey,encryptionScope:t.encryptionScope,immutabilityPolicyExpiry:null===(i=t.immutabilityPolicy)||void 0===i?void 0:i.expiriesOn,immutabilityPolicyMode:null===(n=t.immutabilityPolicy)||void 0===n?void 0:n.policyMode,legalHold:t.legalHold,tier:Dd(t.tier),blobTagsString:Ka(t.tags),tracingOptions:a.tracingOptions}))}))}async getBlockList(e,t={}){return Sd.withSpan("BlockBlobClient-getBlockList",t,(async a=>{var r;const i=ar(await this.blockBlobContext.getBlockList(e,{abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),tracingOptions:a.tracingOptions}));return i.committedBlocks||(i.committedBlocks=[]),i.uncommittedBlocks||(i.uncommittedBlocks=[]),i}))}async uploadData(e,t={}){return Sd.withSpan("BlockBlobClient-uploadData",t,(async t=>{if(G){let a;return a=e instanceof Buffer?e:e instanceof ArrayBuffer?Buffer.from(e):Buffer.from(e.buffer,e.byteOffset,e.byteLength),this.uploadSeekableInternal(((e,t)=>a.slice(e,e+t)),a.byteLength,t)}{const a=new Blob([e]);return this.uploadSeekableInternal(((e,t)=>a.slice(e,e+t)),a.size,t)}}))}async uploadBrowserData(e,t={}){return Sd.withSpan("BlockBlobClient-uploadBrowserData",t,(async t=>{const a=new Blob([e]);return this.uploadSeekableInternal(((e,t)=>a.slice(e,e+t)),a.size,t)}))}async uploadSeekableInternal(e,t,a={}){var r,i;let n=null!==(r=a.blockSize)&&void 0!==r?r:0;if(n<0||n>4194304e3)throw new RangeError("blockSize option must be >= 0 and <= 4194304000");const s=null!==(i=a.maxSingleShotSize)&&void 0!==i?i:ga;if(s<0||s>ga)throw new RangeError("maxSingleShotSize option must be >= 0 and <= 268435456");if(0===n){if(t>2097152e8)throw new RangeError(`${t} is too larger to upload to a block blob.`);t>s&&(n=Math.ceil(t/5e4),n<ha&&(n=ha))}return a.blobHTTPHeaders||(a.blobHTTPHeaders={}),a.conditions||(a.conditions={}),Sd.withSpan("BlockBlobClient-uploadSeekableInternal",a,(async r=>{if(t<=s)return ar(await this.upload(e(0,t),t,r));const i=Math.floor((t-1)/n)+1;if(i>5e4)throw new RangeError("The buffer's size is too big or the BlockSize is too small;the number of blocks must be <= 50000");const o=[],m=U();let l=0;const d=new Jd(a.concurrency);for(let s=0;s<i;s++)d.addOperation((async()=>{const d=Ua(m,s),c=n*s,p=(s===i-1?t:c+n)-c;o.push(d),await this.stageBlock(d,e(c,p),p,{abortSignal:a.abortSignal,conditions:a.conditions,encryptionScope:a.encryptionScope,tracingOptions:r.tracingOptions}),l+=p,a.onProgress&&a.onProgress({loadedBytes:l})}));return await d.do(),this.commitBlockList(o,r)}))}async uploadFile(e,t={}){return Sd.withSpan("BlockBlobClient-uploadFile",t,(async e=>{const a=(await void 0).size;return this.uploadSeekableInternal(((e,t)=>()=>{}),a,Object.assign(Object.assign({},t),{tracingOptions:e.tracingOptions}))}))}async uploadStream(e,t=8388608,a=5,r={}){return r.blobHTTPHeaders||(r.blobHTTPHeaders={}),r.conditions||(r.conditions={}),Sd.withSpan("BlockBlobClient-uploadStream",r,(async i=>{let n=0;const s=U();let o=0;const m=[],l=new Zd(e,t,a,(async(e,t)=>{const a=Ua(s,n);m.push(a),n++,await this.stageBlock(a,e,t,{customerProvidedKey:r.customerProvidedKey,conditions:r.conditions,encryptionScope:r.encryptionScope,tracingOptions:i.tracingOptions}),o+=t,r.onProgress&&r.onProgress({loadedBytes:o})}),Math.ceil(a/4*3));return await l.do(),ar(await this.commitBlockList(m,Object.assign(Object.assign({},r),{tracingOptions:i.tracingOptions})))}))}}class ac extends Yd{constructor(e,t,a,r){let i,n;if(r=r||{},fr(t))n=e,i=t;else if(G&&t instanceof mr||t instanceof pr||tt(t))n=e,i=vr(t,r=a);else if(t||"string"==typeof t){if(!t||"string"!=typeof t||!a||"string"!=typeof a)throw new Error("Expecting non-empty strings for containerName and blobName parameters");{const s=t,o=a,m=Ma(e);if("AccountConnString"===m.kind){if(!G)throw new Error("Account connection string is only supported in Node.js environment");{const e=new mr(m.accountName,m.accountKey);n=Ta(Ta(m.url,encodeURIComponent(s)),encodeURIComponent(o)),r.proxyOptions||(r.proxyOptions=Re(m.proxyUri)),i=vr(e,r)}}else{if("SASConnString"!==m.kind)throw new Error("Connection string must be either an Account connection string or a SAS connection string");n=Ta(Ta(m.url,encodeURIComponent(s)),encodeURIComponent(o))+"?"+m.accountSas,i=vr(new pr,r)}}}else n=e,i=vr(new pr,r);super(n,i),this.pageBlobContext=this.storageClientContext.pageBlob}withSnapshot(e){return new ac(Ia(this.url,Na,0===e.length?void 0:e),this.pipeline)}async create(e,t={}){return t.conditions=t.conditions||{},kd(t.customerProvidedKey,this.isHttps),Sd.withSpan("PageBlobClient-create",t,(async a=>{var r,i,n;return ar(await this.pageBlobContext.create(0,e,{abortSignal:t.abortSignal,blobHttpHeaders:t.blobHTTPHeaders,blobSequenceNumber:t.blobSequenceNumber,leaseAccessConditions:t.conditions,metadata:t.metadata,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),cpkInfo:t.customerProvidedKey,encryptionScope:t.encryptionScope,immutabilityPolicyExpiry:null===(i=t.immutabilityPolicy)||void 0===i?void 0:i.expiriesOn,immutabilityPolicyMode:null===(n=t.immutabilityPolicy)||void 0===n?void 0:n.policyMode,legalHold:t.legalHold,tier:Dd(t.tier),blobTagsString:Ka(t.tags),tracingOptions:a.tracingOptions}))}))}async createIfNotExists(e,t={}){return Sd.withSpan("PageBlobClient-createIfNotExists",t,(async a=>{var r,i;try{const r={ifNoneMatch:"*"},i=ar(await this.create(e,Object.assign(Object.assign({},t),{conditions:r,tracingOptions:a.tracingOptions})));return Object.assign(Object.assign({succeeded:!0},i),{_response:i._response})}catch(e){if("BlobAlreadyExists"===(null===(r=e.details)||void 0===r?void 0:r.errorCode))return Object.assign(Object.assign({succeeded:!1},null===(i=e.response)||void 0===i?void 0:i.parsedHeaders),{_response:e.response});throw e}}))}async uploadPages(e,t,a,r={}){return r.conditions=r.conditions||{},kd(r.customerProvidedKey,this.isHttps),Sd.withSpan("PageBlobClient-uploadPages",r,(async i=>{var n;return ar(await this.pageBlobContext.uploadPages(a,e,{abortSignal:r.abortSignal,leaseAccessConditions:r.conditions,modifiedAccessConditions:Object.assign(Object.assign({},r.conditions),{ifTags:null===(n=r.conditions)||void 0===n?void 0:n.tagConditions}),requestOptions:{onUploadProgress:r.onProgress},range:Xd({offset:t,count:a}),sequenceNumberAccessConditions:r.conditions,transactionalContentMD5:r.transactionalContentMD5,transactionalContentCrc64:r.transactionalContentCrc64,cpkInfo:r.customerProvidedKey,encryptionScope:r.encryptionScope,tracingOptions:i.tracingOptions}))}))}async uploadPagesFromURL(e,t,a,r,i={}){return i.conditions=i.conditions||{},i.sourceConditions=i.sourceConditions||{},kd(i.customerProvidedKey,this.isHttps),Sd.withSpan("PageBlobClient-uploadPagesFromURL",i,(async n=>{var s,o,m,l,d;return ar(await this.pageBlobContext.uploadPagesFromURL(e,Xd({offset:t,count:r}),0,Xd({offset:a,count:r}),{abortSignal:i.abortSignal,sourceContentMD5:i.sourceContentMD5,sourceContentCrc64:i.sourceContentCrc64,leaseAccessConditions:i.conditions,sequenceNumberAccessConditions:i.conditions,modifiedAccessConditions:Object.assign(Object.assign({},i.conditions),{ifTags:null===(s=i.conditions)||void 0===s?void 0:s.tagConditions}),sourceModifiedAccessConditions:{sourceIfMatch:null===(o=i.sourceConditions)||void 0===o?void 0:o.ifMatch,sourceIfModifiedSince:null===(m=i.sourceConditions)||void 0===m?void 0:m.ifModifiedSince,sourceIfNoneMatch:null===(l=i.sourceConditions)||void 0===l?void 0:l.ifNoneMatch,sourceIfUnmodifiedSince:null===(d=i.sourceConditions)||void 0===d?void 0:d.ifUnmodifiedSince},cpkInfo:i.customerProvidedKey,encryptionScope:i.encryptionScope,copySourceAuthorization:Ja(i.sourceAuthorization),tracingOptions:n.tracingOptions}))}))}async clearPages(e=0,t,a={}){return a.conditions=a.conditions||{},Sd.withSpan("PageBlobClient-clearPages",a,(async r=>{var i;return ar(await this.pageBlobContext.clearPages(0,{abortSignal:a.abortSignal,leaseAccessConditions:a.conditions,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:null===(i=a.conditions)||void 0===i?void 0:i.tagConditions}),range:Xd({offset:e,count:t}),sequenceNumberAccessConditions:a.conditions,cpkInfo:a.customerProvidedKey,encryptionScope:a.encryptionScope,tracingOptions:r.tracingOptions}))}))}async getPageRanges(e=0,t,a={}){return a.conditions=a.conditions||{},Sd.withSpan("PageBlobClient-getPageRanges",a,(async r=>{var i;return Ld(ar(await this.pageBlobContext.getPageRanges({abortSignal:a.abortSignal,leaseAccessConditions:a.conditions,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:null===(i=a.conditions)||void 0===i?void 0:i.tagConditions}),range:Xd({offset:e,count:t}),tracingOptions:r.tracingOptions})))}))}async listPageRangesSegment(e=0,t,a,r={}){return Sd.withSpan("PageBlobClient-getPageRangesSegment",r,(async i=>{var n;return ar(await this.pageBlobContext.getPageRanges({abortSignal:r.abortSignal,leaseAccessConditions:r.conditions,modifiedAccessConditions:Object.assign(Object.assign({},r.conditions),{ifTags:null===(n=r.conditions)||void 0===n?void 0:n.tagConditions}),range:Xd({offset:e,count:t}),marker:a,maxPageSize:r.maxPageSize,tracingOptions:i.tracingOptions}))}))}listPageRangeItemSegments(){return Ze(this,arguments,(function*(e=0,t,a,r={}){let i;if(a||void 0===a)do{i=yield Je(this.listPageRangesSegment(e,t,a,r)),a=i.continuationToken,yield yield Je(yield Je(i))}while(a)}))}listPageRangeItems(){return Ze(this,arguments,(function*(e=0,t,a={}){var r,i,n,s;try{for(var o,m=!0,l=et(this.listPageRangeItemSegments(e,t,void 0,a));!(r=(o=yield Je(l.next())).done);m=!0){s=o.value,m=!1;const e=s;yield Je(yield*Ye(et(er(e))))}}catch(e){i={error:e}}finally{try{m||r||!(n=l.return)||(yield Je(n.call(l)))}finally{if(i)throw i.error}}}))}listPageRanges(e=0,t,a={}){a.conditions=a.conditions||{};const r=this.listPageRangeItems(e,t,a);return{next:()=>r.next(),[Symbol.asyncIterator](){return this},byPage:(r={})=>this.listPageRangeItemSegments(e,t,r.continuationToken,Object.assign({maxPageSize:r.maxPageSize},a))}}async getPageRangesDiff(e,t,a,r={}){return r.conditions=r.conditions||{},Sd.withSpan("PageBlobClient-getPageRangesDiff",r,(async i=>{var n;return Ld(ar(await this.pageBlobContext.getPageRangesDiff({abortSignal:r.abortSignal,leaseAccessConditions:r.conditions,modifiedAccessConditions:Object.assign(Object.assign({},r.conditions),{ifTags:null===(n=r.conditions)||void 0===n?void 0:n.tagConditions}),prevsnapshot:a,range:Xd({offset:e,count:t}),tracingOptions:i.tracingOptions})))}))}async listPageRangesDiffSegment(e,t,a,r,i={}){return Sd.withSpan("PageBlobClient-getPageRangesDiffSegment",i,(async n=>{var s;return ar(await this.pageBlobContext.getPageRangesDiff({abortSignal:null==i?void 0:i.abortSignal,leaseAccessConditions:null==i?void 0:i.conditions,modifiedAccessConditions:Object.assign(Object.assign({},null==i?void 0:i.conditions),{ifTags:null===(s=null==i?void 0:i.conditions)||void 0===s?void 0:s.tagConditions}),prevsnapshot:a,range:Xd({offset:e,count:t}),marker:r,maxPageSize:null==i?void 0:i.maxPageSize,tracingOptions:n.tracingOptions}))}))}listPageRangeDiffItemSegments(e,t,a,r,i){return Ze(this,arguments,(function*(){let n;if(r||void 0===r)do{n=yield Je(this.listPageRangesDiffSegment(e,t,a,r,i)),r=n.continuationToken,yield yield Je(yield Je(n))}while(r)}))}listPageRangeDiffItems(e,t,a,r){return Ze(this,arguments,(function*(){var i,n,s,o;try{for(var m,l=!0,d=et(this.listPageRangeDiffItemSegments(e,t,a,void 0,r));!(i=(m=yield Je(d.next())).done);l=!0){o=m.value,l=!1;const e=o;yield Je(yield*Ye(et(er(e))))}}catch(e){n={error:e}}finally{try{l||i||!(s=d.return)||(yield Je(s.call(d)))}finally{if(n)throw n.error}}}))}listPageRangesDiff(e,t,a,r={}){r.conditions=r.conditions||{};const i=this.listPageRangeDiffItems(e,t,a,Object.assign({},r));return{next:()=>i.next(),[Symbol.asyncIterator](){return this},byPage:(i={})=>this.listPageRangeDiffItemSegments(e,t,a,i.continuationToken,Object.assign({maxPageSize:i.maxPageSize},r))}}async getPageRangesDiffForManagedDisks(e,t,a,r={}){return r.conditions=r.conditions||{},Sd.withSpan("PageBlobClient-GetPageRangesDiffForManagedDisks",r,(async i=>{var n;return Ld(ar(await this.pageBlobContext.getPageRangesDiff({abortSignal:r.abortSignal,leaseAccessConditions:r.conditions,modifiedAccessConditions:Object.assign(Object.assign({},r.conditions),{ifTags:null===(n=r.conditions)||void 0===n?void 0:n.tagConditions}),prevSnapshotUrl:a,range:Xd({offset:e,count:t}),tracingOptions:i.tracingOptions})))}))}async resize(e,t={}){return t.conditions=t.conditions||{},Sd.withSpan("PageBlobClient-resize",t,(async a=>{var r;return ar(await this.pageBlobContext.resize(e,{abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),encryptionScope:t.encryptionScope,tracingOptions:a.tracingOptions}))}))}async updateSequenceNumber(e,t,a={}){return a.conditions=a.conditions||{},Sd.withSpan("PageBlobClient-updateSequenceNumber",a,(async r=>{var i;return ar(await this.pageBlobContext.updateSequenceNumber(e,{abortSignal:a.abortSignal,blobSequenceNumber:t,leaseAccessConditions:a.conditions,modifiedAccessConditions:Object.assign(Object.assign({},a.conditions),{ifTags:null===(i=a.conditions)||void 0===i?void 0:i.tagConditions}),tracingOptions:r.tracingOptions}))}))}async startCopyIncremental(e,t={}){return Sd.withSpan("PageBlobClient-startCopyIncremental",t,(async a=>{var r;return ar(await this.pageBlobContext.copyIncremental(e,{abortSignal:t.abortSignal,modifiedAccessConditions:Object.assign(Object.assign({},t.conditions),{ifTags:null===(r=t.conditions)||void 0===r?void 0:r.tagConditions}),tracingOptions:a.tracingOptions}))}))}}const rc=": ";class ic{constructor(e,t){if(!e||!e.contentType)throw new RangeError("batchResponse is malformed or doesn't contain valid content-type.");if(!t||0===t.size)throw new RangeError("Invalid state: subRequests is not provided or size is 0.");this.batchResponse=e,this.subRequests=t,this.responseBatchBoundary=this.batchResponse.contentType.split("=")[1],this.perResponsePrefix=`--${this.responseBatchBoundary}${wa}`,this.batchResponseEnding=`--${this.responseBatchBoundary}--`}async parseBatchResponse(){if(202!==this.batchResponse._response.status)throw new Error(`Invalid state: batch request failed with status: '${this.batchResponse._response.status}'.`);const e=(await async function(e){return async function(e){const t=new FileReader;return new Promise(((a,r)=>{t.onloadend=e=>{a(e.target.result)},t.onerror=r,t.readAsText(e)}))}(await e.blobBody)}(this.batchResponse)).split(this.batchResponseEnding)[0].split(this.perResponsePrefix).slice(1),t=e.length;if(t!==this.subRequests.size&&1!==t)throw new Error("Invalid state: sub responses' count is not equal to sub requests' count.");const a=new Array(t);let r=0,i=0;for(let n=0;n<t;n++){const t=e[n],s={};s.headers=Ft(ze());const o=t.split(`${wa}`);let m=!1,l=!1,d=!1,c=-1;for(const e of o)if(m)if(""!==e.trim())if(l)s.bodyAsText||(s.bodyAsText=""),s.bodyAsText+=e;else{if(-1===e.indexOf(rc))throw new Error(`Invalid state: find non-empty line '${e}' without HTTP header delimiter '${rc}'.`);const t=e.split(rc);s.headers.set(t[0],t[1]),"x-ms-error-code"===t[0]&&(s.errorCode=t[1],d=!0)}else l||(l=!0);else if(e.startsWith(va)&&(c=parseInt(e.split(rc)[1])),e.startsWith(Ra)){m=!0;const t=e.split(" ");s.status=parseInt(t[1]),s.statusMessage=t.slice(2).join(" ")}-1!==c&&Number.isInteger(c)&&c>=0&&c<this.subRequests.size&&void 0===a[c]?(s._request=this.subRequests.get(c),a[c]=s):ca.error(`subResponses[${n}] is dropped as the Content-ID is not found or invalid, Content-ID: ${c}`),d?i++:r++}return{subResponses:a,subResponsesSucceededCount:r,subResponsesFailedCount:i}}}var nc,sc;!function(e){e[e.LOCKED=0]="LOCKED",e[e.UNLOCKED=1]="UNLOCKED"}(nc||(nc={}));class oc{static async lock(e){return new Promise((t=>{void 0===this.keys[e]||this.keys[e]===nc.UNLOCKED?(this.keys[e]=nc.LOCKED,t()):this.onUnlockEvent(e,(()=>{this.keys[e]=nc.LOCKED,t()}))}))}static async unlock(e){return new Promise((t=>{this.keys[e]===nc.LOCKED&&this.emitUnlockEvent(e),delete this.keys[e],t()}))}static onUnlockEvent(e,t){void 0===this.listeners[e]?this.listeners[e]=[t]:this.listeners[e].push(t)}static emitUnlockEvent(e){if(void 0!==this.listeners[e]&&this.listeners[e].length>0){const t=this.listeners[e].shift();setImmediate((()=>{t.call(this)}))}}}oc.keys={},oc.listeners={};class mc{constructor(){this.batch="batch",this.batchRequest=new lc}getMultiPartContentType(){return this.batchRequest.getMultipartContentType()}getHttpRequestBody(){return this.batchRequest.getHttpRequestBody()}getSubRequests(){return this.batchRequest.getSubRequests()}async addSubRequestInternal(e,t){await oc.lock(this.batch);try{this.batchRequest.preAddSubRequest(e),await t(),this.batchRequest.postAddSubRequest(e)}finally{await oc.unlock(this.batch)}}setBatchType(e){if(this.batchType||(this.batchType=e),this.batchType!==e)throw new RangeError(`BlobBatch only supports one operation type per batch and it already is being used for ${this.batchType} operations.`)}async deleteBlob(e,t,a){let r,i;if("string"==typeof e&&(G&&t instanceof mr||t instanceof pr||tt(t)))r=e,i=t;else{if(!(e instanceof Yd))throw new RangeError("Invalid arguments. Either url and credential, or BlobClient need be provided.");r=e.url,i=e.credential,a=t}return a||(a={}),Sd.withSpan("BatchDeleteRequest-addSubRequest",a,(async e=>{this.setBatchType("delete"),await this.addSubRequestInternal({url:r,credential:i},(async()=>{await new Yd(r,this.batchRequest.createPipeline(i)).delete(e)}))}))}async setBlobAccessTier(e,t,a,r){let i,n,s;if("string"==typeof e&&(G&&t instanceof mr||t instanceof pr||tt(t)))i=e,n=t,s=a;else{if(!(e instanceof Yd))throw new RangeError("Invalid arguments. Either url and credential, or BlobClient need be provided.");i=e.url,n=e.credential,s=t,r=a}return r||(r={}),Sd.withSpan("BatchSetTierRequest-addSubRequest",r,(async e=>{this.setBatchType("setAccessTier"),await this.addSubRequestInternal({url:i,credential:n},(async()=>{await new Yd(i,this.batchRequest.createPipeline(n)).setAccessTier(s,e)}))}))}}class lc{constructor(){this.operationCount=0,this.body="";const e=U();this.boundary=`batch_${e}`,this.subRequestPrefix=`--${this.boundary}${wa}Content-Type: application/http${wa}Content-Transfer-Encoding: binary`,this.multipartContentType=`multipart/mixed; boundary=${this.boundary}`,this.batchRequestEnding=`--${this.boundary}--`,this.subRequests=new Map}createPipeline(e){const t=s();var a;t.addPolicy(Ot({stringifyXML:ma,serializerOptions:{xml:{xmlCharKey:"#"}}}),{phase:"Serialize"}),t.addPolicy({name:"batchHeaderFilterPolicy",async sendRequest(e,t){let a="";for(const[t]of e.headers)$a(t,"x-ms-version")&&(a=t);return""!==a&&e.headers.delete(a),t(e)}}),t.addPolicy((a=this,{name:"batchRequestAssemblePolicy",sendRequest:async e=>(a.appendSubRequestToBody(e),{request:e,status:200,headers:ze()})}),{afterPhase:"Sign"}),tt(e)?t.addPolicy(We({credential:e,scopes:xa,challengeCallbacks:{authorizeRequestOnChallenge:Lt}}),{phase:"Sign"}):e instanceof mr&&t.addPolicy((e.accountName,e.accountKey,{name:"storageSharedKeyCredentialPolicy",sendRequest:async(e,t)=>t(e)}),{phase:"Sign"});const r=new Sr([]);return r._credential=e,r._corePipeline=t,r}appendSubRequestToBody(e){this.body+=[this.subRequestPrefix,`${va}: ${this.operationCount}`,"",`${e.method.toString()} ${ka(e.url)} ${Ra}${wa}`].join(wa);for(const[t,a]of e.headers)this.body+=`${t}: ${a}${wa}`;this.body+=wa}preAddSubRequest(e){if(this.operationCount>=256)throw new RangeError("Cannot exceed 256 sub requests in a single batch");const t=Da(e.url);if(!t||""===t)throw new RangeError(`Invalid url for sub request: '${e.url}'`)}postAddSubRequest(e){this.subRequests.set(this.operationCount,e),this.operationCount++}getHttpRequestBody(){return`${this.body}${this.batchRequestEnding}${wa}`}getMultipartContentType(){return this.multipartContentType}getSubRequests(){return this.subRequests}}class dc{constructor(e,t,a){let r;r=fr(t)?t:vr(t||new pr,a);const i=new Nd(e,Cr(r)),n=Da(e);this.serviceOrContainerContext=n&&"/"!==n?i.container:i.service}createBatch(){return new mc}async deleteBlobs(e,t,a){const r=new mc;for(const i of e)"string"==typeof i?await r.deleteBlob(i,t,a):await r.deleteBlob(i,t);return this.submitBatch(r)}async setBlobsAccessTier(e,t,a,r){const i=new mc;for(const n of e)"string"==typeof n?await i.setBlobAccessTier(n,t,a,r):await i.setBlobAccessTier(n,t,a);return this.submitBatch(i)}async submitBatch(e,t={}){if(!e||0===e.getSubRequests().size)throw new RangeError("Batch request should contain one or more sub requests.");return Sd.withSpan("BlobBatchClient-submitBatch",t,(async t=>{const a=e.getHttpRequestBody(),r=ar(await this.serviceOrContainerContext.submitBatch((i=a,new Blob([i]).size),e.getMultiPartContentType(),a,Object.assign({},t)));var i;const n=new ic(r,e.getSubRequests()),s=await n.parseBatchResponse();return{_response:r._response,contentType:r.contentType,errorCode:r.errorCode,requestId:r.requestId,clientRequestId:r.clientRequestId,version:r.version,subResponses:s.subResponses,subResponsesSucceededCount:s.subResponsesSucceededCount,subResponsesFailedCount:s.subResponsesFailedCount}}))}}class cc extends fd{get containerName(){return this._containerName}constructor(e,t,a){let r,i;if(a=a||{},fr(t))i=e,r=t;else if(G&&t instanceof mr||t instanceof pr||tt(t))i=e,r=vr(t,a);else if(t||"string"==typeof t){if(!t||"string"!=typeof t)throw new Error("Expecting non-empty strings for containerName parameter");{const n=t,s=Ma(e);if("AccountConnString"===s.kind){if(!G)throw new Error("Account connection string is only supported in Node.js environment");{const e=new mr(s.accountName,s.accountKey);i=Ta(s.url,encodeURIComponent(n)),a.proxyOptions||(a.proxyOptions=Re(s.proxyUri)),r=vr(e,a)}}else{if("SASConnString"!==s.kind)throw new Error("Connection string must be either an Account connection string or a SAS connection string");i=Ta(s.url,encodeURIComponent(n))+"?"+s.accountSas,r=vr(new pr,a)}}}else i=e,r=vr(new pr,a);super(i,r),this._containerName=this.getContainerNameFromUrl(),this.containerContext=this.storageClientContext.container}async create(e={}){return Sd.withSpan("ContainerClient-create",e,(async e=>ar(await this.containerContext.create(e))))}async createIfNotExists(e={}){return Sd.withSpan("ContainerClient-createIfNotExists",e,(async e=>{var t,a;try{const t=await this.create(e);return Object.assign(Object.assign({succeeded:!0},t),{_response:t._response})}catch(e){if("ContainerAlreadyExists"===(null===(t=e.details)||void 0===t?void 0:t.errorCode))return Object.assign(Object.assign({succeeded:!1},null===(a=e.response)||void 0===a?void 0:a.parsedHeaders),{_response:e.response});throw e}}))}async exists(e={}){return Sd.withSpan("ContainerClient-exists",e,(async t=>{try{return await this.getProperties({abortSignal:e.abortSignal,tracingOptions:t.tracingOptions}),!0}catch(e){if(404===e.statusCode)return!1;throw e}}))}getBlobClient(e){return new Yd(Ta(this.url,tr(e)),this.pipeline)}getAppendBlobClient(e){return new ec(Ta(this.url,tr(e)),this.pipeline)}getBlockBlobClient(e){return new tc(Ta(this.url,tr(e)),this.pipeline)}getPageBlobClient(e){return new ac(Ta(this.url,tr(e)),this.pipeline)}async getProperties(e={}){return e.conditions||(e.conditions={}),Sd.withSpan("ContainerClient-getProperties",e,(async t=>ar(await this.containerContext.getProperties(Object.assign(Object.assign({abortSignal:e.abortSignal},e.conditions),{tracingOptions:t.tracingOptions})))))}async delete(e={}){return e.conditions||(e.conditions={}),Sd.withSpan("ContainerClient-delete",e,(async t=>ar(await this.containerContext.delete({abortSignal:e.abortSignal,leaseAccessConditions:e.conditions,modifiedAccessConditions:e.conditions,tracingOptions:t.tracingOptions}))))}async deleteIfExists(e={}){return Sd.withSpan("ContainerClient-deleteIfExists",e,(async e=>{var t,a;try{const t=await this.delete(e);return Object.assign(Object.assign({succeeded:!0},t),{_response:t._response})}catch(e){if("ContainerNotFound"===(null===(t=e.details)||void 0===t?void 0:t.errorCode))return Object.assign(Object.assign({succeeded:!1},null===(a=e.response)||void 0===a?void 0:a.parsedHeaders),{_response:e.response});throw e}}))}async setMetadata(e,t={}){if(t.conditions||(t.conditions={}),t.conditions.ifUnmodifiedSince)throw new RangeError("the IfUnmodifiedSince must have their default values because they are ignored by the blob service");return Sd.withSpan("ContainerClient-setMetadata",t,(async a=>ar(await this.containerContext.setMetadata({abortSignal:t.abortSignal,leaseAccessConditions:t.conditions,metadata:e,modifiedAccessConditions:t.conditions,tracingOptions:a.tracingOptions}))))}async getAccessPolicy(e={}){return e.conditions||(e.conditions={}),Sd.withSpan("ContainerClient-getAccessPolicy",e,(async t=>{const a=ar(await this.containerContext.getAccessPolicy({abortSignal:e.abortSignal,leaseAccessConditions:e.conditions,tracingOptions:t.tracingOptions})),r={_response:a._response,blobPublicAccess:a.blobPublicAccess,date:a.date,etag:a.etag,errorCode:a.errorCode,lastModified:a.lastModified,requestId:a.requestId,clientRequestId:a.clientRequestId,signedIdentifiers:[],version:a.version};for(const e of a){let t;e.accessPolicy&&(t={permissions:e.accessPolicy.permissions},e.accessPolicy.expiresOn&&(t.expiresOn=new Date(e.accessPolicy.expiresOn)),e.accessPolicy.startsOn&&(t.startsOn=new Date(e.accessPolicy.startsOn))),r.signedIdentifiers.push({accessPolicy:t,id:e.id})}return r}))}async setAccessPolicy(e,t,a={}){return a.conditions=a.conditions||{},Sd.withSpan("ContainerClient-setAccessPolicy",a,(async r=>{const i=[];for(const e of t||[])i.push({accessPolicy:{expiresOn:e.accessPolicy.expiresOn?ja(e.accessPolicy.expiresOn):"",permissions:e.accessPolicy.permissions,startsOn:e.accessPolicy.startsOn?ja(e.accessPolicy.startsOn):""},id:e.id});return ar(await this.containerContext.setAccessPolicy({abortSignal:a.abortSignal,access:e,containerAcl:i,leaseAccessConditions:a.conditions,modifiedAccessConditions:a.conditions,tracingOptions:r.tracingOptions}))}))}getBlobLeaseClient(e){return new Ad(this,e)}async uploadBlockBlob(e,t,a,r={}){return Sd.withSpan("ContainerClient-uploadBlockBlob",r,(async r=>{const i=this.getBlockBlobClient(e),n=await i.upload(t,a,r);return{blockBlobClient:i,response:n}}))}async deleteBlob(e,t={}){return Sd.withSpan("ContainerClient-deleteBlob",t,(async a=>{let r=this.getBlobClient(e);return t.versionId&&(r=r.withVersion(t.versionId)),r.delete(a)}))}async listBlobFlatSegment(e,t={}){return Sd.withSpan("ContainerClient-listBlobFlatSegment",t,(async a=>{const r=ar(await this.containerContext.listBlobFlatSegment(Object.assign(Object.assign({marker:e},t),{tracingOptions:a.tracingOptions})));var i;return Object.assign(Object.assign({},r),{_response:Object.assign(Object.assign({},r._response),{parsedBody:(i=r._response.parsedBody,Object.assign(Object.assign({},i),{segment:{blobItems:i.segment.blobItems.map((e=>Object.assign(Object.assign({},e),{name:Za(e.name)})))}}))}),segment:Object.assign(Object.assign({},r.segment),{blobItems:r.segment.blobItems.map((e=>Object.assign(Object.assign({},e),{name:Za(e.name),tags:Xa(e.blobTags),objectReplicationSourceProperties:Qa(e.objectReplicationMetadata)})))})})}))}async listBlobHierarchySegment(e,t,a={}){return Sd.withSpan("ContainerClient-listBlobHierarchySegment",a,(async r=>{var i;const n=ar(await this.containerContext.listBlobHierarchySegment(e,Object.assign(Object.assign({marker:t},a),{tracingOptions:r.tracingOptions})));return Object.assign(Object.assign({},n),{_response:Object.assign(Object.assign({},n._response),{parsedBody:Ya(n._response.parsedBody)}),segment:Object.assign(Object.assign({},n.segment),{blobItems:n.segment.blobItems.map((e=>Object.assign(Object.assign({},e),{name:Za(e.name),tags:Xa(e.blobTags),objectReplicationSourceProperties:Qa(e.objectReplicationMetadata)}))),blobPrefixes:null===(i=n.segment.blobPrefixes)||void 0===i?void 0:i.map((e=>Object.assign(Object.assign({},e),{name:Za(e.name)})))})})}))}listSegments(e){return Ze(this,arguments,(function*(e,t={}){let a;if(e||void 0===e)do{a=yield Je(this.listBlobFlatSegment(e,t)),e=a.continuationToken,yield yield Je(yield Je(a))}while(e)}))}listItems(){return Ze(this,arguments,(function*(e={}){var t,a,r,i;try{for(var n,s=!0,o=et(this.listSegments(void 0,e));!(t=(n=yield Je(o.next())).done);s=!0){i=n.value,s=!1;const e=i;yield Je(yield*Ye(et(e.segment.blobItems)))}}catch(e){a={error:e}}finally{try{s||t||!(r=o.return)||(yield Je(r.call(o)))}finally{if(a)throw a.error}}}))}listBlobsFlat(e={}){const t=[];e.includeCopy&&t.push("copy"),e.includeDeleted&&t.push("deleted"),e.includeMetadata&&t.push("metadata"),e.includeSnapshots&&t.push("snapshots"),e.includeVersions&&t.push("versions"),e.includeUncommitedBlobs&&t.push("uncommittedblobs"),e.includeTags&&t.push("tags"),e.includeDeletedWithVersions&&t.push("deletedwithversions"),e.includeImmutabilityPolicy&&t.push("immutabilitypolicy"),e.includeLegalHold&&t.push("legalhold"),""===e.prefix&&(e.prefix=void 0);const a=Object.assign(Object.assign({},e),t.length>0?{include:t}:{}),r=this.listItems(a);return{next:()=>r.next(),[Symbol.asyncIterator](){return this},byPage:(e={})=>this.listSegments(e.continuationToken,Object.assign({maxPageSize:e.maxPageSize},a))}}listHierarchySegments(e,t){return Ze(this,arguments,(function*(e,t,a={}){let r;if(t||void 0===t)do{r=yield Je(this.listBlobHierarchySegment(e,t,a)),t=r.continuationToken,yield yield Je(yield Je(r))}while(t)}))}listItemsByHierarchy(e){return Ze(this,arguments,(function*(e,t={}){var a,r,i,n;try{for(var s,o=!0,m=et(this.listHierarchySegments(e,void 0,t));!(a=(s=yield Je(m.next())).done);o=!0){n=s.value,o=!1;const e=n.segment;if(e.blobPrefixes)for(const t of e.blobPrefixes)yield yield Je(Object.assign({kind:"prefix"},t));for(const t of e.blobItems)yield yield Je(Object.assign({kind:"blob"},t))}}catch(e){r={error:e}}finally{try{o||a||!(i=m.return)||(yield Je(i.call(m)))}finally{if(r)throw r.error}}}))}listBlobsByHierarchy(e,t={}){if(""===e)throw new RangeError("delimiter should contain one or more characters");const a=[];t.includeCopy&&a.push("copy"),t.includeDeleted&&a.push("deleted"),t.includeMetadata&&a.push("metadata"),t.includeSnapshots&&a.push("snapshots"),t.includeVersions&&a.push("versions"),t.includeUncommitedBlobs&&a.push("uncommittedblobs"),t.includeTags&&a.push("tags"),t.includeDeletedWithVersions&&a.push("deletedwithversions"),t.includeImmutabilityPolicy&&a.push("immutabilitypolicy"),t.includeLegalHold&&a.push("legalhold"),""===t.prefix&&(t.prefix=void 0);const r=Object.assign(Object.assign({},t),a.length>0?{include:a}:{}),i=this.listItemsByHierarchy(e,r);return{next:async()=>i.next(),[Symbol.asyncIterator](){return this},byPage:(t={})=>this.listHierarchySegments(e,t.continuationToken,Object.assign({maxPageSize:t.maxPageSize},r))}}async findBlobsByTagsSegment(e,t,a={}){return Sd.withSpan("ContainerClient-findBlobsByTagsSegment",a,(async r=>{const i=ar(await this.containerContext.filterBlobs({abortSignal:a.abortSignal,where:e,marker:t,maxPageSize:a.maxPageSize,tracingOptions:r.tracingOptions})),n=Object.assign(Object.assign({},i),{_response:i._response,blobs:i.blobs.map((e=>{var t;let a="";return 1===(null===(t=e.tags)||void 0===t?void 0:t.blobTagSet.length)&&(a=e.tags.blobTagSet[0].value),Object.assign(Object.assign({},e),{tags:Xa(e.tags),tagValue:a})}))});return n}))}findBlobsByTagsSegments(e,t){return Ze(this,arguments,(function*(e,t,a={}){let r;if(t||void 0===t)do{r=yield Je(this.findBlobsByTagsSegment(e,t,a)),r.blobs=r.blobs||[],t=r.continuationToken,yield yield Je(r)}while(t)}))}findBlobsByTagsItems(e){return Ze(this,arguments,(function*(e,t={}){var a,r,i,n;try{for(var s,o=!0,m=et(this.findBlobsByTagsSegments(e,void 0,t));!(a=(s=yield Je(m.next())).done);o=!0){n=s.value,o=!1;const e=n;yield Je(yield*Ye(et(e.blobs)))}}catch(e){r={error:e}}finally{try{o||a||!(i=m.return)||(yield Je(i.call(m)))}finally{if(r)throw r.error}}}))}findBlobsByTags(e,t={}){const a=Object.assign({},t),r=this.findBlobsByTagsItems(e,a);return{next:()=>r.next(),[Symbol.asyncIterator](){return this},byPage:(t={})=>this.findBlobsByTagsSegments(e,t.continuationToken,Object.assign({maxPageSize:t.maxPageSize},a))}}async getAccountInfo(e={}){return Sd.withSpan("ContainerClient-getAccountInfo",e,(async t=>ar(await this.containerContext.getAccountInfo({abortSignal:e.abortSignal,tracingOptions:t.tracingOptions}))))}getContainerNameFromUrl(){let e;try{const t=new URL(this.url);if(e="blob"===t.hostname.split(".")[1]?t.pathname.split("/")[1]:Va(t)?t.pathname.split("/")[2]:t.pathname.split("/")[1],e=decodeURIComponent(e),!e)throw new Error("Provided containerName is invalid.");return e}catch(e){throw new Error("Unable to extract containerName with provided information.")}}generateSasUrl(e){return new Promise((t=>{if(!(this.credential instanceof mr))throw new RangeError("Can only generate the SAS when the client is initialized with a shared key credential");const a=Ed(Object.assign({containerName:this._containerName},e),this.credential).toString();t(La(this.url,a))}))}generateSasStringToSign(e){if(!(this.credential instanceof mr))throw new RangeError("Can only generate the SAS when the client is initialized with a shared key credential");return Md(Object.assign({containerName:this._containerName},e),this.credential).stringToSign}generateUserDelegationSasUrl(e,t){return new Promise((a=>{const r=Ed(Object.assign({containerName:this._containerName},e),t,this.accountName).toString();a(La(this.url,r))}))}generateUserDelegationSasStringToSign(e,t){return Md(Object.assign({containerName:this._containerName},e),t,this.accountName).stringToSign}getBlobBatchClient(){return new dc(this.url,this.pipeline)}}class pc{constructor(){this.read=!1,this.write=!1,this.delete=!1,this.deleteVersion=!1,this.list=!1,this.add=!1,this.create=!1,this.update=!1,this.process=!1,this.tag=!1,this.filter=!1,this.setImmutabilityPolicy=!1,this.permanentDelete=!1}static parse(e){const t=new pc;for(const a of e)switch(a){case"r":t.read=!0;break;case"w":t.write=!0;break;case"d":t.delete=!0;break;case"x":t.deleteVersion=!0;break;case"l":t.list=!0;break;case"a":t.add=!0;break;case"c":t.create=!0;break;case"u":t.update=!0;break;case"p":t.process=!0;break;case"t":t.tag=!0;break;case"f":t.filter=!0;break;case"i":t.setImmutabilityPolicy=!0;break;case"y":t.permanentDelete=!0;break;default:throw new RangeError(`Invalid permission character: ${a}`)}return t}static from(e){const t=new pc;return e.read&&(t.read=!0),e.write&&(t.write=!0),e.delete&&(t.delete=!0),e.deleteVersion&&(t.deleteVersion=!0),e.filter&&(t.filter=!0),e.tag&&(t.tag=!0),e.list&&(t.list=!0),e.add&&(t.add=!0),e.create&&(t.create=!0),e.update&&(t.update=!0),e.process&&(t.process=!0),e.setImmutabilityPolicy&&(t.setImmutabilityPolicy=!0),e.permanentDelete&&(t.permanentDelete=!0),t}toString(){const e=[];return this.read&&e.push("r"),this.write&&e.push("w"),this.delete&&e.push("d"),this.deleteVersion&&e.push("x"),this.filter&&e.push("f"),this.tag&&e.push("t"),this.list&&e.push("l"),this.add&&e.push("a"),this.create&&e.push("c"),this.update&&e.push("u"),this.process&&e.push("p"),this.setImmutabilityPolicy&&e.push("i"),this.permanentDelete&&e.push("y"),e.join("")}}class uc{constructor(){this.service=!1,this.container=!1,this.object=!1}static parse(e){const t=new uc;for(const a of e)switch(a){case"s":t.service=!0;break;case"c":t.container=!0;break;case"o":t.object=!0;break;default:throw new RangeError(`Invalid resource type: ${a}`)}return t}toString(){const e=[];return this.service&&e.push("s"),this.container&&e.push("c"),this.object&&e.push("o"),e.join("")}}class yc{constructor(){this.blob=!1,this.file=!1,this.queue=!1,this.table=!1}static parse(e){const t=new yc;for(const a of e)switch(a){case"b":t.blob=!0;break;case"f":t.file=!0;break;case"q":t.queue=!0;break;case"t":t.table=!0;break;default:throw new RangeError(`Invalid service character: ${a}`)}return t}toString(){const e=[];return this.blob&&e.push("b"),this.table&&e.push("t"),this.queue&&e.push("q"),this.file&&e.push("f"),e.join("")}}function gc(e,t){const a=e.version?e.version:ya;if(e.permissions&&e.permissions.setImmutabilityPolicy&&a<"2020-08-04")throw RangeError("'version' must be >= '2020-08-04' when provided 'i' permission.");if(e.permissions&&e.permissions.deleteVersion&&a<"2019-10-10")throw RangeError("'version' must be >= '2019-10-10' when provided 'x' permission.");if(e.permissions&&e.permissions.permanentDelete&&a<"2019-10-10")throw RangeError("'version' must be >= '2019-10-10' when provided 'y' permission.");if(e.permissions&&e.permissions.tag&&a<"2019-12-12")throw RangeError("'version' must be >= '2019-12-12' when provided 't' permission.");if(e.permissions&&e.permissions.filter&&a<"2019-12-12")throw RangeError("'version' must be >= '2019-12-12' when provided 'f' permission.");if(e.encryptionScope&&a<"2020-12-06")throw RangeError("'version' must be >= '2020-12-06' when provided 'encryptionScope' in SAS.");const r=pc.parse(e.permissions.toString()),i=yc.parse(e.services).toString(),n=uc.parse(e.resourceTypes).toString();let s;s=a>="2020-12-06"?[t.accountName,r,i,n,e.startsOn?ja(e.startsOn,!1):"",ja(e.expiresOn,!1),e.ipRange?zd(e.ipRange):"",e.protocol?e.protocol:"",a,e.encryptionScope?e.encryptionScope:"",""].join("\n"):[t.accountName,r,i,n,e.startsOn?ja(e.startsOn,!1):"",ja(e.expiresOn,!1),e.ipRange?zd(e.ipRange):"",e.protocol?e.protocol:"",a,""].join("\n");const o=t.computeHMACSHA256(s);return{sasQueryParameters:new Od(a,o,r.toString(),i,n,e.protocol,e.startsOn,e.expiresOn,e.ipRange,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,void 0,e.encryptionScope),stringToSign:s}}class hc extends fd{static fromConnectionString(e,t){t=t||{};const a=Ma(e);if("AccountConnString"===a.kind){if(G){const e=new mr(a.accountName,a.accountKey);t.proxyOptions||(t.proxyOptions=Re(a.proxyUri));const r=vr(e,t);return new hc(a.url,r)}throw new Error("Account connection string is only supported in Node.js environment")}if("SASConnString"===a.kind){const e=vr(new pr,t);return new hc(a.url+"?"+a.accountSas,e)}throw new Error("Connection string must be either an Account connection string or a SAS connection string")}constructor(e,t,a){let r;r=fr(t)?t:G&&t instanceof mr||t instanceof pr||tt(t)?vr(t,a):vr(new pr,a),super(e,r),this.serviceContext=this.storageClientContext.service}getContainerClient(e){return new cc(Ta(this.url,encodeURIComponent(e)),this.pipeline)}async createContainer(e,t={}){return Sd.withSpan("BlobServiceClient-createContainer",t,(async t=>{const a=this.getContainerClient(e),r=await a.create(t);return{containerClient:a,containerCreateResponse:r}}))}async deleteContainer(e,t={}){return Sd.withSpan("BlobServiceClient-deleteContainer",t,(async t=>this.getContainerClient(e).delete(t)))}async undeleteContainer(e,t,a={}){return Sd.withSpan("BlobServiceClient-undeleteContainer",a,(async r=>{const i=this.getContainerClient(a.destinationContainerName||e),n=i.storageClientContext.container;return{containerClient:i,containerUndeleteResponse:ar(await n.restore({deletedContainerName:e,deletedContainerVersion:t,tracingOptions:r.tracingOptions}))}}))}async renameContainer(e,t,a={}){return Sd.withSpan("BlobServiceClient-renameContainer",a,(async r=>{var i;const n=this.getContainerClient(t),s=n.storageClientContext.container;return{containerClient:n,containerRenameResponse:ar(await s.rename(e,Object.assign(Object.assign({},r),{sourceLeaseId:null===(i=a.sourceCondition)||void 0===i?void 0:i.leaseId})))}}))}async getProperties(e={}){return Sd.withSpan("BlobServiceClient-getProperties",e,(async t=>ar(await this.serviceContext.getProperties({abortSignal:e.abortSignal,tracingOptions:t.tracingOptions}))))}async setProperties(e,t={}){return Sd.withSpan("BlobServiceClient-setProperties",t,(async a=>ar(await this.serviceContext.setProperties(e,{abortSignal:t.abortSignal,tracingOptions:a.tracingOptions}))))}async getStatistics(e={}){return Sd.withSpan("BlobServiceClient-getStatistics",e,(async t=>ar(await this.serviceContext.getStatistics({abortSignal:e.abortSignal,tracingOptions:t.tracingOptions}))))}async getAccountInfo(e={}){return Sd.withSpan("BlobServiceClient-getAccountInfo",e,(async t=>ar(await this.serviceContext.getAccountInfo({abortSignal:e.abortSignal,tracingOptions:t.tracingOptions}))))}async listContainersSegment(e,t={}){return Sd.withSpan("BlobServiceClient-listContainersSegment",t,(async a=>ar(await this.serviceContext.listContainersSegment(Object.assign(Object.assign({abortSignal:t.abortSignal,marker:e},t),{include:"string"==typeof t.include?[t.include]:t.include,tracingOptions:a.tracingOptions})))))}async findBlobsByTagsSegment(e,t,a={}){return Sd.withSpan("BlobServiceClient-findBlobsByTagsSegment",a,(async r=>{const i=ar(await this.serviceContext.filterBlobs({abortSignal:a.abortSignal,where:e,marker:t,maxPageSize:a.maxPageSize,tracingOptions:r.tracingOptions})),n=Object.assign(Object.assign({},i),{_response:i._response,blobs:i.blobs.map((e=>{var t;let a="";return 1===(null===(t=e.tags)||void 0===t?void 0:t.blobTagSet.length)&&(a=e.tags.blobTagSet[0].value),Object.assign(Object.assign({},e),{tags:Xa(e.tags),tagValue:a})}))});return n}))}findBlobsByTagsSegments(e,t){return Ze(this,arguments,(function*(e,t,a={}){let r;if(t||void 0===t)do{r=yield Je(this.findBlobsByTagsSegment(e,t,a)),r.blobs=r.blobs||[],t=r.continuationToken,yield yield Je(r)}while(t)}))}findBlobsByTagsItems(e){return Ze(this,arguments,(function*(e,t={}){var a,r,i,n;try{for(var s,o=!0,m=et(this.findBlobsByTagsSegments(e,void 0,t));!(a=(s=yield Je(m.next())).done);o=!0){n=s.value,o=!1;const e=n;yield Je(yield*Ye(et(e.blobs)))}}catch(e){r={error:e}}finally{try{o||a||!(i=m.return)||(yield Je(i.call(m)))}finally{if(r)throw r.error}}}))}findBlobsByTags(e,t={}){const a=Object.assign({},t),r=this.findBlobsByTagsItems(e,a);return{next:()=>r.next(),[Symbol.asyncIterator](){return this},byPage:(t={})=>this.findBlobsByTagsSegments(e,t.continuationToken,Object.assign({maxPageSize:t.maxPageSize},a))}}listSegments(e){return Ze(this,arguments,(function*(e,t={}){let a;if(e||void 0===e)do{a=yield Je(this.listContainersSegment(e,t)),a.containerItems=a.containerItems||[],e=a.continuationToken,yield yield Je(yield Je(a))}while(e)}))}listItems(){return Ze(this,arguments,(function*(e={}){var t,a,r,i;try{for(var n,s=!0,o=et(this.listSegments(void 0,e));!(t=(n=yield Je(o.next())).done);s=!0){i=n.value,s=!1;const e=i;yield Je(yield*Ye(et(e.containerItems)))}}catch(e){a={error:e}}finally{try{s||t||!(r=o.return)||(yield Je(r.call(o)))}finally{if(a)throw a.error}}}))}listContainers(e={}){""===e.prefix&&(e.prefix=void 0);const t=[];e.includeDeleted&&t.push("deleted"),e.includeMetadata&&t.push("metadata"),e.includeSystem&&t.push("system");const a=Object.assign(Object.assign({},e),t.length>0?{include:t}:{}),r=this.listItems(a);return{next:()=>r.next(),[Symbol.asyncIterator](){return this},byPage:(e={})=>this.listSegments(e.continuationToken,Object.assign({maxPageSize:e.maxPageSize},a))}}async getUserDelegationKey(e,t,a={}){return Sd.withSpan("BlobServiceClient-getUserDelegationKey",a,(async r=>{const i=ar(await this.serviceContext.getUserDelegationKey({startsOn:ja(e,!1),expiresOn:ja(t,!1)},{abortSignal:a.abortSignal,tracingOptions:r.tracingOptions})),n={signedObjectId:i.signedObjectId,signedTenantId:i.signedTenantId,signedStartsOn:new Date(i.signedStartsOn),signedExpiresOn:new Date(i.signedExpiresOn),signedService:i.signedService,signedVersion:i.signedVersion,value:i.value};return Object.assign({_response:i._response,requestId:i.requestId,clientRequestId:i.clientRequestId,version:i.version,date:i.date,errorCode:i.errorCode},n)}))}getBlobBatchClient(){return new dc(this.url,this.pipeline)}generateAccountSasUrl(e,t=pc.parse("r"),a="sco",r={}){if(!(this.credential instanceof mr))throw RangeError("Can only generate the account SAS when the client is initialized with a shared key credential");if(void 0===e){const t=new Date;e=new Date(t.getTime()+36e5)}const i=(n=Object.assign({permissions:t,expiresOn:e,resourceTypes:a,services:yc.parse("b").toString()},r),s=this.credential,gc(n,s).sasQueryParameters).toString();var n,s;return La(this.url,i)}generateSasStringToSign(e,t=pc.parse("r"),a="sco",r={}){if(!(this.credential instanceof mr))throw RangeError("Can only generate the account SAS when the client is initialized with a shared key credential");if(void 0===e){const t=new Date;e=new Date(t.getTime()+36e5)}return gc(Object.assign({permissions:t,expiresOn:e,resourceTypes:a,services:yc.parse("b").toString()},r),this.credential).stringToSign}}!function(e){e.AES256="AES256"}(sc||(sc={}))},7:e=>{"use strict";var t,a="object"==typeof Reflect?Reflect:null,r=a&&"function"==typeof a.apply?a.apply:function(e,t,a){return Function.prototype.apply.call(e,t,a)};t=a&&"function"==typeof a.ownKeys?a.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var i=Number.isNaN||function(e){return e!=e};function n(){n.init.call(this)}e.exports=n,e.exports.once=function(e,t){return new Promise((function(a,r){function i(a){e.removeListener(t,n),r(a)}function n(){"function"==typeof e.removeListener&&e.removeListener("error",i),a([].slice.call(arguments))}g(e,t,n,{once:!0}),"error"!==t&&function(e,t){"function"==typeof e.on&&g(e,"error",t,{once:!0})}(e,i)}))},n.EventEmitter=n,n.prototype._events=void 0,n.prototype._eventsCount=0,n.prototype._maxListeners=void 0;var s=10;function o(e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function m(e){return void 0===e._maxListeners?n.defaultMaxListeners:e._maxListeners}function l(e,t,a,r){var i,n,s,l;if(o(a),void 0===(n=e._events)?(n=e._events=Object.create(null),e._eventsCount=0):(void 0!==n.newListener&&(e.emit("newListener",t,a.listener?a.listener:a),n=e._events),s=n[t]),void 0===s)s=n[t]=a,++e._eventsCount;else if("function"==typeof s?s=n[t]=r?[a,s]:[s,a]:r?s.unshift(a):s.push(a),(i=m(e))>0&&s.length>i&&!s.warned){s.warned=!0;var d=new Error("Possible EventEmitter memory leak detected. "+s.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");d.name="MaxListenersExceededWarning",d.emitter=e,d.type=t,d.count=s.length,l=d,console&&console.warn&&console.warn(l)}return e}function d(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function c(e,t,a){var r={fired:!1,wrapFn:void 0,target:e,type:t,listener:a},i=d.bind(r);return i.listener=a,r.wrapFn=i,i}function p(e,t,a){var r=e._events;if(void 0===r)return[];var i=r[t];return void 0===i?[]:"function"==typeof i?a?[i.listener||i]:[i]:a?function(e){for(var t=new Array(e.length),a=0;a<t.length;++a)t[a]=e[a].listener||e[a];return t}(i):y(i,i.length)}function u(e){var t=this._events;if(void 0!==t){var a=t[e];if("function"==typeof a)return 1;if(void 0!==a)return a.length}return 0}function y(e,t){for(var a=new Array(t),r=0;r<t;++r)a[r]=e[r];return a}function g(e,t,a,r){if("function"==typeof e.on)r.once?e.once(t,a):e.on(t,a);else{if("function"!=typeof e.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof e);e.addEventListener(t,(function i(n){r.once&&e.removeEventListener(t,i),a(n)}))}}Object.defineProperty(n,"defaultMaxListeners",{enumerable:!0,get:function(){return s},set:function(e){if("number"!=typeof e||e<0||i(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");s=e}}),n.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},n.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||i(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},n.prototype.getMaxListeners=function(){return m(this)},n.prototype.emit=function(e){for(var t=[],a=1;a<arguments.length;a++)t.push(arguments[a]);var i="error"===e,n=this._events;if(void 0!==n)i=i&&void 0===n.error;else if(!i)return!1;if(i){var s;if(t.length>0&&(s=t[0]),s instanceof Error)throw s;var o=new Error("Unhandled error."+(s?" ("+s.message+")":""));throw o.context=s,o}var m=n[e];if(void 0===m)return!1;if("function"==typeof m)r(m,this,t);else{var l=m.length,d=y(m,l);for(a=0;a<l;++a)r(d[a],this,t)}return!0},n.prototype.addListener=function(e,t){return l(this,e,t,!1)},n.prototype.on=n.prototype.addListener,n.prototype.prependListener=function(e,t){return l(this,e,t,!0)},n.prototype.once=function(e,t){return o(t),this.on(e,c(this,e,t)),this},n.prototype.prependOnceListener=function(e,t){return o(t),this.prependListener(e,c(this,e,t)),this},n.prototype.removeListener=function(e,t){var a,r,i,n,s;if(o(t),void 0===(r=this._events))return this;if(void 0===(a=r[e]))return this;if(a===t||a.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete r[e],r.removeListener&&this.emit("removeListener",e,a.listener||t));else if("function"!=typeof a){for(i=-1,n=a.length-1;n>=0;n--)if(a[n]===t||a[n].listener===t){s=a[n].listener,i=n;break}if(i<0)return this;0===i?a.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(a,i),1===a.length&&(r[e]=a[0]),void 0!==r.removeListener&&this.emit("removeListener",e,s||t)}return this},n.prototype.off=n.prototype.removeListener,n.prototype.removeAllListeners=function(e){var t,a,r;if(void 0===(a=this._events))return this;if(void 0===a.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==a[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete a[e]),this;if(0===arguments.length){var i,n=Object.keys(a);for(r=0;r<n.length;++r)"removeListener"!==(i=n[r])&&this.removeAllListeners(i);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=a[e]))this.removeListener(e,t);else if(void 0!==t)for(r=t.length-1;r>=0;r--)this.removeListener(e,t[r]);return this},n.prototype.listeners=function(e){return p(this,e,!0)},n.prototype.rawListeners=function(e){return p(this,e,!1)},n.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):u.call(e,t)},n.prototype.listenerCount=u,n.prototype.eventNames=function(){return this._eventsCount>0?t(this._events):[]}}},t={};function a(r){var i=t[r];if(void 0!==i)return i.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,a),n.exports}a.d=(e,t)=>{for(var r in t)a.o(t,r)&&!a.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};const{BlobServiceClient:r}=a(134);uploadFile=async function(e){const t=document.createElement("li");t.className="file-item",t.innerHTML=`\n        <div style="flex-grow: 1;">\n            <div>${e.name}</div>\n            <div class="progress-bar">\n                <div class="progress"></div>\n            </div>\n        </div>\n    `,fileList.appendChild(t);const a=t.querySelector(".progress");try{sasUrl=url+"?"+document.querySelector("#sasKey").value;const i=new r(sasUrl).getContainerClient(containerName).getBlockBlobClient(folder+"/"+e.name);await i.uploadData(e,{onProgress:t=>{const r=Math.round(t.loadedBytes/e.size*100);a.style.width=`${r}%`}});const n=document.createElement("li");n.className="completed-item",n.innerHTML=`\n            <svg width="16" height="16" viewBox="0 0 16 16">\n                <path fill="#2E7D32" d="M6.667 12.277L3.11 8.72l1.11-1.11 2.447 2.447 5.557-5.557 1.11 1.11z"/>\n            </svg>\n            ${e.name}\n        `,completedList.appendChild(n),setTimeout((()=>{fileList.removeChild(t)}),1e3),showStatus(`${e.name} uploaded successfully!`,"success")}catch(t){console.error(t),showStatus(`Error uploading ${e.name}: ${t.message}`,"error")}}})();